{"update": "id:blog-p:paragraph::blog/open-sourcing-vespa-yahoos-big-data-processing/index.html-", "fields": {"questions": {"assign": ["How does Vespa distribute data?", "How does Vespa differ from Hadoop and Storm?", "What is the experience of developing with Vespa like?"]}}}
{"update": "id:blog-p:paragraph::blog/the-basics-of-vespa-applications/index.html-", "fields": {"questions": {"assign": ["What is Vespa?", "What is the quick-start guide?", "What is the blog search tutorial?", "What is the News search tutorial?"]}}}
{"update": "id:blog-p:paragraph::blog/the-basics-of-vespa-applications/index.html-application-packages", "fields": {"questions": {"assign": ["What is an application package?", "What does an application package contain?", "What are the mandatory parts of an application specification?", "What is a services specification?", "What is a hosts specification?", "What is a basic production ready Vespa application?", "What can application specific Java components do?"]}}}
{"update": "id:blog-p:paragraph::blog/the-basics-of-vespa-applications/index.html-the-schema-definition", "fields": {"questions": {"assign": ["What is a search definition?", "What fields can be configured?"]}}}
{"update": "id:blog-p:paragraph::blog/the-basics-of-vespa-applications/index.html-the-services-definition", "fields": {"questions": {"assign": ["What services make up a Vespa application?", "What is services.xml?", "What is included in services.xml?", "What is the content cluster?", "How are documents stored and searched?"]}}}
{"update": "id:blog-p:paragraph::blog/the-basics-of-vespa-applications/index.html-the-hosts-definition", "fields": {"questions": {"assign": ["What is hosts.xml?", "What is services.xml?", "What does the hosts.xml contain?", "What is the purpose of the aliases in hosts.xml?", "What is defined in services.xml?", "How are aliases used in services.xml?", "What is the relationship between hosts.xml and services.xml?", "What does the deployment specification contain?"]}}}
{"update": "id:blog-p:paragraph::blog/the-basics-of-vespa-applications/index.html-deploying-applications", "fields": {"questions": {"assign": ["What is vespa-deploy?", "What happens when new package is deployed?"]}}}
{"update": "id:blog-p:paragraph::blog/the-basics-of-vespa-applications/index.html-writing-data-to-vespa", "fields": {"questions": {"assign": ["What is a search definition?", "What is Vespa's JSON document format?", "What is data feeding in Vespa?", "What are the tools to feed data?", "What is a document processor?", "What is a processing pipeline?", "What is enrichment?", "What are the use cases of document processors?"]}}}
{"update": "id:blog-p:paragraph::blog/the-basics-of-vespa-applications/index.html-querying-vespa", "fields": {"questions": {"assign": ["How does Vespa handle wildcards?", "Can Vespa search multiple content clusters?"]}}}
{"update": "id:blog-p:paragraph::blog/the-basics-of-vespa-applications/index.html-ranking-models", "fields": {"questions": {"assign": ["What is ranking in Vespa?", "What is a ranking expression?", "What is nativeRank function?", "What is the second-phase ranking expression used for?", "How can ranking expressions be used for recommendation applications?"]}}}
{"update": "id:blog-p:paragraph::blog/the-basics-of-vespa-applications/index.html-grouping-and-aggregation", "fields": {"questions": {"assign": ["What are common use cases for group and aggregate?", "Can Vespa perform nested groups and multiple aggregations?", "What types of fields can be used to group documents?", "How can documents be grouped by time and date?", "What functions can be used to calculate field values?", "Can group and aggregate be used in the same query?", "How does Vespa handle nested groups and multiple aggregations?"]}}}
{"update": "id:blog-p:paragraph::blog/blog-p-search-application-in-vespa/index.html-", "fields": {"questions": {"assign": ["Where can I find updated sample applications?", "Which tutorial has the updated information?"]}}}
{"update": "id:blog-p:paragraph::blog/blog-p-search-application-in-vespa/index.html-introduction", "fields": {"questions": {"assign": ["What is this blog post about?", "What is the Kaggle challenge about?", "What is the end goal of the application?", "What does the first part address?", "How can Vespa be used in a blog post search engine?", "What is the purpose of extending the search engine with machine learned models?", "What kind of data is used in the Kaggle challenge?"]}}}
{"update": "id:blog-p:paragraph::blog/blog-p-search-application-in-vespa/index.html-dataset", "fields": {"questions": {"assign": ["What is the dataset about?", "What is post_id?", "What is date_gmt?"]}}}
{"update": "id:blog-p:paragraph::blog/blog-p-search-application-in-vespa/index.html-downloading-raw-data", "fields": {"questions": {"assign": ["What is the size of trainPosts.json?", "Where can I download trainPosts.zip?", "How many posts are in the training data?", "What actions are included in the training data?", "How long is the time frame of the training data?", "What format is the training data in?", "What is the purpose of the training data?", "What is the size of trainPosts.zip?"]}}}
{"update": "id:blog-p:paragraph::blog/blog-p-search-application-in-vespa/index.html-searching-blog-posts", "fields": {"questions": {"assign": ["What is a search definition?", "What are the fields of a blog_post document?", "What is the url field type?", "What is the date_gmt field type?", "Can blog posts be sorted by both relevance and date?", "Can search results be grouped by tag or category?"]}}}
{"update": "id:blog-p:paragraph::blog/blog-p-search-application-in-vespa/index.html-application-packages", "fields": {"questions": {"assign": ["What is an application package?", "What is services.xml?", "What is hosts.xml?", "What is the purpose of services.xml?", "What does services.xml define?", "What does content in hosts.xml define?", "What is search definition?", "What is indexed in search definition?"]}}}
{"update": "id:blog-p:paragraph::blog/blog-p-search-application-in-vespa/index.html-deploy-the-application-package", "fields": {"questions": {"assign": ["What is the syntax to deploy a Vespa application?", "How do you activate a Vespa application?"]}}}
{"update": "id:blog-p:paragraph::blog/blog-p-search-application-in-vespa/index.html-feeding-data", "fields": {"questions": {"assign": ["What is a valid Vespa document format?", "How to feed data to Vespa?", "What is the Java feeding API?", "How to track feeding progress?", "What is the Metrics API used for?", "How to fetch documents by id?", "Where can I find sample data for Vespa?"]}}}
{"update": "id:blog-p:paragraph::blog/blog-p-search-application-in-vespa/index.html-the-first-query", "fields": {"questions": {"assign": ["How is searching done in Vespa?", "What is yql?", "What is the special field sddocname?", "What does adding tracelevel=9 to the search request do?"]}}}
{"update": "id:blog-p:paragraph::blog/blog-p-search-application-in-vespa/index.html-relevance-and-ranking", "fields": {"questions": {"assign": ["What are rank profiles?", "How can relevance be changed?", "What is relevance?", "What is the default relevance formula?", "What are rank expressions?", "What is post_popularity?", "What is the purpose of first-phase in Vespa?", "What is the purpose of the default rank profile in Vespa?"]}}}
{"update": "id:blog-p:paragraph::blog/blog-p-search-application-in-vespa/index.html-sorting-and-grouping", "fields": {"questions": {"assign": ["What is an attribute?", "What is attribute:fast-search?", "How can an attribute be used for range searches?", "What is sorting in Vespa?", "How can grouping be used in Vespa?", "What are some common use cases of grouping in Vespa?", "How can I use Vespa to display groups and their sizes on a search result page?"]}}}
{"update": "id:blog-p:paragraph::blog/blog-p-search-application-in-vespa/index.html-attribute-limitations", "fields": {"questions": {"assign": ["What are Vespa attributes?", "How does Vespa match attributes?", "When should attributes be used?"]}}}
{"update": "id:blog-p:paragraph::blog/blog-p-search-application-in-vespa/index.html-clean-environment-by-removing-all-documents", "fields": {"questions": {"assign": ["What is vespa-remove-index?", "What does vespa-remove-index remove?", "What commands are used to remove the index?", "How can I remove all documents with Vespa?", "What should I do before running vespa-remove-index?", "What happens after running vespa-remove-index?", "How do I start Vespa services again after running vespa-remove-index?"]}}}
{"update": "id:blog-p:paragraph::blog/blog-p-search-application-in-vespa/index.html-conclusion", "fields": {"questions": {"assign": ["How can Vespa help?", "What is Statistics and Machine Learning?", "How can Vespa be extended?"]}}}
{"update": "id:blog-p:paragraph::blog/kimomarjohansenyahoono/index.html-", "fields": {"questions": {"assign": ["What is Vespa?", "Where is the meetup?", "When is the meetup?", "Is registration mandatory?", "What is the agenda?", "What is the purpose of the meetup?", "Why attend the Vespa meetup?"]}}}
{"update": "id:blog-p:paragraph::blog/blog-p-recommendation-in-vespa/index.html-introduction", "fields": {"questions": {"assign": ["What does this document build upon?", "How does the application recommend blog posts?", "What is the user identification number?", "What is trainPosts.json?", "Where should vespa-hadoop.jar be located?"]}}}
{"update": "id:blog-p:paragraph::blog/blog-p-recommendation-in-vespa/index.html-collaborative-filtering", "fields": {"questions": {"assign": ["What is implicit feedback?", "How is implicit feedback treated?", "What is the concept of confidence?", "What is collaborative filtering?", "What is the cold start problem?", "What is content-based techniques?", "What is the significance of latent factors?"]}}}
{"update": "id:blog-p:paragraph::blog/blog-p-recommendation-in-vespa/index.html-evaluation-metrics", "fields": {"questions": {"assign": ["What is the evaluation metric?", "What is MAP@100?", "What is offline evaluation?", "What is the expected percentile ranking?"]}}}
{"update": "id:blog-p:paragraph::blog/blog-p-recommendation-in-vespa/index.html-add-vectors-to-search-definitions-using-tensors", "fields": {"questions": {"assign": ["What is the Tensor framework?", "What is user_item_cf?", "What is a search definition?", "What is has_user_item_cf?", "What is a user_id?", "What is user.sd?", "What is the purpose of user_item_cf?", "What is the function of has_user_item_cf?"]}}}
{"update": "id:blog-p:paragraph::blog/blog-p-recommendation-in-vespa/index.html-join-and-feed-data", "fields": {"questions": {"assign": ["What is the command to prepare and activate Vespa application?", "What is the format for feeding data to Vespa from Pig?", "What does the tutorial_feed_content_and_tensor_vespa.pig file contain?", "What is the purpose of the 'trainPosts.json' file?", "What is the expected output after a successful data join and feed?", "What is the purpose of the 'blog-recommendation' document type?"]}}}
{"update": "id:blog-p:paragraph::blog/blog-p-recommendation-in-vespa/index.html-ranking", "fields": {"questions": {"assign": ["How is the dot product computed?", "What is a blog post tensor?", "How is the ranking framework configured?", "What is the ranking feature named?", "What is the type of the ranking feature?"]}}}
{"update": "id:blog-p:paragraph::blog/blog-p-recommendation-in-vespa/index.html-query-vespa-with-a-tensor", "fields": {"questions": {"assign": ["What is the `user_item_cf` attribute?", "What is the `blog_post.sd`?"]}}}
{"update": "id:blog-p:paragraph::blog/blog-p-recommendation-in-vespa/index.html-query-vespa-with-user-id", "fields": {"questions": {"assign": ["How to query Vespa by user id?", "What is `user_item_cf` field for?", "How to retrieve user profile?", "How to add user profile tensor?"]}}}
{"update": "id:blog-p:paragraph::blog/blog-p-recommendation-in-vespa/index.html-model-tuning-and-offline-evaluation", "fields": {"questions": {"assign": ["What is the purpose of optimizing latent factors?", "What is the input file for the pig script?", "What is the purpose of the VespaQuery Java UDF?", "What values does the cross-validation algorithm try for rank?", "What is the output of the compute metric Pig script?", "What is the expected percentile ranking?"]}}}
{"update": "id:blog-p:paragraph::blog/blog-p-recommendation-in-vespa/index.html-vespa-and-hadoop", "fields": {"questions": {"assign": ["What is Apache Hadoop?", "What is Apache Pig?", "What is Apache Spark?", "What are the tools for Vespa and Hadoop interaction?", "How do you use Pig to feed a file into Vespa?", "What are some example apps for feeding to Vespa from Pig?"]}}}
{"update": "id:blog-p:paragraph::blog/blog-p-recommendation-with-neural-network-models/index.html-introduction", "fields": {"questions": {"assign": ["How to deploy neural network models?", "What is the multi-phase ranking model?", "Can any model be deployed in Vespa?", "What types of models can be deployed?", "How does the multi-phase ranking model work?", "What is the benefit of using the multi-phase ranking model?", "Can expensive models be used in Vespa?"]}}}
{"update": "id:blog-p:paragraph::blog/blog-p-recommendation-with-neural-network-models/index.html-model-training", "fields": {"questions": {"assign": ["What is the neural network model?", "What is the sigmoid function?", "What is the rectifier activation function?", "What is TensorFlow used for?", "How is the model trained?", "What is the format of the training dataset?", "How is negative feedback generated?", "Where is the script to train the model located?"]}}}
{"update": "id:blog-p:paragraph::blog/blog-p-recommendation-with-neural-network-models/index.html-", "fields": {"questions": {"assign": ["How can Vespa relieve complex expressions?", "What is a constant tensor?", "What is the code to serialize W1?", "How can model parameters be defined?", "What is the rank expression for the Tensor profile?", "What is the second-ranked profile that uses the neural network model?"]}}}
{"update": "id:blog-p:paragraph::blog/blog-p-recommendation-with-neural-network-models/index.html-offline-evaluation", "fields": {"questions": {"assign": ["What is the `nn_tensor` ranking profile?", "What is the expected percentile ranking?", "What is the `tutorial_compute_metric.pig` script?", "How many relevant documents were retrieved using `nn_tensor`?", "How many relevant documents were retrieved using `tensor`?", "What is the output of the script?"]}}}
{"update": "id:blog-p:paragraph::blog/optimizing-realtime-evaluation-of-neural-net/index.html-", "fields": {"questions": {"assign": ["How does Vespa optimize tensor evaluation?", "How did Vespa improve neural network evaluation performance?", "What was the ranking expression optimized in Vespa?", "What steps were taken to optimize the ranking expression?", "What was the biggest percent wise performance boost for optimizing the ranking expression in Vespa?"]}}}
{"update": "id:blog-p:paragraph::blog/introducing-tensorflow-support/index.html-", "fields": {"questions": {"assign": ["What is TensorFlow import?", "What are the limitations of TensorFlow import?", "What search and rank features can be used with TensorFlow models?", "What operations are not supported by Vespa's TensorFlow import?"]}}}
{"update": "id:blog-p:paragraph::blog/scaling-tensorflow-model-evaluation-with-vespa/index.html-", "fields": {"questions": {"assign": ["What is the difference between Vespa and TensorFlow?", "How does Vespa evaluate TensorFlow models?", "What is the collaborative filtering model?", "What are the latency and QPS numbers for Vespa ranking and TensorFlow batch ranking?", "How does Vespa scale better than TensorFlow?"]}}}
{"update": "id:blog-p:paragraph::blog/parent-child-in-vespa/index.html-", "fields": {"questions": {"assign": ["What are parent-child relationships?", "How do parent-child relationships work?", "Why use parent-child relationships?", "How to model hierarchical relations?", "Does this feature affect performance?", "How to use parent-child relationships?", "What are practical considerations?"]}}}
{"update": "id:blog-p:paragraph::blog/parent-child-in-vespa/index.html-introduction", "fields": {"questions": {"assign": ["What are parent-child relationships?", "Why use parent-child relationships?", "What are the challenges of scaling joins?", "What is NoSQL?", "What is data normalization?", "What is the hypothetical use case?"]}}}
{"update": "id:blog-p:paragraph::blog/parent-child-in-vespa/index.html-parent-child-support-in-vespa", "fields": {"questions": {"assign": ["What are reference fields?", "What are imported fields?", "How do you query with imported fields?", "What are global documents?"]}}}
{"update": "id:blog-p:paragraph::blog/parent-child-in-vespa/index.html-performance", "fields": {"questions": {"assign": ["What is the speedup for 10 ads per campaign?", "What is the relative speedup for 1000 ads per campaign?", "What is the latency for imported budgets?", "What is the latency for denormalized budgets?", "What was the result of the biggest fan-out?", "What is the cost associated with higher fan-outs?"]}}}
{"update": "id:blog-p:paragraph::blog/parent-child-in-vespa/index.html-practical-concerns", "fields": {"questions": {"assign": ["What is parent-child in Vespa?", "What is the use case for parent-child?", "Can parent-child be used for arbitrary graphs?", "What queries can be searched using parent-child references?", "Does parent-child reference enforce referential integrity constraints?", "Is there any performance penalty associated with parent-child indirection?", "What fields must be declared as attribute in the parent document type for import?", "What is the biggest caveat with the parent-child feature?"]}}}
{"update": "id:blog-p:paragraph::blog/parent-child-in-vespa/index.html-comparisons-with-other-systems", "fields": {"questions": {"assign": ["What is ElasticSearch?", "What is parent-child in ElasticSearch?", "How does Vespa handle parent references?", "What is global ordinals index?", "How does Vespa compare to ElasticSearch in terms of query slowdowns?", "What is the difference between Vespa and ElasticSearch in terms of changing parent reference?", "Does Vespa support querying parents based on properties of their children?", "What are some examples of distributed SQL stores?"]}}}
{"update": "id:blog-p:paragraph::blog/parent-child-in-vespa/index.html-summary", "fields": {"questions": {"assign": ["What is Vespa's parent-child feature?", "How does a parent-child feature normalize data models?", "What are the benefits of introducing parents?", "What is the impact of introducing parents on search queries?", "What is Vespa Engine on Gitter?", "What use cases can parent-child be used for?"]}}}
{"update": "id:blog-p:paragraph::blog/introducing-onnx-support/index.html-", "fields": {"questions": {"assign": ["What is ONNX?", "What does ONNX support in Vespa enable?", "What are the benefits of ONNX support in Vespa?", "What is the purpose of ONNX?", "What are the machine learning frameworks supported by Vespa?", "How does Vespa evaluate machine learned models at serving time?"]}}}
{"update": "id:blog-p:paragraph::blog/introducing-onnx-support/index.html-introduction", "fields": {"questions": {"assign": ["What are deep learning frameworks?", "What is ONNX?", "What problem does ONNX solve?", "What are characteristics of different frameworks?", "What is the problem with lacking interoperability?"]}}}
{"update": "id:blog-p:paragraph::blog/introducing-onnx-support/index.html-onnx", "fields": {"questions": {"assign": ["What is ONNX?", "What is the goal of ONNX?", "What is the role of Vespa in an AI ecosystem?", "How does Vespa support ONNX?", "What is the cost of evaluating ONNX and TensorFlow models in Vespa?", "What ONNX operations are not currently supported in Vespa?", "What is ONNX-ML?", "What is the future of ONNX support in Vespa?"]}}}
{"update": "id:blog-p:paragraph::blog/introducing-json-queries/index.html-", "fields": {"questions": {"assign": ["What is the POST request format?", "What is the SELECT parameter?", "What is the WHERE parameter?", "What is the GROUPING parameter?", "What are the advantages of POST requests?", "How can the new query builder GUI help?", "Where can I find more examples of POST queries?"]}}}
{"update": "id:blog-p:paragraph::blog/vespa-at-zedge-providing-personalization-content/index.html-", "fields": {"questions": {"assign": ["What is Zedge?", "What does Zedge use Vespa for?", "How many active users does Zedge have?", "What platforms does Zedge support?", "What is the architecture of Zedge's Vespa implementation?"]}}}
{"update": "id:blog-p:paragraph::blog/vespa-at-zedge-providing-personalization-content/index.html-why-zedge-considered-vespa", "fields": {"questions": {"assign": ["What is Zedge?", "What services does Zedge depend on for content discovery?", "What are the benefits of using Vespa for Zedge?", "What is the maximum amount of requests that Yahoo Gemini Ads Platform can handle with Vespa?", "How much operation support is required for Vespa applications at Oath?", "What are the built-in support for Tensorflow models in Vespa?", "What kind of help can Zedge get from Vespa core developers?"]}}}
{"update": "id:blog-p:paragraph::blog/vespa-at-zedge-providing-personalization-content/index.html-the-vespa-pilot-project", "fields": {"questions": {"assign": ["What are the goals for the pilot project with Vespa?", "What was the outcome of the pilot project?", "What are the benefits of using Vespa in search/recommender systems?", "What is the main benefit of Vespa in search/recommender systems?", "Which team members were involved in the pilot project?", "What API services can Vespa simplify and replace?", "What are the production costs of Vespa at Zedge's scale?", "What new innovation opportunities does Vespa give?"]}}}
{"update": "id:blog-p:paragraph::blog/vespa-at-zedge-providing-personalization-content/index.html-autosuggest-for-search-with-vespa", "fields": {"questions": {"assign": ["What is autosuggest?", "How is autosuggest configured?", "What is the autosuggest architecture?", "What external API is used for autosuggest?"]}}}
{"update": "id:blog-p:paragraph::blog/vespa-at-zedge-providing-personalization-content/index.html-search,-recommenders-and-related-content-with-vespa", "fields": {"questions": {"assign": ["How were services adapted to Vespa?", "What are custom Vespa searchers?", "What is the degree of dynamicity?", "What is the benefit of using Vespa for ranking signals?", "How was the amount of computational resources and code reduced?"]}}}
{"update": "id:blog-p:paragraph::blog/vespa-at-zedge-providing-personalization-content/index.html-continuous-integration-and-testing-with-vespa", "fields": {"questions": {"assign": ["What is the focus of the document?", "What tools are used for continuous integration?", "How is Vespa tested before deployment?", "What is Docker Compose?", "What is the advantage of using Docker Compose?", "Where is Vespa deployed for staging?", "How close is the test setup to production environment?"]}}}
{"update": "id:blog-p:paragraph::blog/vespa-at-zedge-providing-personalization-content/index.html-monitoring-of-vespa-with-prometheus-and-grafana", "fields": {"questions": {"assign": ["What is Vespa_exporter?", "What is Grafana?", "What is Prometheus?", "How can Vespa metrics be monitored?"]}}}
{"update": "id:blog-p:paragraph::blog/join-us-in-san-francisco-on-september-26th-for-a/index.html-", "fields": {"questions": {"assign": ["What will Jon Bratseth do?", "When is the meetup in San Francisco?", "What is the purpose of the meetup?", "What is the RSVP link?", "Who is Jon Bratseth?", "What is the Vespa team?", "What will be discussed at the meetup?"]}}}
{"update": "id:blog-p:paragraph::blog/sharing-vespa-at-the-sf-big-analytics-meetup/index.html-", "fields": {"questions": {"assign": ["Who presented Vespa at SF Big Analytics Meetup?", "When was Vespa presented at the SF Big Analytics Meetup?", "Who hosted the SF Big Analytics Meetup?", "Who attended the SF Big Analytics Meetup?", "Where can I find the presentation on Vespa?", "Are the slides for the Vespa presentation available?", "Who planned the SF Big Analytics Meetup?"]}}}
{"update": "id:blog-p:paragraph::blog/join-us-at-the-machine-learning-meetup-hosted-by/index.html-", "fields": {"questions": {"assign": ["What is the machine learning meetup?", "Who will be speaking at the meetup?", "What topics will be covered at the meetup?"]}}}
{"update": "id:blog-p:paragraph::blog/efficient-personal-search-at-large-scale/index.html-", "fields": {"questions": {"assign": ["What is streaming search?", "How does streaming search work?", "What is the problem with global indexes?", "What is the cost of maintaining global indexes?", "How does Vespa solve the problem of personal search at massive scale?", "What is the dominating cost of personal data stores?", "Why don't we need indexes in personal search?", "What is the advantage of streaming search over global indexes?"]}}}
{"update": "id:blog-p:paragraph::blog/efficient-personal-search-at-large-scale/index.html-numbers", "fields": {"questions": {"assign": ["How fast can the disk search?", "What is the max throughput?", "What affects the latency?", "How is latency calculated?", "How many documents can be stored?", "What determines max parallelism?", "What is the max number of documents per user?"]}}}
{"update": "id:blog-p:paragraph::blog/efficient-personal-search-at-large-scale/index.html-streaming-search", "fields": {"questions": {"assign": ["What is streaming mode", "How does Vespa compare to Elastic Search", "What is the cost reduction achieved by Vespa", "What is a log-level store", "How is search engine functionality implemented in Vespa"]}}}
{"update": "id:blog-p:paragraph::blog/efficient-personal-search-at-large-scale/index.html-using-streaming-search-on-vespa", "fields": {"questions": {"assign": ["What are the steps to using streaming search?", "How do you enable streaming mode?", "What is the query property for passing group id?", "What features does streaming search support?", "What is the documentation on streaming search?", "Does streaming search support text search?", "What is the advantage of using streaming search over other search solutions?"]}}}
{"update": "id:blog-p:paragraph::blog/vespa-7-is-released/index.html-", "fields": {"questions": {"assign": ["What is Vespa version 7?", "What are the changes in Vespa version 7?", "How do I upgrade to Vespa version 7?"]}}}
{"update": "id:blog-p:paragraph::blog/join-us-at-the-big-data-technology-warsaw-summit/index.html-", "fields": {"questions": {"assign": ["What is machine-learned model serving?", "What is the Big Data Technology Warsaw Summit?", "Who is Jon Bratseth?", "What is the problem with scaling model evaluation?", "How can Vespa.ai help in solving this problem?", "How does Vespa.ai compare to TensorFlow Serving in terms of performance and scalability?"]}}}
{"update": "id:blog-p:paragraph::blog/serving-article-comments-using-reinforcement/index.html-", "fields": {"questions": {"assign": ["What is the problem with user comments?", "What is reinforcement learning?", "How does the system pick comments?", "What is the purpose of the commenting system?", "What is the solution for picking interesting comments?"]}}}
{"update": "id:blog-p:paragraph::blog/serving-article-comments-using-reinforcement/index.html-real-time-comment-serving", "fields": {"questions": {"assign": ["What is the structure of a comment document in Vespa?", "How many comments can the Vespa instance store at any time?", "What is the average latency for queries in Vespa?", "How is data automatically sharded by Vespa?"]}}}
{"update": "id:blog-p:paragraph::blog/serving-article-comments-using-reinforcement/index.html-ranking-comments", "fields": {"questions": {"assign": ["How does Vespa rank comments?", "What is a ranking expression?", "How are user actions sent to Vespa?", "What features does Vespa use for ranking?", "What is the purpose of author documents in Vespa?"]}}}
{"update": "id:blog-p:paragraph::blog/serving-article-comments-using-reinforcement/index.html-using-a-neural-net-and-reinforcement-learning", "fields": {"questions": {"assign": ["What is the purpose of reinforcement learning?", "What is a neural net?", "How are comments ranked?", "What is the advantage of using a neural net?", "What signals are used as proxies for user interest?", "What is the production code to serve the neural net?", "How are the neural net parameters stored?"]}}}
{"update": "id:blog-p:paragraph::blog/serving-article-comments-using-reinforcement/index.html-results", "fields": {"questions": {"assign": ["What is the neural net model?", "How does Vespa evaluate the neural net?", "What is the response time for neural net ranking?", "What is reinforcement learning?", "What is the average dwell time increase from neural net?", "What is the solution for evaluating outlier articles?", "What is freshnessRank in the rank profile?"]}}}
{"update": "id:blog-p:paragraph::blog/serving-article-comments-using-reinforcement/index.html-conclusion-and-future-work", "fields": {"questions": {"assign": ["How to implement a comment ranking system in Vespa?", "Can Vespa be used in machine learning?", "What is reinforcement learning?", "Is Vespa an open source technology?", "What are the future plans for comment ranking with Vespa?"]}}}
{"update": "id:blog-p:paragraph::blog/vespa-use-case-shopping/index.html-", "fields": {"questions": {"assign": ["What is the shopping use case?", "What are the features highlighted?", "What is the goal of the use case series?", "What is the quick start guide?"]}}}
{"update": "id:blog-p:paragraph::blog/e-commerce-search-and-recommendation-with-vespaai/index.html-", "fields": {"questions": {"assign": ["How does Vespa.ai solve challenges in e-commerce search and recommendation?", "What e-commerce sites use Vespa.ai?", "What are the challenges in e-commerce search and recommendation?", "Why is Vespa.ai used as a search and recommendation backend?", "What are the features of Vespa.ai for e-commerce?"]}}}
{"update": "id:blog-p:paragraph::blog/e-commerce-search-and-recommendation-with-vespaai/index.html-text-matching-and-ranking-in-e-commerce-search", "fields": {"questions": {"assign": ["What are text ranking requirements?", "What is OpenNLP?", "What is Vespa text ranking?", "What is linguistic processing?", "What is TF-IDF?", "How does Vespa handle query term proximity?", "What is the influence of TF-IDF in e-commerce search?"]}}}
{"update": "id:blog-p:paragraph::blog/e-commerce-search-and-recommendation-with-vespaai/index.html-custom-ranking-business-logic-in-e-commerce-search", "fields": {"questions": {"assign": ["What is Vespa's ranking framework?", "What is the Vespa ranking expression language?", "How does Vespa control ranking?", "What is TensorFlow Ranking?", "How can MLR models be used with Vespa?"]}}}
{"update": "id:blog-p:paragraph::blog/e-commerce-search-and-recommendation-with-vespaai/index.html-facets-and-grouping-in-e-commerce-search", "fields": {"questions": {"assign": ["What is guided navigation?", "What is faceted search?", "What is Vespa Grouping Language?", "What does Vespa grouping language allow?", "Does Vespa support deep nested grouping?", "What is the benefit of using Vespa grouping language?", "Is pagination supported in Vespa grouping language?", "What is top n ranking in Vespa grouping language?"]}}}
{"update": "id:blog-p:paragraph::blog/e-commerce-search-and-recommendation-with-vespaai/index.html-the-vocabulary-mismatch-problem-in-e-commerce-search", "fields": {"questions": {"assign": ["What is vocabulary mismatch?", "What is semantic retrieval?", "What is the Universal Sentence Encoder?", "What is the sample application for retrieval in Vespa.ai?", "What is cosine similarity?", "What is multilingual retrieval?", "What is the advantage of semantic retrieval over traditional IR methods?"]}}}
{"update": "id:blog-p:paragraph::blog/e-commerce-search-and-recommendation-with-vespaai/index.html-query-classification-and-query-rewriting-in-e-commerce-search", "fields": {"questions": {"assign": ["What is query classification?", "What ML models does Vespa support?", "What is intent classification?", "What is query rewriting?", "What are the benefits of query classification in e-commerce search?", "What is category browse intent query?"]}}}
{"update": "id:blog-p:paragraph::blog/e-commerce-search-and-recommendation-with-vespaai/index.html-product-recommendation-in-e-commerce-search", "fields": {"questions": {"assign": ["What signals can Vespa use in real-time ML?", "What is the difference between online and offline inference architecture?"]}}}
{"update": "id:blog-p:paragraph::blog/e-commerce-search-and-recommendation-with-vespaai/index.html-keeping-your-e-commerce-index-up-to-date-with-real-time-updates", "fields": {"questions": {"assign": ["What is Vespa designed for?", "Why is updating product catalog important?", "What are real-time signals used for?", "What is true native support?", "What is the update rate of attribute fields?", "How are attribute fields stored and updated?", "What is the benefit of reflecting inventory status in search index?"]}}}
{"update": "id:blog-p:paragraph::blog/e-commerce-search-and-recommendation-with-vespaai/index.html-campaigns-in-e-commerce-search", "fields": {"questions": {"assign": ["What is a predicate field?", "How does a predicate field work?", "What are some examples of predicate fields?", "What is the purpose of predicate expressions?", "How are predicate expressions used for e-commerce search?", "What types of filtering logic can be expressed through predicate fields?", "What is the benefit of using predicate fields for promoting content?", "What is a recurring campaign and how can it be represented with predicate fields?"]}}}
{"update": "id:blog-p:paragraph::blog/e-commerce-search-and-recommendation-with-vespaai/index.html-scaling-&-performance-for-high-availability-in-e-commerce-search", "fields": {"questions": {"assign": ["How does Vespa handle shard concept?", "How does Vespa handle traffic spikes?", "What is the performance comparison of Vespa vs ElasticSearch?", "What is quality of search degradation in Vespa?", "What are the benefits of Vespa index over Lucene index?"]}}}
{"update": "id:blog-p:paragraph::blog/e-commerce-search-and-recommendation-with-vespaai/index.html-summary", "fields": {"questions": {"assign": ["What challenges does Vespa solve in e-commerce?", "What are some Vespa features for e-commerce?", "Where can I find Vespa's e-commerce sample application?", "How can Vespa be used for e-commerce search and recommendation?", "What is the recommended use of Vespa's e-commerce sample application?", "Is there any special offer for Vespa Cloud Service during holiday shopping season?"]}}}
{"update": "id:blog-p:paragraph::blog/learning-to-rank-with-vespa-getting-started-with/index.html-", "fields": {"questions": {"assign": ["What tutorial helps create a basic text search application?", "What tasks does MS MARCO dataset involve?", "What is the second tutorial about?", "What Vespa feature allows experimenting with ranking functions?", "What is the importance of going beyond pointwise loss functions for ML models?", "What tasks does the full document ranking task from MS MARCO dataset involve?", "What is the purpose of creating a training dataset in the second tutorial?"]}}}
{"update": "id:blog-p:paragraph::blog/learning-to-rank-with-vespa-getting-started-with/index.html-basic-text-search-app-in-a-nutshell", "fields": {"questions": {"assign": ["What is the main task when creating a basic app with Vespa?", "What is a search definition file?", "What does the search definition file contain?", "What is a rank-profile in Vespa?", "What is nativeRank rank feature?", "What is BM25 rank feature?", "How do you choose which rank-profile to use at query time?", "What is the advantage of having multiple rank-profiles?"]}}}
{"update": "id:blog-p:paragraph::blog/learning-to-rank-with-vespa-getting-started-with/index.html-data-collection-sanity-check", "fields": {"questions": {"assign": ["What is the goal of the sanity check?", "What is a baseline?", "What is the bm25 rank-profile?", "What kind of bugs can arise in data collection?", "What is the purpose of returning rank features?", "What is the suggested procedure for creating a training dataset?"]}}}
{"update": "id:blog-p:paragraph::blog/learning-to-rank-with-vespa-getting-started-with/index.html-how-to-create-a-training-dataset-with-vespa", "fields": {"questions": {"assign": ["How to list ranking features?", "What is YQL format?", "What is a rank-profile?", "What is a dataset?", "How to collect data?", "How to create a rank profile?", "What is the format of the dataset?"]}}}
{"update": "id:blog-p:paragraph::blog/learning-to-rank-with-vespa-getting-started-with/index.html-beyond-pointwise-loss-functions", "fields": {"questions": {"assign": ["What is binary cross-entropy?", "What is Mean Reciprocal Rank?", "What is TF-Ranking framework?", "How to train linear models?", "What is listwise loss function?", "Which loss function is preferable for ranking search results?", "What are the results of the linear models?"]}}}
{"update": "id:blog-p:paragraph::blog/the-big-data-maturity-levels/index.html-", "fields": {"questions": {"assign": ["What are big data maturity levels?", "What is the advantage of using data?", "Who goes through the main stages?"]}}}
{"update": "id:blog-p:paragraph::blog/the-big-data-maturity-levels/index.html-conclusion", "fields": {"questions": {"assign": ["Why reflect on organization maturity?", "How can organization maturity be helpful?", "What are organization maturity levels?", "Why move to maturity level 3?", "What are the benefits of moving to maturity level 3?"]}}}
{"update": "id:blog-p:paragraph::blog/why-most-computation-will-become-online/index.html-", "fields": {"questions": {"assign": ["What are big data maturity levels?", "What are the advantages of online computing?", "What challenges come with moving computations online?"]}}}
{"update": "id:blog-p:paragraph::blog/why-most-computation-will-become-online/index.html-1.-decisions-are-up-to-date", "fields": {"questions": {"assign": ["What are benefits of moving decisions online?", "How can moving decisions online lead to up-to-date information?", "What is an example of moving decisions online?", "How does moving decisions online improve movie recommendations?"]}}}
{"update": "id:blog-p:paragraph::blog/why-most-computation-will-become-online/index.html-2.-no-computation-goes-to-waste", "fields": {"questions": {"assign": ["What is the problem with computing offline?", "What is meant by staleness?", "Why is offline computation inefficient?"]}}}
{"update": "id:blog-p:paragraph::blog/why-most-computation-will-become-online/index.html-3.-high-fidelity-decisions", "fields": {"questions": {"assign": ["What is wasted computation?", "How do you limit decisions?", "What is offline computing?", "What is online computing?", "How do you recommend movies?", "Why stereotype users?", "What is the benefit of online computing?", "How do you group users for recommendations?"]}}}
{"update": "id:blog-p:paragraph::blog/why-most-computation-will-become-online/index.html-4.-architectural-simplicity", "fields": {"questions": {"assign": ["What is offline computing?", "What are the challenges of offline computing?", "What is serving time computing?", "How does serving time computing simplify architecture?"]}}}
{"update": "id:blog-p:paragraph::blog/vespa-ai-and-the-cord-19-public-api/index.html-", "fields": {"questions": {"assign": ["What is the cord19.vespa.ai search app?", "What is the CORD-19 dataset?", "What is vespa.ai?", "How can I contribute to the project?", "What is the public search API?", "Is the cord19.vespa.ai search app open-sourced?", "What is the purpose of this piece?", "What can be accomplished with Vespa?"]}}}
{"update": "id:blog-p:paragraph::blog/vespa-ai-and-the-cord-19-public-api/index.html-simple-query-language", "fields": {"questions": {"assign": ["What is the cord19.vespa.ai query interface?", "What is simple query language?", "What is a simple query example?", "How do you search for articles containing specific words and phrases?", "What is the syntax for simple queries?", "What is the cord19 API doc?", "Where can you find cord19 specific examples?", "How do you search for articles written by specific authors?"]}}}
{"update": "id:blog-p:paragraph::blog/vespa-ai-and-the-cord-19-public-api/index.html-vespa-search-api", "fields": {"questions": {"assign": ["What is Vespa's search API?", "What is the syntax for sending POST request?", "What is cord19.vespa.ai?", "What is the name of the python module to send requests to the Vespa search endpoint?", "What should I install to use the requests module?", "What is the purpose of requests.post()?"]}}}
{"update": "id:blog-p:paragraph::blog/vespa-ai-and-the-cord-19-public-api/index.html-search-by-query-terms", "fields": {"questions": {"assign": ["What is Vespa search API?", "How does Vespa rank articles?", "What is BM25?", "What is the match phase?", "What are Vespa weakAND operators?", "Where can I find more examples of YQL for the cord19 app?"]}}}
{"update": "id:blog-p:paragraph::blog/vespa-ai-and-the-cord-19-public-api/index.html-search-by-semantic-relevance", "fields": {"questions": {"assign": ["What is Vespa's semantic search?", "How does Vespa perform semantic search?", "What is the ranking phase in Vespa's semantic search?", "How are the title embeddings created?", "What is the name of the rank-profile used for semantic-search in this case?", "Where can I find more resources about Vespa's ranking and ML deployment?"]}}}
{"update": "id:blog-p:paragraph::blog/the-hardest-problem-in-computing/index.html-", "fields": {"questions": {"assign": ["What is big data serving?", "What are the challenges of big data serving?", "What is the first open-source platform for big data serving?", "What was covered in the first post of the series?", "What was covered in the second post of the series?", "Why is moving computation online beneficial?", "What are the four problems that must be solved in big data serving?", "What is required for systems to make decisions with up-to-date information?"]}}}
{"update": "id:blog-p:paragraph::blog/the-hardest-problem-in-computing/index.html-why-big-data-serving-is-hard", "fields": {"questions": {"assign": ["What is big data serving?", "What does a computation typically consist of?", "What is the challenge with using a stateless middle-tier?", "How many items can be evaluated per second with a 10Gbps network?", "What is the obvious solution to the big data serving problem?", "What kind of system is needed to solve the big data serving problem?", "What does Hadoop do?", "How does the new kind of system store and compute the data?"]}}}
{"update": "id:blog-p:paragraph::blog/the-hardest-problem-in-computing/index.html-a-new-kind-of-system", "fields": {"questions": {"assign": ["What is distributed storage?", "What are distributed algorithms?", "What is high availability?", "How does online computation keep data current?", "Can data schemas be changed without downtime?"]}}}
{"update": "id:blog-p:paragraph::blog/the-hardest-problem-in-computing/index.html-web-search-to-the-rescue!", "fields": {"questions": {"assign": ["What is web search?", "What are some applications for web search?", "Why is offline computation infeasible?", "What problems can web search solve?"]}}}
{"update": "id:blog-p:paragraph::blog/the-hardest-problem-in-computing/index.html-vespa.ai", "fields": {"questions": {"assign": ["What problem does Vespa solve?", "Is Vespa an open-source platform?", "How long has Vespa been in development?", "What are some problems Vespa solves?"]}}}
{"update": "id:blog-p:paragraph::blog/approximate-nearest-neighbor-search-in-vespa-part-1/index.html-", "fields": {"questions": {"assign": ["What is nearest neighbor search?", "What are the requirements for ANN?", "How does Vespa support ANN?", "What are the limitations of exact nearest neighbor search?", "What are the benefits of an approximate solution for ANN?"]}}}
{"update": "id:blog-p:paragraph::blog/approximate-nearest-neighbor-search-in-vespa-part-1/index.html-requirements-&-challenges", "fields": {"questions": {"assign": ["What is an ANN search algorithm?", "What are the requirements for integrating an ANN search algorithm with Vespa?", "What is a typical use case for Vespa?", "How are indexes used in ANN search algorithm updated in Vespa?", "What is the impact of ongoing update operations on concurrent querying in Vespa?"]}}}
{"update": "id:blog-p:paragraph::blog/approximate-nearest-neighbor-search-in-vespa-part-1/index.html-algorithms-background", "fields": {"questions": {"assign": ["What are ANN search algorithms?", "What are the three algorithm categories?", "What is Annoy?", "What is RPLSH?", "What is the implementation for Annoy?", "What is the implementation for RPLSH?"]}}}
{"update": "id:blog-p:paragraph::blog/approximate-nearest-neighbor-search-in-vespa-part-1/index.html-prototype-benchmark", "fields": {"questions": {"assign": ["How many datasets were used?", "What is the SIFT dataset?", "What is the GIST dataset?", "What were the results for the SIFT tests?", "Were the findings similar for the GIST dataset?"]}}}
{"update": "id:blog-p:paragraph::blog/approximate-nearest-neighbor-search-in-vespa-part-1/index.html-setup", "fields": {"questions": {"assign": ["What CPU was used?", "How much memory was used?", "What is Float size?", "What is Annoy?", "What is RPLSH?"]}}}
{"update": "id:blog-p:paragraph::blog/approximate-nearest-neighbor-search-in-vespa-part-1/index.html-indexing-throughput", "fields": {"questions": {"assign": ["What is the 1M SIFT dataset?", "How was corpus size tested?", "What is the indexing throughput?", "What are different index structures tested?", "Which algorithm is independent of corpus size?", "What are the observations from the experiment?"]}}}
{"update": "id:blog-p:paragraph::blog/approximate-nearest-neighbor-search-in-vespa-part-1/index.html-search-throughput-(qps)", "fields": {"questions": {"assign": ["What is Annoy?", "What is RPLSH?", "What is corpus size?", "What are the QPS results?", "How does corpus size affect HNSW?", "How does Annoy search algorithm work?", "What is the data reduction factor for RPLSH?"]}}}
{"update": "id:blog-p:paragraph::blog/approximate-nearest-neighbor-search-in-vespa-part-1/index.html-index-structures-&-memory-usage", "fields": {"questions": {"assign": ["How are data points represented?", "How are tensors stored in Vespa?", "What are the index structures designed for?", "How are writer and reader threads managed?", "What is upcoming in the blog post about HNSW index structure?", "What is the dimension size of a tensor in Vespa?"]}}}
{"update": "id:blog-p:paragraph::blog/approximate-nearest-neighbor-search-in-vespa-part-1/index.html-annoy-index", "fields": {"questions": {"assign": ["What is an Annoy index?", "What does a split node contain?", "What is a leaf node?", "What are the components of a tree in Annoy index?", "What is the function of a hyperplane in Annoy index?", "How are points in space split in Annoy index?", "What is stored in a leaf node in Annoy index?"]}}}
{"update": "id:blog-p:paragraph::blog/approximate-nearest-neighbor-search-in-vespa-part-1/index.html-hnsw-index", "fields": {"questions": {"assign": ["What is an HNSW index?", "How are documents represented in HNSW index?", "What is in a node array?", "What is in a link array?", "What is a small world graph?", "What is the structure of a hierarchy in HNSW index?"]}}}
{"update": "id:blog-p:paragraph::blog/approximate-nearest-neighbor-search-in-vespa-part-1/index.html-memory-usage-summary", "fields": {"questions": {"assign": ["What is the Annoy index?", "What is the RPLSH hash?", "How does the Annoy index compare to the HNSW index in terms of memory usage?", "Is the memory usage of the indexes dependent on dimension size?", "What adjustments might be needed with higher dimensionality for the Annoy and HNSW indexes?", "What is the total index size for the Annoy and HNSW indexes?", "What percent of the total size does the index represent for each index type?"]}}}
{"update": "id:blog-p:paragraph::blog/approximate-nearest-neighbor-search-in-vespa-part-1/index.html-dropping-rplsh", "fields": {"questions": {"assign": ["What is RPLSH?", "What is the ideal hash size for RPLSH?", "What is the recall rate for RPLSH with a 64-bit hash?", "What is the recall rate for RPLSH with a 512-bit hash?", "What is the average number of candidates needed to get 80% recall with RPLSH?", "Why is an index structure necessary for RPLSH?", "What dataset was used to benchmark the quality of RPLSH?", "How many documents need to be calculated with a 64-bit hash to get 80% recall?"]}}}
{"update": "id:blog-p:paragraph::blog/approximate-nearest-neighbor-search-in-vespa-part-1/index.html-choosing-hnsw", "fields": {"questions": {"assign": ["What is HNSW?", "What factors were considered for algorithm choice?", "Why was HNSW chosen as a baseline for integration in Vespa?", "What is the tradeoff in choosing HNSW over other algorithms?", "What is the index structure for HNSW?", "What is the incremental indexing process for HNSW?", "How is data point removal handled in HNSW?", "How does HNSW work with query filters?"]}}}
{"update": "id:blog-p:paragraph::blog/approximate-nearest-neighbor-search-in-vespa-part-1/index.html-exact-vs-approximate", "fields": {"questions": {"assign": ["What is the 1M SIFT dataset?"]}}}
{"update": "id:blog-p:paragraph::blog/approximate-nearest-neighbor-search-in-vespa-part-1/index.html-conclusion", "fields": {"questions": {"assign": ["What is the HNSW algorithm?", "How does HNSW support real-time updates?", "Does HNSW work with query filters?", "Does HNSW use less memory than Annoy?", "Is building the HNSW index incremental?"]}}}
{"update": "id:blog-p:paragraph::blog/introducing-nlp-with-transformers-on-vespa/index.html-", "fields": {"questions": {"assign": ["What is the Transformers library?", "What tasks can Transformers be used for?", "What is Vespa's role in evaluating Transformer models?"]}}}
{"update": "id:blog-p:paragraph::blog/introducing-nlp-with-transformers-on-vespa/index.html-ranking-with-transformers", "fields": {"questions": {"assign": ["How is the Transformer stage used?", "How is the first-phase expression calculated?", "What is the cost of evaluating Transformer type models?", "What decision needs to be made when using Transformer models?", "What is stored in the tokens field?"]}}}
{"update": "id:blog-p:paragraph::blog/introducing-nlp-with-transformers-on-vespa/index.html-looking-forward", "fields": {"questions": {"assign": ["What models are supported by Vespa?", "What is the goal of Vespa?", "What application should be checked out?", "What convenience features does Vespa offer?"]}}}
{"update": "id:blog-p:paragraph::blog/efficient-open-domain-question-answering-on-vespa/index.html-", "fields": {"questions": {"assign": ["What is open-domain question-answering?", "What services are needed for retrieval-based question-answering?", "What are the core features of Vespa.ai?", "How does Vespa.ai reproduce the state-of-the-art baseline?", "Can Vespa.ai create a scalable production ready application for retrieval-based question-answering?"]}}}
{"update": "id:blog-p:paragraph::blog/efficient-open-domain-question-answering-on-vespa/index.html-introduction", "fields": {"questions": {"assign": ["What is the Efficient Open-Domain Question Answering challenge?", "What is the goal of the Natural Questions benchmark?", "What components does Dense Passage Retrieval system include?"]}}}
{"update": "id:blog-p:paragraph::blog/efficient-open-domain-question-answering-on-vespa/index.html-the-retriever", "fields": {"questions": {"assign": ["What is the role of the retriever?", "What are candidate passages?", "What are the two main approaches to passage retrieval?"]}}}
{"update": "id:blog-p:paragraph::blog/efficient-open-domain-question-answering-on-vespa/index.html-term-based-(sparse)-retrieval", "fields": {"questions": {"assign": ["What is term-based retrieval?", "What are the algorithms for term-based retrieval?", "How are texts represented in term-based retrieval?", "What is a similarity computation in term-based retrieval?", "What are the weaknesses of term-based retrieval?", "What is ElasticSearch?"]}}}
{"update": "id:blog-p:paragraph::blog/efficient-open-domain-question-answering-on-vespa/index.html-embedding-based-(dense)-retrieval", "fields": {"questions": {"assign": ["What is the DPR paper?", "What is semantic embedding?", "How is the DPR paper trained?", "What is FAISS?", "How is FAISS used in DPR paper?"]}}}
{"update": "id:blog-p:paragraph::blog/efficient-open-domain-question-answering-on-vespa/index.html-the-reader", "fields": {"questions": {"assign": ["What does the reader do?", "What algorithms are used in BERT-based models?", "How is the final answer extracted?", "What is the DPR paper?", "What are the necessary outputs for question-answering?", "How does the attention mechanism affect evaluation time?"]}}}
{"update": "id:blog-p:paragraph::blog/efficient-open-domain-question-answering-on-vespa/index.html-putting-all-this-together", "fields": {"questions": {"assign": ["What components are needed for the retrieval-based question-answering system?", "How is retrieval done?", "What is the reader model used for?", "What is a BERT-based tokenizer?", "What is passage embedding vector?", "What are the requirements to implement a question-answering system with Vespa?"]}}}
{"update": "id:blog-p:paragraph::blog/efficient-open-domain-question-answering-on-vespa/index.html-reproducing-the-baseline-on-vespa", "fields": {"questions": {"assign": ["What are core features in Vespa?"]}}}
{"update": "id:blog-p:paragraph::blog/efficient-open-domain-question-answering-on-vespa/index.html-schema", "fields": {"questions": {"assign": ["What is a document schema?"]}}}
{"update": "id:blog-p:paragraph::blog/efficient-open-domain-question-answering-on-vespa/index.html-retrieval-and-ranking", "fields": {"questions": {"assign": ["What is ranking in Vespa?", "What is multi-phased ranking?", "What are ranking profiles in Vespa?", "What is the reader model in Vespa?", "What is the question encoder model?"]}}}
{"update": "id:blog-p:paragraph::blog/efficient-open-domain-question-answering-on-vespa/index.html-vespa-container-middleware---putting-it-all-together", "fields": {"questions": {"assign": ["What custom plugins does the application have?", "What is the BERT tokenizer component responsible for?", "What kind of custom searcher retrieves the embedding representation?", "What does the custom searcher do with the output of the reader model?", "What is the purpose of the BERT tokenization during indexing?", "What does the custom searcher control?"]}}}
{"update": "id:blog-p:paragraph::blog/efficient-open-domain-question-answering-on-vespa/index.html-results", "fields": {"questions": {"assign": ["What is the Natural Questions data set?", "What is the benchmark for this application?", "How are experiments in this section run?"]}}}
{"update": "id:blog-p:paragraph::blog/efficient-open-domain-question-answering-on-vespa/index.html-retriever-accuracy-summary", "fields": {"questions": {"assign": ["What is Recall@position?", "What is NQ-open.dev.jsonl?", "What is the retriever accuracy?", "What is DPR paper?", "What is the reported recall@20?", "What is the difference in our favor?"]}}}
{"update": "id:blog-p:paragraph::blog/efficient-open-domain-question-answering-on-vespa/index.html-reader-accuracy-summary", "fields": {"questions": {"assign": ["What is the Exact Match metric?", "How is EM score calculated?", "What is the DPR paper?", "What does the reader accuracy evaluate?", "What is the challenge in getting an EM score of 1?", "What is the current state of the art for retrieval-based systems?"]}}}
{"update": "id:blog-p:paragraph::blog/efficient-open-domain-question-answering-on-vespa/index.html-further-work", "fields": {"questions": {"assign": ["What is the DPR paper?", "How can other model types improve accuracy?", "What is total system latency?"]}}}
{"update": "id:blog-p:paragraph::blog/fine-tune-bert-basic-transformers-trainer/index.html-", "fields": {"questions": {"assign": ["What is the transformers library?", "What is the Trainer class?", "What is COVID-19 Open Research Dataset Challenge?", "Where can I run this code?"]}}}
{"update": "id:blog-p:paragraph::blog/fine-tune-bert-basic-transformers-trainer/index.html-install-required-libraries", "fields": {"questions": {"assign": ["What packages do I need to install to use transformers in Python?", "How do I install pandas and transformers in Python?"]}}}
{"update": "id:blog-p:paragraph::blog/fine-tune-bert-basic-transformers-trainer/index.html-load-the-dataset", "fields": {"questions": {"assign": ["What is cord19?", "What is BERT model?", "What is the cord19-query-title-label.csv?", "How many unique queries are there?", "What are the relevant labels?", "How are the documents divided?", "What is the purpose of generating query-document features and labels?"]}}}
{"update": "id:blog-p:paragraph::blog/fine-tune-bert-basic-transformers-trainer/index.html-data-split", "fields": {"questions": {"assign": ["What is the purpose of train_test_split function?", "What is being split in the function?", "How does train_test_split divide the data?", "What does train_test_split return?"]}}}
{"update": "id:blog-p:paragraph::blog/fine-tune-bert-basic-transformers-trainer/index.html-create-bert-encodings", "fields": {"questions": {"assign": ["What is the function of BertTokenizerFast?", "What is truncation in tokenization?", "How do you create train encodings?", "What is the purpose of validation encodings?", "What is the recommended BERT model?", "What is the max length for encodings?", "What is the role of padding in tokenization?", "What is the purpose of max_length parameter in tokenizer?"]}}}
{"update": "id:blog-p:paragraph::blog/fine-tune-bert-basic-transformers-trainer/index.html-create-a-custom-dataset", "fields": {"questions": {"assign": ["What is a Cord19Dataset object?", "What is a custom dataset?", "What is the torch package?", "What is the purpose of labels?", "What are train and val datasets?", "What is the __getitem__ method?", "What is the length of the dataset?"]}}}
{"update": "id:blog-p:paragraph::blog/fine-tune-bert-basic-transformers-trainer/index.html-fine-tune-the-bert-model", "fields": {"questions": {"assign": ["What is BertForSequenceClassification?", "What is fine-tuning?", "How do you set requires_grad to False?", "What is a Trainer in Transformers?", "What are the TrainingArguments?", "What is the purpose of weight_decay?", "What is the output directory in TrainingArguments?", "What is the role of warmup_steps?"]}}}
{"update": "id:blog-p:paragraph::blog/fine-tune-bert-basic-transformers-trainer/index.html-export-the-model-to-onnx", "fields": {"questions": {"assign": ["What is ONNX?", "What is the export format?", "What is required for GPU access?", "What does the dummy input consist of?"]}}}
{"update": "id:blog-p:paragraph::blog/from-research-to-production-scaling-a-state-of-the-art-machine-learning-system/index.html-", "fields": {"questions": {"assign": ["What is the Pareto frontier?", "What were the optimizations made?", "What is the main cost of the application?", "What is the optimization technique used?", "What is the serving system?"]}}}
{"update": "id:blog-p:paragraph::blog/from-research-to-production-scaling-a-state-of-the-art-machine-learning-system/index.html-question-answering", "fields": {"questions": {"assign": ["What is the system's task?", "What is the end-to-end latency?"]}}}
{"update": "id:blog-p:paragraph::blog/from-research-to-production-scaling-a-state-of-the-art-machine-learning-system/index.html-multi-threaded-retrieval-ranking", "fields": {"questions": {"assign": ["What is the default ranking thread in Vespa?", "What is the option for multiple threads?", "What is the latency improvement with multiple threads?", "Is ranking evaluated batch-wise?", "What options are available to tune Vespa's performance?"]}}}
{"update": "id:blog-p:paragraph::blog/from-research-to-production-scaling-a-state-of-the-art-machine-learning-system/index.html-token-sequence-length", "fields": {"questions": {"assign": ["What is the full-attention layer?", "What is the impact of token sequence length on inference time?", "What was the initial input length of the encoder BERT model?", "What is the latency reduction when reducing input length of the reader model?", "What is the exact match score when reducing input length of the reader model?", "Does Vespa support dynamic length inputs for the encoder and reader models?", "What is the result of shortening token input lengths of the encoder and reader models?", "Will Vespa support dynamic length inputs in the future?"]}}}
{"update": "id:blog-p:paragraph::blog/from-research-to-production-scaling-a-state-of-the-art-machine-learning-system/index.html-model-quantization", "fields": {"questions": {"assign": ["What is model quantization?", "What is the benefit of model quantization?", "How does model quantization reduce model size?", "What is the average latency for quantized models?", "How does quantization impact model accuracy?"]}}}
{"update": "id:blog-p:paragraph::blog/from-research-to-production-scaling-a-state-of-the-art-machine-learning-system/index.html-miniature-models", "fields": {"questions": {"assign": ["What are BERT-miniature models?", "What is the Pareto front?", "How do quantized models perform?", "What is the trade-off between exact match and latency?", "What are the advantages of choosing a quantized model?", "How can organizations optimize latency and hardware budgets?", "What is the research paper about?"]}}}
{"update": "id:blog-p:paragraph::blog/from-research-to-production-scaling-a-state-of-the-art-machine-learning-system/index.html-putting-all-this-together", "fields": {"questions": {"assign": ["What is the companion sample application?", "Where can I find the companion sample application?", "Is the companion sample application open source?"]}}}
{"update": "id:blog-p:paragraph::blog/from-research-to-production-scaling-a-state-of-the-art-machine-learning-system/index.html-conclusion", "fields": {"questions": {"assign": ["What is FastFormers?", "What is Big Bird?", "What are some optimizations for efficient inference?", "What are some tradeoffs in using miniature BERT models?", "Can adding additional content nodes reduce latency?", "What is the performance of full-attention mechanism?"]}}}
{"update": "id:blog-p:paragraph::blog/fine-tune-bert-basic-transformers-trainer-search-applications/index.html-", "fields": {"questions": {"assign": ["What are sentence pairs?", "Why process sentences at different times?", "How to ensure compatibility?", "What is encoding compatibility?"]}}}
{"update": "id:blog-p:paragraph::blog/fine-tune-bert-basic-transformers-trainer-search-applications/index.html-the-search-use-case", "fields": {"questions": {"assign": ["What are search applications?", "What is the goal of search apps?", "What is a tokenizer?", "How long is the joint input vector?", "How does applying tokenizer save time?"]}}}
{"update": "id:blog-p:paragraph::blog/fine-tune-bert-basic-transformers-trainer-search-applications/index.html-training-and-serving-compatibility", "fields": {"questions": {"assign": ["How to fine-tune BERT model?", "What is the 'transformer' library?", "How does Vespa serve a model?"]}}}
{"update": "id:blog-p:paragraph::blog/fine-tune-bert-basic-transformers-trainer-search-applications/index.html-create-independent-bert-encodings", "fields": {"questions": {"assign": ["What is create_bert_encodings?", "What does add_special_tokens=False do?", "What is the purpose of padding?", "What is the role of training_encodings?", "What is the role of val_encodings?", "What are the parameters for training_encodings?", "What are the parameters for val_encodings?"]}}}
{"update": "id:blog-p:paragraph::blog/fine-tune-bert-basic-transformers-trainer-search-applications/index.html-conclusion-and-future-work", "fields": {"questions": {"assign": ["What is the purpose of training a model?", "How does Vespa help with training BERT models?"]}}}
{"update": "id:blog-p:paragraph::blog/stateful-model-serving-how-we-accelerate-inference-using-onnx-runtime/index.html-", "fields": {"questions": {"assign": ["What is stateful model serving?", "What is ONNX Runtime?", "What is the challenge with stateful model evaluation?", "How does ORT help with evaluating large models?", "What tasks is Vespa.ai used for?", "What is the difference between stateless and stateful model serving?"]}}}
{"update": "id:blog-p:paragraph::blog/stateful-model-serving-how-we-accelerate-inference-using-onnx-runtime/index.html-about-vespa.ai", "fields": {"questions": {"assign": ["What is Vespa.ai?", "What is Vespa's history?", "What is Vespa's flexibility?", "What are Vespa's features?", "How many developers are on the Vespa team?", "What kind of applications is Vespa suitable for?"]}}}
{"update": "id:blog-p:paragraph::blog/stateful-model-serving-how-we-accelerate-inference-using-onnx-runtime/index.html-vespa.ai-applications", "fields": {"questions": {"assign": ["How are machine-learned models deployed?", "What is the principle in Vespa.ai?", "What is a content node?", "What is the admin layer in Vespa.ai?", "What does an application package contain?"]}}}
{"update": "id:blog-p:paragraph::blog/stateful-model-serving-how-we-accelerate-inference-using-onnx-runtime/index.html-onnx-in-vespa.ai", "fields": {"questions": {"assign": ["What is ONNX?", "What is the onnx ranking feature?", "What is an example use case for Vespa's onnx ranking feature?", "How does Vespa.ai support ONNX models?", "What are the benefits of supporting ONNX?", "How did Vespa.ai initially implement ONNX support?", "What was the main challenge with implementing certain ONNX operators?", "What were the benefits of optimizing Vespa's tensor evaluation engine?"]}}}
{"update": "id:blog-p:paragraph::blog/stateful-model-serving-how-we-accelerate-inference-using-onnx-runtime/index.html-onnx-runtime", "fields": {"questions": {"assign": ["What is ONNX Runtime?", "What are the benefits of using ONNX Runtime in Vespa.ai?", "How did ONNX Runtime improve model evaluation in Vespa.ai?", "What optimizations does ONNX Runtime contain for BERT models?", "What is MLAS in ONNX Runtime?", "What are the advantages of precision-reduced models in ONNX Runtime?", "How did integrating with C++ interface work for ONNX Runtime in Vespa.ai?"]}}}
{"update": "id:blog-p:paragraph::blog/stateful-model-serving-how-we-accelerate-inference-using-onnx-runtime/index.html-onnx-runtime-in-vespa.ai", "fields": {"questions": {"assign": ["What is the onnx-model?", "What are the inputs in onnx-model?", "How are ranking expressions parsed?", "What is attribute in Vespa.ai?", "What is ONNX Runtime used for?"]}}}
{"update": "id:blog-p:paragraph::blog/stateful-model-serving-how-we-accelerate-inference-using-onnx-runtime/index.html-include-<onnxruntime/onnxruntime_cxx_api.h>", "fields": {"questions": {"assign": ["What is ONNX Runtime?", "What is an Ort::Session?", "What does options.SetIntraOpNumThreads do?", "What is the difference between sequential and parallel execution in ONNX Runtime?", "Why does Vespa.ai need to tightly manage thread usage?", "How does Vespa.ai improve cache utilization?", "What is the benefit of running ONNX Runtime sequentially?", "What is the C API used for sharing thread pools between ONNX Runtime sessions?"]}}}
{"update": "id:blog-p:paragraph::blog/stateful-model-serving-how-we-accelerate-inference-using-onnx-runtime/index.html-input-and-output-tensors", "fields": {"questions": {"assign": ["What is tensor framework?", "What types of values does Vespa.ai support in tensors?", "What is pre-allocated in ONNX Runtime vectors?", "What is zero-copying of tensors?", "What is the limitation of Vespa.ai for tensor types?", "What is the input of Transformer models in Vespa.ai?", "What type of models are not yet supported in Vespa.ai?"]}}}
{"update": "id:blog-p:paragraph::blog/stateful-model-serving-how-we-accelerate-inference-using-onnx-runtime/index.html-summary", "fields": {"questions": {"assign": ["What is ONNX Runtime?", "What is the Vespa.ai use case for ONNX Runtime?", "What are the benefits of ONNX Runtime?", "What is BERT model optimization?", "What is quantization in ONNX Runtime?", "What has been the experience with ONNX Runtime?", "What is the C/C++ API documentation for ONNX Runtime?", "How is GPU support beneficial for Vespa.ai's Transformer model use case?"]}}}
{"update": "id:blog-p:paragraph::blog/using-approximate-nearest-neighbor-search-in-real-world-applications/index.html-from-text-search-and-recommendation-to-ads-and-online-dating,-ann-search-rarely-works-in-isolation", "fields": {"questions": {"assign": ["What is KNN search?", "What are some applications of KNN search?", "How can KNN and filtering be integrated?", "What are some limitations of post-filtering?"]}}}
{"update": "id:blog-p:paragraph::blog/using-approximate-nearest-neighbor-search-in-real-world-applications/index.html-finding-the-(approximate)-nearest-neighbors", "fields": {"questions": {"assign": ["What is approximate nearest neighbor search?", "What is the curse of dimensionality?", "What are some examples of ANNS tools?"]}}}
{"update": "id:blog-p:paragraph::blog/using-approximate-nearest-neighbor-search-in-real-world-applications/index.html-nearest-neighbors-in-search-and-recommendation", "fields": {"questions": {"assign": ["What is nearest neighbor search?", "What are some problems with combining facets?"]}}}
{"update": "id:blog-p:paragraph::blog/using-approximate-nearest-neighbor-search-in-real-world-applications/index.html-text-search", "fields": {"questions": {"assign": ["What are text embeddings?", "How to combine semantic search with filters?", "What is the problem with combining filters and ANN search?", "How does applying a filter affect search results?", "What is the state-of-the-art in text search?"]}}}
{"update": "id:blog-p:paragraph::blog/using-approximate-nearest-neighbor-search-in-real-world-applications/index.html-recommendation", "fields": {"questions": {"assign": ["What are recommender systems?", "What are user profiles?", "What is collaborative filtering?", "What is matrix factorization?", "What are examples of direct filters for recommendation systems?", "What are indirect filters for recommendation systems?", "Why is the problem of filtering more evident for recommendation systems than for text search?", "What is the effect of filters on the recommendation process?"]}}}
{"update": "id:blog-p:paragraph::blog/using-approximate-nearest-neighbor-search-in-real-world-applications/index.html-serving-ads", "fields": {"questions": {"assign": ["How do ad serving systems work?", "What are advertiser-specific rules?", "Why are filters important?", "How does budget affect ad serving?", "What is the function of rules in ad serving?", "What kind of context does an ad serving system use?", "What happens if appropriate ads are not retrieved?", "What is the impact of exceeding the campaign budget?"]}}}
{"update": "id:blog-p:paragraph::blog/using-approximate-nearest-neighbor-search-in-real-world-applications/index.html-online-dating", "fields": {"questions": {"assign": ["What are online dating preferences?", "How are preferences represented?", "What is an ANN?", "How can preferences be filtered in online dating?"]}}}
{"update": "id:blog-p:paragraph::blog/using-approximate-nearest-neighbor-search-in-real-world-applications/index.html-local-search", "fields": {"questions": {"assign": ["What is local search?", "How is local search based?", "What is ANNS?", "Why may local search not work?"]}}}
{"update": "id:blog-p:paragraph::blog/using-approximate-nearest-neighbor-search-in-real-world-applications/index.html-solution", "fields": {"questions": {"assign": ["What is the problem with requesting more candidates?", "What is the algorithm used by Vespa.ai?", "What are the 3 main areas Vespa.ai innovates in?", "What is dynamic modification of the graph?", "What is the eligibility list in Vespa.ai?", "What happens if the eligibility list is small?", "What is the result of combining filters with Vespa.ai ANN search?"]}}}
{"update": "id:blog-p:paragraph::blog/using-approximate-nearest-neighbor-search-in-real-world-applications/index.html-about-vespa.ai", "fields": {"questions": {"assign": ["What is Vespa.ai?", "Is Vespa.ai open-source?", "Does Vespa.ai require external services or plugins?", "What are the strengths of Vespa.ai?", "Does Vespa.ai support approximate nearest neighbor search?", "Where can I find more information about HNSW index?"]}}}
{"update": "id:blog-p:paragraph::blog/the-great-search-engine-debate-elasticsearch-solr-or-vespa/index.html-", "fields": {"questions": {"assign": ["What are Vespa's community resources?", "What is Vespa's Gitter channel?", "Which Stack Overflow tag relates to Vespa?"]}}}
{"update": "id:blog-p:paragraph::blog/image-similarity-search/index.html-", "fields": {"questions": {"assign": ["What is Vespa\u2019s approximate nearest neighbor search?", "How can nearest neighbor search be used in finding similar products?", "What is the Amazon Products dataset?", "How are binary feature vectors for images stored and indexed in Vespa?", "What are some of the real-world challenges with using nearest neighbor search?", "What is the Use case Shopping Search in Vespa.ai?"]}}}
{"update": "id:blog-p:paragraph::blog/image-similarity-search/index.html-pyvespa", "fields": {"questions": {"assign": ["What is pyvespa?", "Is pyvespa a production-ready API?", "What is the purpose of pyvespa?", "Can pyvespa be used for training ML models?", "What is the Complete notebook?", "What can the Complete notebook do?"]}}}
{"update": "id:blog-p:paragraph::blog/image-similarity-search/index.html-exploring-the-amazon-product-dataset", "fields": {"questions": {"assign": ["What is Amazon Fashion", "What is the meta_Amazon_Fashion.json.gz file?", "What is iter_products?", "How can I display an image using Python?", "What are salesRank?", "What is the 'asin' field?"]}}}
{"update": "id:blog-p:paragraph::blog/image-similarity-search/index.html-deploy-the-application-and-start-vespa", "fields": {"questions": {"assign": ["What is VespaDocker?", "How to deploy Vespa application?", "What is disk_folder?"]}}}
{"update": "id:blog-p:paragraph::blog/image-similarity-search/index.html-index-our-product-data", "fields": {"questions": {"assign": ["What is the Vespa http /document/v1 feed api?", "What is the difference between synchronous and asynchronous feed api?", "What format is used for Vespa search response?", "What is the total time spent on search and display of search results?"]}}}
{"update": "id:blog-p:paragraph::blog/image-similarity-search/index.html-query-our-product-data", "fields": {"questions": {"assign": ["What is Vespa simple query language?", "What fields can be returned with hit result?", "Which fieldset does Vespa use by default for search?"]}}}
{"update": "id:blog-p:paragraph::blog/image-similarity-search/index.html-related-products-using-nearest-neighbor-search-in-image-feature-spaces", "fields": {"questions": {"assign": ["What is the Amazon Product dataset?", "What is the distance metric used?", "What is a ranking feature?", "How can changes be made to the schema?"]}}}
{"update": "id:blog-p:paragraph::blog/image-similarity-search/index.html-update-the-index-with-image-vectors", "fields": {"questions": {"assign": ["What is partial update?", "How do you fetch a document vector?"]}}}
{"update": "id:blog-p:paragraph::blog/image-similarity-search/index.html-combining-nearest-neighbor-search-with-filters", "fields": {"questions": {"assign": ["What is nearest neighbor search?", "How to combine search with filter?", "What is the purpose of using vector similarity in ranking?", "How can we limit the search by price range?"]}}}
{"update": "id:blog-p:paragraph::blog/image-similarity-search/index.html-keeping-the-index-fresh-by-true-partial-updates", "fields": {"questions": {"assign": ["What is true partial update?", "What updates can Vespa perform?", "What is the purpose of inventory status?", "How many updates of integer fields can Vespa handle?", "How does Vespa handle updates of attribute fields?", "How can inventory status be used for filtering and ranking?"]}}}
{"update": "id:blog-p:paragraph::blog/image-similarity-search/index.html-summary", "fields": {"questions": {"assign": ["How does Vespa combine search?"]}}}
{"update": "id:blog-p:paragraph::blog/build-basic-text-search-app-from-python-with-vespa/index.html-", "fields": {"questions": {"assign": ["What is pyvespa?", "Can Vespa be used with python?", "How does pyvespa simplify Vespa usage?"]}}}
{"update": "id:blog-p:paragraph::blog/build-basic-text-search-app-from-python-with-vespa/index.html-install", "fields": {"questions": {"assign": ["What is pyvespa?", "What version was the API released in?"]}}}
{"update": "id:blog-p:paragraph::blog/build-basic-text-search-app-from-python-with-vespa/index.html-define-the-application", "fields": {"questions": {"assign": ["Where can CORD19 data be found?"]}}}
{"update": "id:blog-p:paragraph::blog/build-basic-text-search-app-from-python-with-vespa/index.html-create-an-application-package", "fields": {"questions": {"assign": ["How do you create ApplicationPackage?", "What is vespa.package?"]}}}
{"update": "id:blog-p:paragraph::blog/build-basic-text-search-app-from-python-with-vespa/index.html-add-fields-to-the-schema", "fields": {"questions": {"assign": ["What is a Schema?", "What is Field?", "What is cord_uid?", "What is abstract?", "What is enable-bm25?"]}}}
{"update": "id:blog-p:paragraph::blog/build-basic-text-search-app-from-python-with-vespa/index.html-search-multiple-fields-when-querying", "fields": {"questions": {"assign": ["What is a FieldSet in Vespa?", "What fields can be grouped?", "What is the default FieldSet?", "What is the syntax for creating a FieldSet?", "What package includes FieldSet?", "What is the name of the default FieldSet?", "What is the purpose of FieldSet in Vespa?"]}}}
{"update": "id:blog-p:paragraph::blog/build-basic-text-search-app-from-python-with-vespa/index.html-define-how-to-rank-the-documents-matched", "fields": {"questions": {"assign": ["What is a RankProfile?", "How do you define bm25?"]}}}
{"update": "id:blog-p:paragraph::blog/build-basic-text-search-app-from-python-with-vespa/index.html-deploy-your-application", "fields": {"questions": {"assign": ["What is the basic text search app about?", "How can we deploy the app using Docker?", "What is VespaDocker?", "What does VespaDocker.deploy() method do?"]}}}
{"update": "id:blog-p:paragraph::blog/build-basic-text-search-app-from-python-with-vespa/index.html-feed-some-data", "fields": {"questions": {"assign": ["How to feed data to Vespa?", "What is parsed_feed?", "What is cord_uid?", "What are the required columns?", "How to iterate through a DataFrame?", "What is Vespa's method to feed data points?"]}}}
{"update": "id:blog-p:paragraph::blog/how-using-screwdriver-for-cicd-reduced-vespas-time-spent-on-builds-and-pull-requests-by-75-percent/index.html-", "fields": {"questions": {"assign": ["What is Screwdriver?", "What is Vespa codebase?", "How did Vespa reduce build times?", "What is Screwdriver's configurable resource management?", "What is Screwdriver's integration with GitHub?", "What is the advantage of pull request analysis?", "What is the result of using Screwdriver?", "What is ccache used for?"]}}}
{"update": "id:blog-p:paragraph::blog/parent-child-joins-tensors-content-recommendation/index.html-", "fields": {"questions": {"assign": ["What is topic CTR?", "What are parent-child joins?", "What is mean encoding?", "What is the role of topic CTR in machine-learned ranking?", "How does Vespa model topic CTRs?"]}}}
{"update": "id:blog-p:paragraph::blog/parent-child-joins-tensors-content-recommendation/index.html-parent-child-joins", "fields": {"questions": {"assign": ["What is a topic CTR?", "How are topic CTRs modeled?", "What is a parent-child relationship in Vespa?", "What is the standard solution for ranking features?", "How does Vespa avoid data duplication when updating CTRs?", "What is the purpose of the globalscores document?", "How does Vespa do a real-time join between articles and the global document?", "What is the schema definition for the parent-child relationship?"]}}}
{"update": "id:blog-p:paragraph::blog/parent-child-joins-tensors-content-recommendation/index.html-tensor-ranking", "fields": {"questions": {"assign": ["What is Vespa Tensor API?", "What is AVG_CTR in Vespa?", "What is MAX_CTR in Vespa?"]}}}
{"update": "id:blog-p:paragraph::blog/parent-child-joins-tensors-content-recommendation/index.html-ranking-features", "fields": {"questions": {"assign": ["What is TOPIC_AVG_CTR function?", "What is TOPIC_MAX_CTR function?"]}}}
{"update": "id:blog-p:paragraph::blog/parent-child-joins-tensors-content-recommendation/index.html-rank-profile-walkthrough", "fields": {"questions": {"assign": ["What is TOPIC_AVG_CTR?", "What is TOPIC_MAX_CTR?"]}}}
{"update": "id:blog-p:paragraph::blog/parent-child-joins-tensors-content-recommendation/index.html-final-thoughts", "fields": {"questions": {"assign": ["What is co-locating?", "What is the global feature store?", "How fast is the performance of Vespa?", "What is the optimization for ranking?", "What are the real-time content recommendation features?"]}}}
{"update": "id:blog-p:paragraph::blog/how-i-learned-vespa-by-thinking-in-solr/index.html-", "fields": {"questions": {"assign": ["What search capabilities does Vespa offer?", "What is the Vespa Quick Start page?", "What steps are involved in integrating Solr into an application?", "How can Solr analogies help in learning Vespa?", "What is the #vespa channel on Relevance Slack?", "What are the high level steps for integrating Vespa into an application?"]}}}
{"update": "id:blog-p:paragraph::blog/how-i-learned-vespa-by-thinking-in-solr/index.html-installing-vespa", "fields": {"questions": {"assign": ["What are the minimum hardware requirements?", "How do I install Vespa?", "What is the recommended version of Vespa?", "What are the docker installation instructions for Ubuntu?", "What are the other operating systems that support docker installation?"]}}}
{"update": "id:blog-p:paragraph::blog/how-i-learned-vespa-by-thinking-in-solr/index.html-starting-the-vespa-configuration-server", "fields": {"questions": {"assign": ["How do I restart Vespa after stopping it?", "What command starts Vespa configuration server?"]}}}
{"update": "id:blog-p:paragraph::blog/how-i-learned-vespa-by-thinking-in-solr/index.html-checking-server-status", "fields": {"questions": {"assign": ["Why does Vespa take a while to start?", "What is the command to check Vespa status?"]}}}
{"update": "id:blog-p:paragraph::blog/how-i-learned-vespa-by-thinking-in-solr/index.html-create-a-vespa-application", "fields": {"questions": {"assign": ["How do I create a Vespa application?", "What is the recommended approach for creating a Vespa application?"]}}}
{"update": "id:blog-p:paragraph::blog/how-i-learned-vespa-by-thinking-in-solr/index.html-configure-the-vespa-application", "fields": {"questions": {"assign": ["Where are the configuration files located?", "What is the purpose of schemas/*.sd?", "What is hosts.xml?", "What is services.xml?", "What is the format of doc.sd?", "What is the purpose of default.xml?", "What is the purpose of types/root.xml?"]}}}
{"update": "id:blog-p:paragraph::blog/how-i-learned-vespa-by-thinking-in-solr/index.html-deploy-the-vespa-application", "fields": {"questions": {"assign": ["What command deploys the application?", "How do you check Vespa readiness?", "What happens if there are configuration problems?"]}}}
{"update": "id:blog-p:paragraph::blog/how-i-learned-vespa-by-thinking-in-solr/index.html-populating-the-vespa-indexes", "fields": {"questions": {"assign": ["What is the document endpoint?", "Which document types can be inserted?", "What is the endpoint URL to insert a doc?", "What is CORD-19 dataset?", "What information was used for indexing?", "What is the request payload format?", "What is Vespa's HTTP Client?", "How many papers were in CORD-19 dataset?"]}}}
{"update": "id:blog-p:paragraph::blog/how-i-learned-vespa-by-thinking-in-solr/index.html-querying-the-index", "fields": {"questions": {"assign": ["What is Vespa query language?", "How do you use Vespa's nearestNeighbor function?", "What is the YQL endpoint?", "What is a SPECTER embedding?", "What are the objectives of the author?", "What are the different query types possible with Vespa?", "What is Solr More Like This search?", "What is the difference between GET and POST requests?"]}}}
{"update": "id:blog-p:paragraph::blog/how-i-learned-vespa-by-thinking-in-solr/index.html-stopping-the-server", "fields": {"questions": {"assign": ["How do I stop Vespa server?", "What is the equivalent of Solr stop command for Vespa?"]}}}
{"update": "id:blog-p:paragraph::blog/how-i-learned-vespa-by-thinking-in-solr/index.html-deleting-the-vespa-application", "fields": {"questions": {"assign": ["How to remove Vespa from Docker?"]}}}
{"update": "id:blog-p:paragraph::blog/how-i-learned-vespa-by-thinking-in-solr/index.html-conclusion", "fields": {"questions": {"assign": ["What is the strategy for learning Vespa?", "What are the benefits of using Solr analogies?", "How do Vespa commands compare to Solr commands?", "What are the benefits of wrapping Vespa commands in shell scripts?", "What is the learning curve for Vespa?", "What is Vespa\u2019s capability for using ML models?", "What is Vespa\u2019s built-in support for two-phase queries?"]}}}
{"update": "id:blog-p:paragraph::blog/run-search-engine-experiments-in-Vespa-from-python/index.html-", "fields": {"questions": {"assign": ["What is pyvespa?", "What is the purpose of pyvespa?", "How many ways to get started with pyvespa?", "What are the three ways to get started with pyvespa?", "What does method 1 of using pyvespa enable?", "What does method 2 of using pyvespa enable?", "What does method 3 of using pyvespa enable?", "What is the goal of pyvespa API?"]}}}
{"update": "id:blog-p:paragraph::blog/run-search-engine-experiments-in-Vespa-from-python/index.html-connect-to-a-running-vespa-application", "fields": {"questions": {"assign": ["How to interact with cord19.vespa.ai?"]}}}
{"update": "id:blog-p:paragraph::blog/run-search-engine-experiments-in-Vespa-from-python/index.html-build-and-deploy-with-pyvespa-api", "fields": {"questions": {"assign": ["What is pyvespa?", "How do you deploy an application package?", "What is a RankProfile?", "What are some benefits of using the pyvespa API?", "How do you export app_package to Vespa configuration files?"]}}}
{"update": "id:blog-p:paragraph::blog/run-search-engine-experiments-in-Vespa-from-python/index.html-deploy-from-vespa-config-files", "fields": {"questions": {"assign": ["How to use Vespa configuration files?", "How to deploy the news search app?", "How to clean up after deploying?", "What is the purpose of VespaDocker?"]}}}
{"update": "id:blog-p:paragraph::blog/run-search-engine-experiments-in-Vespa-from-python/index.html-final-thoughts", "fields": {"questions": {"assign": ["What is pyvespa?", "How to connect to Vespa?", "What is pyvespa library?"]}}}
{"update": "id:blog-p:paragraph::blog/interface-with-vespa-apis-using-postman/index.html-", "fields": {"questions": {"assign": ["What is mTLS?", "What is Postman?", "How does Postman help with Vespa APIs?"]}}}
{"update": "id:blog-p:paragraph::blog/interface-with-vespa-apis-using-postman/index.html-postman-workspace", "fields": {"questions": {"assign": ["What is Postman?", "What are Vespa APIs?", "How to use Vespa APIs?", "What is the purpose of Postman?", "What are some tips for Vespa APIs?", "What is the Vespa */search/* interface?", "What is the Vespa */document/v1/* interface?"]}}}
{"update": "id:blog-p:paragraph::blog/interface-with-vespa-apis-using-postman/index.html-credentials", "fields": {"questions": {"assign": ["How to use credentials?", "How to install certificate/key-pair?", "What is the purpose of certificates?", "What is the endpoint to put in CRT?", "What services use mTLS?", "What is the purpose of public-cert.pem?"]}}}
{"update": "id:blog-p:paragraph::blog/interface-with-vespa-apis-using-postman/index.html-/document/v1", "fields": {"questions": {"assign": ["What can be done with POST/PUT/DELETE requests?", "How can a document be updated?", "What is a document corpus?", "What is the value of POST/PUT/DELETE requests?", "What is required to update a document?", "What is raw JSON used for?"]}}}
{"update": "id:blog-p:paragraph::blog/interface-with-vespa-apis-using-postman/index.html-sharing", "fields": {"questions": {"assign": ["What is Postman?", "What are endpoints?", "How to share Postman workspace?"]}}}
{"update": "id:blog-p:paragraph::blog/build-news-search-app-from-python-with-vespa/index.html-", "fields": {"questions": {"assign": ["What is MIND dataset?", "What will be added in future posts?", "Is the tutorial simplified?"]}}}
{"update": "id:blog-p:paragraph::blog/build-news-search-app-from-python-with-vespa/index.html-dataset", "fields": {"questions": {"assign": ["What is the MIND dataset?", "What is included in the parsed data?", "What is the format of the parsed data?", "How many news articles are in the mind dataset?", "What fields are included in the parsed data?", "What is the structure of the parsed data?"]}}}
{"update": "id:blog-p:paragraph::blog/build-news-search-app-from-python-with-vespa/index.html-install-pyvespa", "fields": {"questions": {"assign": ["What is pyvespa?", "How do I install pyvespa?"]}}}
{"update": "id:blog-p:paragraph::blog/build-news-search-app-from-python-with-vespa/index.html-create-the-search-app", "fields": {"questions": {"assign": ["What is app_package for?", "What is FieldSet for?"]}}}
{"update": "id:blog-p:paragraph::blog/build-news-search-app-from-python-with-vespa/index.html-deploy-the-app-on-docker", "fields": {"questions": {"assign": ["How do I deploy Vespa in Docker?", "What is VespaDocker?", "What does VespaDocker deploy?", "How can I interact with the deployed application?", "What is the output of the deployment process?"]}}}
{"update": "id:blog-p:paragraph::blog/build-news-search-app-from-python-with-vespa/index.html-feed-data-to-the-app", "fields": {"questions": {"assign": ["What is feed_data_point?", "What parameters does feed_data_point need?", "What is data_id?", "What is the default schema name?", "How long does feed_data_point take?"]}}}
{"update": "id:blog-p:paragraph::blog/build-news-search-app-from-python-with-vespa/index.html-query-the-app", "fields": {"questions": {"assign": ["What is app.query?", "What query flexibility does Vespa offer?"]}}}
{"update": "id:blog-p:paragraph::blog/build-news-search-app-from-python-with-vespa/index.html-search-over-indexed-fields-using-keywords", "fields": {"questions": {"assign": ["How to retrieve title and abstract?", "How to search where title contains music?", "How to search where default contains festival?"]}}}
{"update": "id:blog-p:paragraph::blog/build-news-search-app-from-python-with-vespa/index.html-search-by-document-type", "fields": {"questions": {"assign": ["What is the query to select title?", "What is the document type?", "What is the name of the only document type?"]}}}
{"update": "id:blog-p:paragraph::blog/build-news-search-app-from-python-with-vespa/index.html-search-over-attribute-fields-such-as-date", "fields": {"questions": {"assign": ["What is attribute fast-search?", "What is default fieldset?", "How does Vespa filter and scan?", "Can Vespa perform range searches?"]}}}
{"update": "id:blog-p:paragraph::blog/build-news-search-app-from-python-with-vespa/index.html-sorting", "fields": {"questions": {"assign": ["What is Vespa's default sorting order?", "What is relevance score used for?", "What is the 'order' keyword in Vespa?", "How to explicitly order by a field in Vespa?", "What is the 'desc' keyword in Vespa?", "What does the 'order' keyword sort by?", "How to override the default sorting order in Vespa?"]}}}
{"update": "id:blog-p:paragraph::blog/build-news-search-app-from-python-with-vespa/index.html-grouping", "fields": {"questions": {"assign": ["What is Vespa's grouping feature?", "How can Vespa compute news categories?", "What are the three news categories with the highest document counts?", "What is the output of Vespa's all(group()) statement?", "How to limit Vespa's all(group()) query?", "What is the meaning of Vespa's 'each(output(count()))' statement?", "What is the structure of Vespa's all(group()) response?"]}}}
{"update": "id:blog-p:paragraph::blog/build-news-search-app-from-python-with-vespa/index.html-use-news-popularity-signal-for-ranking", "fields": {"questions": {"assign": ["What is nativeRank?", "What is rank-profile?", "What is first-phase calculation?", "What is the popularity function?", "How is the relevance score computed?", "How is the popularity signal computed?", "How is the new rank profile created?", "What is the purpose of weighting the nativeRank and popularity function?"]}}}
{"update": "id:blog-p:paragraph::blog/build-news-search-app-from-python-with-vespa/index.html-redeploy-the-application", "fields": {"questions": {"assign": ["How to redeploy Vespa application?", "What is app-package?"]}}}
{"update": "id:blog-p:paragraph::blog/build-news-search-app-from-python-with-vespa/index.html-query-using-the-new-popularity-signal", "fields": {"questions": {"assign": ["What is the 'ranking' argument used for?", "What is the content of the document with the ID 'id:news:news::N5870'?", "What is the category of the document with the ID 'id:news:news::N5870'?", "What is the source of the document with the ID 'id:news:news::N5870'?"]}}}
{"update": "id:blog-p:paragraph::blog/build-news-search-app-from-python-with-vespa/index.html-next-steps", "fields": {"questions": {"assign": ["What is the conclusion?", "How do you clean up Docker?"]}}}
{"update": "id:blog-p:paragraph::blog/build-news-recommendation-app-from-python-with-vespa/index.html-", "fields": {"questions": {"assign": ["What is news recommendation?", "What is required to follow the tutorial?"]}}}
{"update": "id:blog-p:paragraph::blog/build-news-recommendation-app-from-python-with-vespa/index.html-add-a-user-schema", "fields": {"questions": {"assign": ["What is the 'fast-search' attribute?", "What is the 'user' schema?", "What is the purpose of a schema in Vespa?"]}}}
{"update": "id:blog-p:paragraph::blog/build-news-recommendation-app-from-python-with-vespa/index.html-recommendation-using-embeddings", "fields": {"questions": {"assign": ["What is closeness ranking feature?", "How is the euclidean distance calculated?", "What is nearestNeighbor search operator?"]}}}
{"update": "id:blog-p:paragraph::blog/build-news-recommendation-app-from-python-with-vespa/index.html-query-profile-type", "fields": {"questions": {"assign": ["What is the recommendation rank profile?", "What does Vespa need to bind?", "What is a QueryTypeField?", "What does the 'type' parameter specify?"]}}}
{"update": "id:blog-p:paragraph::blog/build-news-recommendation-app-from-python-with-vespa/index.html-redeploy-the-application", "fields": {"questions": {"assign": ["What is the news app about?", "What is deployment_message in Vespa?"]}}}
{"update": "id:blog-p:paragraph::blog/build-news-recommendation-app-from-python-with-vespa/index.html-fetch-the-user-embedding", "fields": {"questions": {"assign": ["What is query_user_embedding function?", "How to retrieve user embedding?", "What is the format of user embedding?", "What is the input for query_user_embedding?", "What is the output of parse_embedding?", "What is user_id?", "What is the purpose of parse_embedding function?"]}}}
{"update": "id:blog-p:paragraph::blog/build-news-recommendation-app-from-python-with-vespa/index.html-ann-search", "fields": {"questions": {"assign": ["What is the yql select?"]}}}
{"update": "id:blog-p:paragraph::blog/build-news-recommendation-app-from-python-with-vespa/index.html-combine-ann-search-with-query-filters", "fields": {"questions": {"assign": ["What is Vespa ANN search?", "What is the syntax for YQL search?", "What is the 'category' field?"]}}}
{"update": "id:blog-p:paragraph::blog/build-news-recommendation-app-from-python-with-vespa/index.html-next-steps", "fields": {"questions": {"assign": ["What is the conclusion?", "How to clean up Docker instances?", "What is in part 3?"]}}}
{"update": "id:blog-p:paragraph::blog/build-qa-app-from-python-with-vespa/index.html-", "fields": {"questions": {"assign": ["What is a QA application?", "How to query for sentence and paragraph level answers?", "What is the Stanford Question Answering Dataset?"]}}}
{"update": "id:blog-p:paragraph::blog/build-qa-app-from-python-with-vespa/index.html-about-the-data", "fields": {"questions": {"assign": ["What is SQuAD?", "What does SQuAD dataset contain?", "What is organized in the tutorial?"]}}}
{"update": "id:blog-p:paragraph::blog/build-qa-app-from-python-with-vespa/index.html-paragraph", "fields": {"questions": {"assign": ["What is the context_id?", "What is the Basilica of the Sacred Heart?", "What is the Grotto?", "What is the statue of Mary made of?", "What is the legend on the Christ statue?", "What is the replica of the Grotto?"]}}}
{"update": "id:blog-p:paragraph::blog/build-qa-app-from-python-with-vespa/index.html-questions", "fields": {"questions": {"assign": ["What is context_id?", "How many questions can context_id=0 answer?", "What is the file format for questions?", "How can we display the first five questions?"]}}}
{"update": "id:blog-p:paragraph::blog/build-qa-app-from-python-with-vespa/index.html-note-that-squad\\_queries.txt-has-approx.-1-gb-due-to-the-512-sized-question-embeddings", "fields": {"questions": {"assign": ["What is the format of 'read_csv' in Vespa.ai?", "What is 'Squad_queries.txt' in Vespa.ai?", "What is the 'questions' variable?", "What are the column names in 'questions' variable?"]}}}
{"update": "id:blog-p:paragraph::blog/build-qa-app-from-python-with-vespa/index.html-paragraph-sentences", "fields": {"questions": {"assign": ["What is the benefit of breaking paragraphs down?", "How can we break paragraphs down?", "What is context_id?", "Which sentence can answer question_id 4?", "What is the example sentence from context_id 0?", "How can sentences improve accuracy?", "What is the importance of sentence segmentation?"]}}}
{"update": "id:blog-p:paragraph::blog/build-qa-app-from-python-with-vespa/index.html-note-that-qa_squad_sentence_data.json-has-approx.-1-gb-due-to-the-512-sized-sentence-embeddings", "fields": {"questions": {"assign": ["What is on the Main Building's dome?", "What material is the statue?", "What is the Virgin Mary?"]}}}
{"update": "id:blog-p:paragraph::blog/build-qa-app-from-python-with-vespa/index.html-embeddings", "fields": {"questions": {"assign": ["How are sentence embeddings generated?", "What is the size of the embeddings?", "What is the Universal Sentence Encoder?", "What script was used to generate the embeddings?"]}}}
{"update": "id:blog-p:paragraph::blog/build-qa-app-from-python-with-vespa/index.html-create-and-deploy-the-application", "fields": {"questions": {"assign": ["What is a sentence-level Question answering?"]}}}
{"update": "id:blog-p:paragraph::blog/build-qa-app-from-python-with-vespa/index.html-schema-to-hold-context-information", "fields": {"questions": {"assign": ["What is the context schema?", "What fields does the context document contain?", "What is enable-bm25?", "What is the default fieldset?", "How many rank-profiles are defined?"]}}}
{"update": "id:blog-p:paragraph::blog/build-qa-app-from-python-with-vespa/index.html-schema-to-hold-sentence-information", "fields": {"questions": {"assign": ["What is the semantic-similarity rank profile?", "What is the bm25 rank profile?"]}}}
{"update": "id:blog-p:paragraph::blog/build-qa-app-from-python-with-vespa/index.html-build-the-application-package", "fields": {"questions": {"assign": ["What is a `qa` application?", "What is an application package?", "What is the `context_schema`?", "What is the `sentence_schema`?", "What is the `sentence_embedding` field?"]}}}
{"update": "id:blog-p:paragraph::blog/build-qa-app-from-python-with-vespa/index.html-deploy-the-application", "fields": {"questions": {"assign": ["How to deploy app_package?", "What is VespaDocker?"]}}}
{"update": "id:blog-p:paragraph::blog/build-qa-app-from-python-with-vespa/index.html-feed-the-data", "fields": {"questions": {"assign": ["How to interact with Vespa?", "What is the syntax for feeding data to Vespa?", "What is the average time to feed sentence data?", "What is the average time to feed context data?"]}}}
{"update": "id:blog-p:paragraph::blog/build-qa-app-from-python-with-vespa/index.html-sentence-level-retrieval", "fields": {"questions": {"assign": ["What is the 'nearestNeighbor' operator?", "What is Euclidean distance?", "What is the `sentence` schema?", "What is the `semantic-similarity` rank profile?", "What is the 'context_id' field?"]}}}
{"update": "id:blog-p:paragraph::blog/build-qa-app-from-python-with-vespa/index.html-sentence-level-hybrid-retrieval", "fields": {"questions": {"assign": ["What is the hybrid rank-profile used?", "What is the semantic operator called?", "What is the term-based operator called?", "What is the `targetNumHits` parameter?", "What retrieves all documents that match at least one query token?"]}}}
{"update": "id:blog-p:paragraph::blog/build-qa-app-from-python-with-vespa/index.html-paragraph-level-retrieval", "fields": {"questions": {"assign": ["How do you retrieve paragraphs?", "How many paragraphs are returned?", "What does each paragraph contain?", "What are the summary features for each sentence?", "What is the max sentence score used?"]}}}
{"update": "id:blog-p:paragraph::blog/build-qa-app-from-python-with-vespa/index.html-conclusion-and-future-work", "fields": {"questions": {"assign": ["What is Universal Sentence Encoder?", "What is the state-of-the-art baseline for retrieval-based question-answering systems?", "What methodology was used to generate embeddings?", "What was used to reproduce the state-of-the-art baseline?", "What can be done within a single, scalable production-ready application?"]}}}
{"update": "id:blog-p:paragraph::blog/pretrained-transformer-language-models-for-search-part-1/index.html-", "fields": {"questions": {"assign": ["What is the MS Marco dataset?", "What is a transformer model?", "What is multi-phase retrieval and ranking?", "What is covered in the first post of the blog series?", "How does Vespa.ai help with transformer models for text ranking?"]}}}
{"update": "id:blog-p:paragraph::blog/pretrained-transformer-language-models-for-search-part-1/index.html-introduction", "fields": {"questions": {"assign": ["What is MS MARCO Passage Ranking?", "What is reciprocal rank?", "How can Transformer family models be used for text ranking?", "What is the official evaluation metric for MS MARCO?", "How is BERT fine-tuned for retrieval?", "What is the best way to use Transformer models for text ranking?"]}}}
{"update": "id:blog-p:paragraph::blog/pretrained-transformer-language-models-for-search-part-1/index.html-representation-based-ranking-using-transformer-models", "fields": {"questions": {"assign": ["What is representation learning?", "What is the benefit of using dense retrieval?", "What is the current state-of-the-art for document ranking?", "What is the complexity of Transformer models with full all-to-all cross attention?"]}}}
{"update": "id:blog-p:paragraph::blog/pretrained-transformer-language-models-for-search-part-1/index.html-all-to-all-interaction-ranking-using-transformers", "fields": {"questions": {"assign": ["What is the classic way to use BERT for ranking?", "What is monoBERT?", "How is the negative examples sampled?", "Is running online inference with cross-attention models computationally expensive?", "What is the solution for reducing the number of candidate documents for all to all cross attention model?", "What has led to increased interest in more efficient Transformer models?", "How should all-to-all interaction models be trained?"]}}}
{"update": "id:blog-p:paragraph::blog/pretrained-transformer-language-models-for-search-part-1/index.html-late-interaction-using-transformers", "fields": {"questions": {"assign": ["How does late interaction work?", "What is the advantage of late interaction over all-to-all?", "What is the downside of the late interaction model?", "How many embeddings are there per term in the ColBERT model?", "What does reducing the dimensionality of the embeddings achieve?", "How can we reduce memory requirements in ColBERT?"]}}}
{"update": "id:blog-p:paragraph::blog/pretrained-transformer-language-models-for-search-part-1/index.html-multi-phase-retrieval-and-ranking", "fields": {"questions": {"assign": ["What is multiphase retrieval?", "What is late interaction model?", "What is a phased ranking?", "What is cross-attention Transformer?", "What is the purpose of document re-ranking?", "What is the motivation for multi-phase retrieval?"]}}}
{"update": "id:blog-p:paragraph::blog/pretrained-transformer-language-models-for-search-part-1/index.html-sparse-lexical-retrieval", "fields": {"questions": {"assign": ["What is lexical matching?", "How does dynamic pruning work?", "What is WAND algorithm?", "What is sub-linear retrieval?", "What is the history of IR?"]}}}
{"update": "id:blog-p:paragraph::blog/pretrained-transformer-language-models-for-search-part-1/index.html-dense-retrieval", "fields": {"questions": {"assign": ["How does Vespa support retrieval?", "What is in-domain dense retrievers?"]}}}
{"update": "id:blog-p:paragraph::blog/pretrained-transformer-language-models-for-search-part-1/index.html-hybrid-dense-sparse-retrieval", "fields": {"questions": {"assign": ["What is the hybrid approach?", "What search technology supports hybrid retrieval?", "What algorithms does Vespa.ai use for hybrid retrieval?"]}}}
{"update": "id:blog-p:paragraph::blog/pretrained-transformer-language-models-for-search-part-1/index.html-summary", "fields": {"questions": {"assign": ["What are Transformers?", "What is the WAND query operator?", "What is the ANN query operator?", "What will be covered in third post?"]}}}
{"update": "id:blog-p:paragraph::blog/news-recommendation-with-parent-child-relationship/index.html-", "fields": {"questions": {"assign": ["What is category CTR?", "How do we update CTR values?", "What are parent-child relationships?", "What does this Vespa tutorial replicate?", "What is assumed for following this tutorial?"]}}}
{"update": "id:blog-p:paragraph::blog/news-recommendation-with-parent-child-relationship/index.html-setting-up-a-global-category-ctr-document", "fields": {"questions": {"assign": ["What is global document?", "What is category_ctr?", "What are the benefits of using parent-child relationship?", "How does Vespa implement global documents?", "What is tensor literal form?"]}}}
{"update": "id:blog-p:paragraph::blog/news-recommendation-with-parent-child-relationship/index.html-importing-parent-values-in-child-documents", "fields": {"questions": {"assign": ["What is `category_ctr` used for?", "How to reference `category_ctr` document?", "What is `category_ctr_ref`?", "What is `global_category_ctrs`?", "How to import `ctrs` field?", "What is the id format for `category_ctr`?", "What does `imported_field` do?", "How to reference multiple parent documents?"]}}}
{"update": "id:blog-p:paragraph::blog/news-recommendation-with-parent-child-relationship/index.html-tensor-expressions-in-ranking", "fields": {"questions": {"assign": ["What is the 'category' field?", "What is 'category_tensor' field?", "How is category information used?", "What is the tensor expression used?"]}}}
{"update": "id:blog-p:paragraph::blog/news-recommendation-with-parent-child-relationship/index.html-feed", "fields": {"questions": {"assign": ["What is global category CTR data?", "How do I download the global category CTR data?", "What are the category dimension?", "Can I reference the category CTR data point?", "What is the Vespa id for global category CTR data?", "How do I update news documents with category CTR data?", "What is the new category_tensor value for lifestyle category in the news documents?"]}}}
{"update": "id:blog-p:paragraph::blog/news-recommendation-with-parent-child-relationship/index.html-testing-the-new-rank-profile", "fields": {"questions": {"assign": ["What is the `query_user_embedding` function?", "What is the value of global category CTR for sports?", "What kind of article is hit 0?", "What is the relevance score for hit 0?", "What is the intended result of `category_ctr` function?", "What does the `parse_embedding` function do?", "How do you make a query using `recommendation_with_global_category_ctr` rank-profile?"]}}}
{"update": "id:blog-p:paragraph::blog/news-recommendation-with-parent-child-relationship/index.html-conclusion", "fields": {"questions": {"assign": ["What is a parent-child relationship?", "What is global CTR feature?", "How to clean up Docker container instances?"]}}}
{"update": "id:blog-p:paragraph::blog/pretrained-transformer-language-models-for-search-part-2/index.html-", "fields": {"questions": {"assign": ["What is a retriever in IR?"]}}}
{"update": "id:blog-p:paragraph::blog/pretrained-transformer-language-models-for-search-part-2/index.html-multiphase-retrieval-and-ranking", "fields": {"questions": {"assign": ["What is multiphase retrieval?", "What are the two categories of retrieval methods?", "How does Vespa perform multiphase ranking?", "What is sparse retrieval?", "What is dense retrieval?", "What is the WAND algorithm?", "How effective are these methods on MS Marco dataset?"]}}}
{"update": "id:blog-p:paragraph::blog/pretrained-transformer-language-models-for-search-part-2/index.html-sparse-lexical-retrieval", "fields": {"questions": {"assign": ["What is BM25?", "What is the Vespa query language?", "What is the Simple query language?"]}}}
{"update": "id:blog-p:paragraph::blog/pretrained-transformer-language-models-for-search-part-2/index.html-meet-the-dynamic-pruning-algorithm-wand", "fields": {"questions": {"assign": ["What is the WAND algorithm?", "What is the benefits of WAND in Vespa?", "What is the impact of using WAND in Vespa?", "What is the difference between weakAnd() and wand()?", "How to implement DeepCT in Vespa using the wand() operator?", "What is RetrievalModelSearcher?", "What is the weakAnd.replace function in Vespa?"]}}}
{"update": "id:blog-p:paragraph::blog/pretrained-transformer-language-models-for-search-part-2/index.html-dense-retrieval-using-bi-encoders-over-transformer-models", "fields": {"questions": {"assign": ["What is a dense retriever?", "What is mini_document_embedding?", "What is the purpose of the dense ranking profile?", "What is the MiniLM model?", "What is the accuracy versus performance tradeoff for HNSW indexing?", "How is the query encoded for dense retrieval?", "How is approximate nearest neighbor search used for dense retrieval?"]}}}
{"update": "id:blog-p:paragraph::blog/pretrained-transformer-language-models-for-search-part-2/index.html-representing-the-bi-encoder-model-inside-vespa", "fields": {"questions": {"assign": ["What is the bi-encoder query model?", "What format is needed for efficient serving?", "How does Vespa support evaluating ONNX models for ranking?", "What is the benefit of using quantized version when evaluating on CPU?", "What example application demonstrates how to represent query encoders?", "How is nearest neighbor search implemented in Vespa dense passage retrieval?"]}}}
{"update": "id:blog-p:paragraph::blog/pretrained-transformer-language-models-for-search-part-2/index.html-hybrid-dense-sparse-retrieval", "fields": {"questions": {"assign": ["What is the hybrid approach?", "What is WAND and ANN?", "How does Vespa support hybrid retrieval?", "What is the difference between using Disjunction and Rank?", "How does Vespa combine dense and sparse retrieval?", "What is the parameter weighting for first-phase ranking expression?", "What is the efficiency of hybrid retrieval schema?"]}}}
{"update": "id:blog-p:paragraph::blog/pretrained-transformer-language-models-for-search-part-2/index.html-retriever-evaluation", "fields": {"questions": {"assign": ["What is the recall of nearestNeighbor at 1000 hits?", "What is the MRR of weakAnd at 10 hits?", "What is the runtime latency for precision oriented run?", "What is the purpose of evaluate_passage_run.py script?", "What is the output format of msMarco_eval.py script?", "What is the purpose of dense retriever?"]}}}
{"update": "id:blog-p:paragraph::blog/pretrained-transformer-language-models-for-search-part-2/index.html-", "fields": {"questions": {"assign": ["What is MRR @10?"]}}}
{"update": "id:blog-p:paragraph::blog/pretrained-transformer-language-models-for-search-part-2/index.html-", "fields": {"questions": {"assign": ["What is the speed of single thread iterations?", "What is the recall metric for sparse bm25?", "What is the purpose of HNSW exploration?", "What is the difference between MRR and Recall metrics?", "What is the impact of using a different domain on dense retriever?", "What is the end-to-end time including query encoding and nearest neighbor search for 50 iterations/s using a single thread?", "How much time does sparse retriever take when fetching 10 hits?", "What is the purpose of quantization in query encoding?"]}}}
{"update": "id:blog-p:paragraph::blog/pretrained-transformer-language-models-for-search-part-2/index.html-summary", "fields": {"questions": {"assign": ["What is WAND query operator?", "What is ANN query operator?", "What is all-to-all interaction?"]}}}
{"update": "id:blog-p:paragraph::blog/pretrained-transformer-language-models-for-search-part-3/index.html-", "fields": {"questions": {"assign": ["What is the MS Marco dataset?", "What is ColBERT model?", "What is multiphase retrieval and ranking pipeline?", "What is the difference between retriever and re-ranker?", "What is the purpose of the third post?", "Who introduced the ColBERT model?"]}}}
{"update": "id:blog-p:paragraph::blog/pretrained-transformer-language-models-for-search-part-3/index.html-contextualized-late-interaction-over-bert-(colbert)", "fields": {"questions": {"assign": ["What is a bi-encoder architecture?", "What is the contextualized late interaction model?", "What is the ColBERT architecture?", "What is query augmentation?", "What is the dimensionality reduction layer?", "How does dimensionality impact storage requirements?"]}}}
{"update": "id:blog-p:paragraph::blog/pretrained-transformer-language-models-for-search-part-3/index.html-ranking-with-colbert---meet-maxsim", "fields": {"questions": {"assign": ["What is the ColBERT architecture?", "What is the late interaction similarity function?", "How is the MaxSim relevancy score calculated?", "What is the query encoding in ColBERT?", "What is the document encoding in ColBERT?", "How many cosine similarity operations are needed for a given query and document pair in ColBERT?", "How can cosine similarity be performed efficiently in ColBERT?", "What are advanced vector instructions in ColBERT?"]}}}
{"update": "id:blog-p:paragraph::blog/pretrained-transformer-language-models-for-search-part-3/index.html-vespa-colbert-representation", "fields": {"questions": {"assign": ["What is ColBERT for?", "How is ColBERT represented in Vespa?", "What is the MaxSim function?", "What is a mixed Vespa tensor field?", "What is the purpose of the 'dt' field?", "What is the benefit of using a mixed tensor?", "Why not use an indexed representation for the 'dt' field?"]}}}
{"update": "id:blog-p:paragraph::blog/pretrained-transformer-language-models-for-search-part-3/index.html-vespa-passage-document-schema", "fields": {"questions": {"assign": ["What is the new document schema?", "What is the tensor cell value precision used?", "How much memory does bfloat16 save per value?", "What are the dimensions used for per token embedding representation?", "What does the indexing statement specify?", "What does fast-search enable for mixed tensor type fields?", "Is fast-search relevant for all tensor fields?"]}}}
{"update": "id:blog-p:paragraph::blog/pretrained-transformer-language-models-for-search-part-3/index.html-vespa-colbert-query-encoder", "fields": {"questions": {"assign": ["What is the ColBERT model?", "Where can the ColBERT model be downloaded?", "How can the PyTorch transformer model be exported to ONNX format?", "What is quantization?", "What is the role of the ColBERTSearcher?"]}}}
{"update": "id:blog-p:paragraph::blog/pretrained-transformer-language-models-for-search-part-3/index.html-colbert-ranking-evaluation", "fields": {"questions": {"assign": ["What is ColBERT?", "What is MS Marco Passage Ranking?", "What is the MRR@10 for ColBERT?", "Does ColBERT improve Recall@100?", "What is the end-to-end latency for ColBERT?", "How can ColBERT trade accuracy versus cost?"]}}}
{"update": "id:blog-p:paragraph::blog/pretrained-transformer-language-models-for-search-part-3/index.html-summary", "fields": {"questions": {"assign": ["What is ColBERT model?", "What is MaxSim ColBERT function?", "What is cross-encoder model?", "What does the fourth post introduce?", "What is the purpose of the third re-ranking step?"]}}}
{"update": "id:blog-p:paragraph::blog/build-basic-text-search-app-from-python-with-vespa-part-2/index.html-", "fields": {"questions": {"assign": ["What is pyvespa?", "What does the tutorial illustrate?"]}}}
{"update": "id:blog-p:paragraph::blog/build-basic-text-search-app-from-python-with-vespa-part-2/index.html-feed-additional-data-points", "fields": {"questions": {"assign": ["What is CORD19 sample data?", "Where can additional data be downloaded?", "How can data be fed to app?", "What fields are included in data?", "What is the response from app?", "What is the cord_uid field?"]}}}
{"update": "id:blog-p:paragraph::blog/build-basic-text-search-app-from-python-with-vespa-part-2/index.html-define-query-models-to-compare", "fields": {"questions": {"assign": ["What is a QueryModel?", "What is BM25?", "What is the difference between or_bm25 and wand_bm25?", "What is WeakAnd?", "How does WeakAnd affect recall and precision?", "What is an accelerated OR operator?", "What does the 'next section' show about WeakAnd?"]}}}
{"update": "id:blog-p:paragraph::blog/build-basic-text-search-app-from-python-with-vespa-part-2/index.html-run-experiments", "fields": {"questions": {"assign": ["What is the MatchRatio metric?", "What is labeled data?"]}}}
{"update": "id:blog-p:paragraph::blog/build-basic-text-search-app-from-python-with-vespa-part-2/index.html-evaluate", "fields": {"questions": {"assign": ["What is the 'evaluate' method?", "What is the Match Ratio?", "What is the NDCG metric?", "What is the purpose of the evaluate() method?", "What is the difference between OR and WeakAnd operators?"]}}}
{"update": "id:blog-p:paragraph::blog/build-basic-text-search-app-from-python-with-vespa-part-2/index.html-specify-summary-statistics", "fields": {"questions": {"assign": ["What are the default `evaluate` method return values?", "How do you customize the `evaluate` method?"]}}}
{"update": "id:blog-p:paragraph::blog/build-basic-text-search-app-from-python-with-vespa-part-2/index.html-check-detailed-metrics-output", "fields": {"questions": {"assign": ["What is MatchRatio metric?", "What does detailed_metrics do?"]}}}
{"update": "id:blog-p:paragraph::blog/build-basic-text-search-app-from-python-with-vespa-part-2/index.html-get-per-query-results", "fields": {"questions": {"assign": ["What is per-query in Vespa?", "How do you set per-query to True in Vespa?"]}}}
{"update": "id:blog-p:paragraph::blog/build-basic-text-search-app-from-python-with-vespa-part-2/index.html-find-optimal-weakand-parameter", "fields": {"questions": {"assign": ["How can you find the optimal `hits` parameter with the `WeakAnd` operator?", "What is the list of query models defined?", "What is the difference between the `hits` parameters in the query models?", "What does a higher `hits` parameter imply?", "What is the optimal value of `hits` for this specific application?", "How many documents can the `WeakAnd` operator match on average with hits=4?"]}}}
{"update": "id:blog-p:paragraph::blog/build-basic-text-search-app-from-python-with-vespa-part-2/index.html-conclusion", "fields": {"questions": {"assign": ["How to run Vespa experiments from Python?", "What is WeakAnd match operator?", "What is OR match operator?", "How does WeakAnd compare to OR?", "What are related Vespa resources?"]}}}
{"update": "id:blog-p:paragraph::blog/pretrained-transformer-language-models-for-search-part-4/index.html-", "fields": {"questions": {"assign": ["What is the MS Marco Passage Ranking Leaderboard?", "Who created the MS Marco dataset?"]}}}
{"update": "id:blog-p:paragraph::blog/pretrained-transformer-language-models-for-search-part-4/index.html-introduction", "fields": {"questions": {"assign": ["What is the cross-encoder model?", "How is the cross-encoder model integrated in Vespa?", "What is the computational complexity of the cross attention model?", "What is the MS Marco passage training set?", "What is the size of the MiniLM model used in the cross-encoder model?", "What is the purpose of quantizing weights in the cross-encoder model?", "Where is the cross-encoder model hosted?"]}}}
{"update": "id:blog-p:paragraph::blog/pretrained-transformer-language-models-for-search-part-4/index.html-vespa-representation-of-the-cross-encoder-model", "fields": {"questions": {"assign": ["What is the passage schema?", "What is the text_token_ids field?", "What is the maximum tokens stored?", "How are tokens mapped?", "What is the tensor representation?", "What is the WordPiece embedder?", "What is stored in the passage document schema?"]}}}
{"update": "id:blog-p:paragraph::blog/pretrained-transformer-language-models-for-search-part-4/index.html-vespa-ranking-with-cross-encoder-model", "fields": {"questions": {"assign": ["What is ColBERT model?", "How is the ranking pipeline structured?", "What is the impact of the two re-ranking depth parameters on serving performance and ranking accuracy?", "What is the nearest neighbor search target number of hits?", "What is rerank-count?"]}}}
{"update": "id:blog-p:paragraph::blog/pretrained-transformer-language-models-for-search-part-4/index.html-defining-the-minilm-cross-encoder", "fields": {"questions": {"assign": ["What is the purpose of cross-encoder?", "How is the ColBERT MaxSim function computed?", "What is the purpose of rerank-count in the ranking profile?"]}}}
{"update": "id:blog-p:paragraph::blog/pretrained-transformer-language-models-for-search-part-4/index.html-ms-marco-passage-ranking-submission", "fields": {"questions": {"assign": ["How many passages are re-ranked?", "What is the MS Marco Passage Ranking Leaderboard?"]}}}
{"update": "id:blog-p:paragraph::blog/pretrained-transformer-language-models-for-search-part-4/index.html-multi-threaded-retrieval-and-ranking", "fields": {"questions": {"assign": ["What is search latency?", "How can Vespa reduce search latency?", "How are search queries partitioned?", "What controls the number of threads used?", "What is the recommended approach to find optimal settings?"]}}}
{"update": "id:blog-p:paragraph::blog/pretrained-transformer-language-models-for-search-part-4/index.html-serving-performance-versus-ranking-accuracy", "fields": {"questions": {"assign": ["What is benchmarking?", "What is vespa-fbench?", "What is tail latency?", "What is WAND query operator?"]}}}
{"update": "id:blog-p:paragraph::blog/pretrained-transformer-language-models-for-search-part-4/index.html-benchmarking-results", "fields": {"questions": {"assign": ["What is the Dense(ANN) retrieval method?", "What is the impact of the last re-ranking phase on cost and accuracy?"]}}}
{"update": "id:blog-p:paragraph::blog/pretrained-transformer-language-models-for-search-part-4/index.html-summary", "fields": {"questions": {"assign": ["What is multi-phase retrieval?", "What is the performance versus accuracy trade-off?", "Where can I try out these retrieval and ranking methods?"]}}}
{"update": "id:blog-p:paragraph::blog/http2/index.html-", "fields": {"questions": {"assign": ["What is HTTP/2 support?", "How does Vespa enable HTTP/2?", "What are the benefits of HTTP/2 in Vespa?", "What can HTTP/2 be used for in Vespa?"]}}}
{"update": "id:blog-p:paragraph::blog/http2/index.html-why-http/2", "fields": {"questions": {"assign": ["What is HTTP/2?", "What motivated HTTP/2?", "What features does HTTP/2 have?", "What is header compression?", "What is the head-of-line-blocking problem of HTTP/1.1?", "What does HTTP/2 improve upon?", "What TLS version does HTTP/2 require?", "What is the stance of most browser vendors on HTTP/2 and security?"]}}}
{"update": "id:blog-p:paragraph::blog/http2/index.html-adding-http/2-support-to-vespa", "fields": {"questions": {"assign": ["What HTTP stack powers Vespa Container?", "Does Jetty 9.4 support HTTP/2?", "Why does Vespa adopt HTTP/2 over TLS only?", "What is the TLS Application-Layer Protocol Negotiation Extension?", "Can Vespa Container serve both HTTP/1.1 and HTTP/2 from the same port?", "Did HTTP/2 without TLS become supported in a specific version of Vespa?", "What cipher suites does Vespa allow by default?", "What is the TLSv1.2 cipher suite blocklist?"]}}}
{"update": "id:blog-p:paragraph::blog/http2/index.html-vespa-http/2-performance", "fields": {"questions": {"assign": ["What is h2load?", "What is HTTP/2?", "How does HTTP/2 compare to HTTP/1.1?", "What is the highest throughput for HTTP/2?", "What is the difference in CPU utilization between HTTP/1.1 and HTTP/2?", "What is the QPS for HTTP/2 with 256 concurrent streams?", "What is the QPS for HTTP/1.1 with 128 connections?", "What is the bottleneck for h2load during the single connection benchmark?"]}}}
{"update": "id:blog-p:paragraph::blog/http2/index.html-simple,-yet-effective-feeding-over-http/2-against-/document/v1", "fields": {"questions": {"assign": ["What is /document/v1?", "What is Vespa Document API?", "What is the design of /document/v1 API?", "What is the throughput achievable using /document/v1?", "What is Vespa HTTP Client?", "What is custom-protocol /feedapi?", "What changed with HTTP/2 support in Vespa?", "What is the recommended choice for implementing own feed client?"]}}}
{"update": "id:blog-p:paragraph::blog/http2/index.html-high-throughput-requires-many-in-flight-operations", "fields": {"questions": {"assign": ["What is the benefit of using HTTP/2 for feeding in Vespa?", "How many concurrent feed operations can `/document/v1` handle?", "What is HTTP/2 multiplexing?", "How does HTTP/1.0 handle in-flight feed operations?", "How does HTTP/1.1 pipelining compare to HTTP/2 multiplexing?", "What are the limitations of HTTP/1.1 pipelining?", "What are the benefits of using HTTP/2 over HTTP/1?"]}}}
{"update": "id:blog-p:paragraph::blog/http2/index.html-ordering-feed-operations-for-correctness", "fields": {"questions": {"assign": ["How are multiple operations serialized?"]}}}
{"update": "id:blog-p:paragraph::blog/http2/index.html-an-asynchronous-example", "fields": {"questions": {"assign": ["What is an HTTP/2 client?", "What is a future?", "What is a promise?", "What is an efficient feed client?", "What is the inflight map used for?", "What does enqueue do?", "What is the purpose of the linked queue?", "How does dispatch handle retries?"]}}}
{"update": "id:blog-p:paragraph::blog/http2/index.html-our-java-implementation", "fields": {"questions": {"assign": ["What is the design for the new Java feed client?", "What is the client-side overhead of HTTP requests?"]}}}
{"update": "id:blog-p:paragraph::blog/http2/index.html-getting-started-with-http/2", "fields": {"questions": {"assign": ["What does Vespa enable by default?", "What is the minimum Vespa version for HTTP/2?", "How do I verify HTTP/2 is enabled?"]}}}
{"update": "id:blog-p:paragraph::blog/http2/index.html-feeding-with-vespa-feed-client", "fields": {"questions": {"assign": ["What is the new Java feed client?", "Where can I find the vespa-feed-client documentation?", "What is the purpose of the vespa-feed-client?", "What are the available options for vespa-feed-client?", "What is the syntax for putting a document using the feed client?", "How can I handle errors when using the feed client?", "What is the minimum requirement for Vespa version to use the new feed client?", "Is feedback encouraged for the new feed client?"]}}}
{"update": "id:blog-p:paragraph::blog/stateless-model-evaluation/index.html-", "fields": {"questions": {"assign": ["What is the division of work in Vespa?", "What is natural language processing?", "What is accelerated model evaluation?", "What new usage areas does Vespa open up?", "How does Vespa evaluate models in both clusters?"]}}}
{"update": "id:blog-p:paragraph::blog/stateless-model-evaluation/index.html-introduction", "fields": {"questions": {"assign": ["What is stateful model serving?", "What is stateless model evaluation?", "What are the capabilities of stateless model evaluation in Vespa.ai?", "How does Vespa.ai accelerate stateful model evaluation?", "What are some use cases of stateless model evaluation in Vespa.ai?", "What is the difference between stateful and stateless model evaluation in Vespa.ai?"]}}}
{"update": "id:blog-p:paragraph::blog/stateless-model-evaluation/index.html-stateless-model-evaluation", "fields": {"questions": {"assign": ["What is stateless model evaluation?", "How is model discovery enabled?", "What is the ModelsEvaluator object?", "What are the effects of adding the model-evaluation tag?", "What is the sample app for model inference?", "Which custom components can use ModelsEvaluator?", "How are machine-learned models evaluated on Vespa?"]}}}
{"update": "id:blog-p:paragraph::blog/stateless-model-evaluation/index.html-rest-api", "fields": {"questions": {"assign": ["What is the REST API for?", "What is model-evaluation?", "What is the output tensor type?", "How is the model evaluated?"]}}}
{"update": "id:blog-p:paragraph::blog/stateless-model-evaluation/index.html-request-handlers", "fields": {"questions": {"assign": ["What is a request handler?", "What is ModelsEvaluator?", "How can arbitrary code be run?", "What can be done with custom request handlers?", "Can the processing pipeline be put in the model?", "What is an example of using ModelsEvaluator?", "What is the input for REST API and models?"]}}}
{"update": "id:blog-p:paragraph::blog/stateless-model-evaluation/index.html-document-processors", "fields": {"questions": {"assign": ["What are document processors in Vespa?", "How can custom document processors be implemented?", "What is a typical task for model evaluation?", "What is a ModelsEvaluator?", "What is an example of a natural language task that can be performed using Vespa?", "What is the purpose of the `MyDocumentProcessor` class?", "What does the `MyDocumentProcessor` class do with the input tensor?", "Where can a full example of the `MyDocumentProcessor` class be found?"]}}}
{"update": "id:blog-p:paragraph::blog/stateless-model-evaluation/index.html-conclusion", "fields": {"questions": {"assign": ["What is the role of model servers in Vespa.ai?", "What is the purpose of accelerated machine-learned model evaluation?", "Is it possible to move model evaluation out of the content node?"]}}}
{"update": "id:blog-p:paragraph::blog/summer-interns/index.html-", "fields": {"questions": {"assign": ["What did the interns explore?", "What is the search-as-you-type app?", "What is the search-suggestions app?"]}}}
{"update": "id:blog-p:paragraph::blog/summer-interns/index.html-search-as-you-type", "fields": {"questions": {"assign": ["What is a search-as-you-type application?", "What is the purpose of using n-grams in search?", "What is the recommended gram-size for substring-like search using n-grams?", "What is nativeRank?", "What is the role of the weighted_doc_rank rank-profile in the search-as-you-type application?", "How was the search bar implemented in the Vespa application?", "What is the use of a debounce-function in the search bar implementation?"]}}}
{"update": "id:blog-p:paragraph::blog/summer-interns/index.html-search-suggestion", "fields": {"questions": {"assign": ["What is search-suggestion application?", "How does search-suggestion application work?", "Which search method did the application use initially?", "What is the allowed-list used for in search-suggestion?", "How did the application use static web page java server?", "What are the benchmark results for streaming search?", "How does the search-suggestion application scale compared to streaming search?", "What is the vespa-documentation-search deployment used for?"]}}}
{"update": "id:blog-p:paragraph::blog/summer-interns/index.html-aws-lambda", "fields": {"questions": {"assign": ["What is the search-suggestion application?", "How does the AWS Lambda function work?", "What are query logs?", "What is zstd-compression?", "What was the biggest problem faced when writing the Lambda function?", "How was the zstd-library issue resolved?", "What is AWS SAM?", "What is web assembly?"]}}}
{"update": "id:blog-p:paragraph::blog/summer-interns/index.html-other-projects", "fields": {"questions": {"assign": ["What is the visualization view?", "What is Proton?", "What technology was used for the visualization view?", "What performance tests were worked with?", "What is the Vespa Console?", "What private data was removed from performance tests?", "Was the implementation of the visualization view successful?"]}}}
{"update": "id:blog-p:paragraph::blog/summer-interns/index.html-the-experience-at-vespa", "fields": {"questions": {"assign": ["How did the interns learn Vespa?", "Did the interns always find answers in the documentation?", "What did the interns learn during the internship?", "What technologies did the interns use?", "What did the internship teach the interns about working in a team?", "What did the interns wish they could explore more?", "What did the interns enjoy about the experience at Vespa?"]}}}
{"update": "id:blog-p:paragraph::blog/securing-vespa-with-mutually-authenticated-tls/index.html-", "fields": {"questions": {"assign": ["What is mTLS", "How to enable mTLS", "What is the Vespa mTLS documentation", "What is the secure-vespa-with-mtls sample application", "How long has Vespa Cloud been using mTLS", "Is mTLS available in Open Source Vespa", "Is mTLS automatically configured for Vespa Cloud customers"]}}}
{"update": "id:blog-p:paragraph::blog/securing-vespa-with-mutually-authenticated-tls/index.html-why-mtls", "fields": {"questions": {"assign": ["What is mTLS?", "Why secure container endpoints?", "What does mTLS do for clusters?", "How does mTLS improve security?", "What does mTLS prevent?", "What is the purpose of securing endpoints?", "How does mTLS authenticate services?", "What are the benefits of securing the cluster with mTLS?"]}}}
{"update": "id:blog-p:paragraph::blog/securing-vespa-with-mutually-authenticated-tls/index.html-mtls-for-vespa", "fields": {"questions": {"assign": ["What are the two separate TLS planes offered by Vespa?", "What is mTLS for?", "What is handled at the HTTP(S) application container endpoints?"]}}}
{"update": "id:blog-p:paragraph::blog/securing-vespa-with-mutually-authenticated-tls/index.html-public-key-infrastructure-(pki)", "fields": {"questions": {"assign": ["What is a Certificate Authority?", "What does Vespa enforce by default?", "How often does Vespa Cloud refresh cluster internal certificates?"]}}}
{"update": "id:blog-p:paragraph::blog/securing-vespa-with-mutually-authenticated-tls/index.html-vespa-internal-communication", "fields": {"questions": {"assign": ["What is mTLS?", "How is mTLS controlled?", "What is VESPA_TLS_CONFIG_FILE?", "Where is the TLS configuration file reference?", "What is included in the minimal configuration for the sample application?", "What is the scope of the TLS configuration?", "Will the configuration be picked up by CLI tools on the hosts?"]}}}
{"update": "id:blog-p:paragraph::blog/securing-vespa-with-mutually-authenticated-tls/index.html-application-container-endpoints", "fields": {"questions": {"assign": ["What is application container TLS?", "Where is TLS configured?", "What is `services.xml`?", "What is the sample configuration?", "What is the purpose of port 8443?", "What is the `VESPA_TLS_CONFIG_FILE` environment variable?", "What is a client CA?", "How to configure HTTPS with TLS in Vespa?"]}}}
{"update": "id:blog-p:paragraph::blog/securing-vespa-with-mutually-authenticated-tls/index.html-verifying-tls-configuration", "fields": {"questions": {"assign": ["What is the Vespa configserver?", "What is the client certificate for?", "What is the application container HTTPS endpoint?"]}}}
{"update": "id:blog-p:paragraph::blog/securing-vespa-with-mutually-authenticated-tls/index.html-conclusion", "fields": {"questions": {"assign": ["Why is mTLS crucial?", "What is the Vespa mTLS sample?", "How to configure Vespa with mTLS?"]}}}
{"update": "id:blog-p:paragraph::blog/introducing-vespa-cli/index.html-", "fields": {"questions": {"assign": ["What are the primary deployment methods for Vespa applications?", "What were the challenges with using Vespa APIs and the Maven plugin?", "What is the official command-line tool for deploying Vespa applications?", "Does the official command-line tool support self-hosted Vespa installations and Vespa Cloud?"]}}}
{"update": "id:blog-p:paragraph::blog/introducing-vespa-cli/index.html-vespa-cli", "fields": {"questions": {"assign": ["What is Vespa CLI?", "How can I install Vespa CLI?", "What can I do with Vespa CLI?", "Is Vespa CLI open source?", "How can I provide feedback on Vespa CLI?"]}}}
{"update": "id:blog-p:paragraph::blog/computing-with-tensors/index.html-", "fields": {"questions": {"assign": ["What is a tensor?", "What is Vespa's tensor formalism?", "What are the differences of Vespa's tensor formalism from other machine learning frameworks?", "What are named dimensions in Vespa's tensor formalism?", "What are the core functions in Vespa's tensor formalism?", "What is the Vespa tensor playground?", "What can be done with the Vespa tensor playground?", "How can Vespa's tensor formalism be explored using the tensor playground?"]}}}
{"update": "id:blog-p:paragraph::blog/computing-with-tensors/index.html-tensor-representation", "fields": {"questions": {"assign": ["What are tensors?", "What is a scalar value?", "What is a tensor with one dimension?", "What is the problem with implicitly ordered dimensions?", "What is NHWC?", "What is the preferred format on GPUs?", "What is the named dimension approach in Vespa?", "What does the named dimension approach enable in Vespa?"]}}}
{"update": "id:blog-p:paragraph::blog/computing-with-tensors/index.html-sparse-and-dense-tensors", "fields": {"questions": {"assign": ["What is a dense tensor?", "What is a sparse tensor?", "What is a mixed tensor?", "What is a mapped dimension?", "What is an indexed dimension?", "What types of tensors does Vespa support?", "Can a tensor contain both dense and sparse dimensions?", "What is a dense subspace?"]}}}
{"update": "id:blog-p:paragraph::blog/computing-with-tensors/index.html-tensor-operations", "fields": {"questions": {"assign": ["What is the tensor framework in Vespa?", "How many core operations does Vespa provide for transforming tensors?", "What are the names of the 8 core operations Vespa provides?", "What is the difference between unary and binary operations in Vespa?", "How does Vespa's approach enable interoperability?", "What are the advantages of using tensors with named dimensions in Vespa?", "What is the problem with frameworks that have extensive libraries of operations?", "What do common frameworks use to represent a model and how does that affect interoperability?"]}}}
{"update": "id:blog-p:paragraph::blog/computing-with-tensors/index.html-the-tensor-formalism", "fields": {"questions": {"assign": ["What is Vespa's tensor formalism?", "What are tensor types?", "What are tensor operations?"]}}}
{"update": "id:blog-p:paragraph::blog/computing-with-tensors/index.html-tensor-types", "fields": {"questions": {"assign": ["What is a tensor type?", "What are dimensions?", "What is the order of a tensor?", "What is a mapped dimension?", "What is an indexed dimension?", "How are values in mapped dimensions addressed?", "Must indexed dimensions have values for all indices?", "What is sparse tensor?"]}}}
{"update": "id:blog-p:paragraph::blog/computing-with-tensors/index.html-tensors", "fields": {"questions": {"assign": ["What is a tensor?", "What is a sparse map?", "What is a scalar tensor?", "What is a tensor with indexed vectors?", "What is an indexed matrix tensor?", "What is a map of named values?", "What is a map of named vectors?"]}}}
{"update": "id:blog-p:paragraph::blog/computing-with-tensors/index.html-tensor-functions", "fields": {"questions": {"assign": ["What are the 8 core tensor functions?", "What is join and reduce?", "What is the tensor function reference?"]}}}
{"update": "id:blog-p:paragraph::blog/computing-with-tensors/index.html-vector-outer-product", "fields": {"questions": {"assign": ["What is a tensor?", "What is join?", "What happens on tensor multiplication?", "What is the resulting tensor type?", "What determines a match in join?", "What is the underlying expression?", "What is the join function?", "What is the result of A * B?"]}}}
{"update": "id:blog-p:paragraph::blog/computing-with-tensors/index.html-matrix-multiplication", "fields": {"questions": {"assign": ["What is tensor multiplication?", "What does `matmul` do?", "What is the Hadamard product?", "How do you perform matrix multiplication?", "Which functions are used for matrix multiplication?", "What is the result of matrix multiplication?", "What is the tensor type of matrix multiplication?", "What is the general pattern for matrix multiplication?"]}}}
{"update": "id:blog-p:paragraph::blog/computing-with-tensors/index.html-discussion", "fields": {"questions": {"assign": ["What is Vespa's tensor language?", "What is a lambda function?", "What is peeking?", "What is a join operation?", "What are argument lambdas?", "What is the unique aspect of the tensor language?", "How does the join operation work?", "What is the logical counterpart of the join operation?"]}}}
{"update": "id:blog-p:paragraph::blog/computing-with-tensors/index.html-summary", "fields": {"questions": {"assign": ["What is Vespa's tensor language?", "What are foundational tensor functions?", "What do index labels provide?", "How does Vespa's tensor language make numerical computation easier?", "Where can I find more information about Vespa's tensor guide?"]}}}
{"update": "id:blog-p:paragraph::blog/result-diversification-with-vespa/index.html-life-of-a-query-in-vespa", "fields": {"questions": {"assign": ["What is distributed query execution?", "What is result diversification?", "How are top-ranking hits determined?", "What controls the number of returned hits?", "What is the difference between hits and matches?"]}}}
{"update": "id:blog-p:paragraph::blog/result-diversification-with-vespa/index.html-introducing-vespa-grouping-language", "fields": {"questions": {"assign": ["What is the Vespa grouping language?", "What can be done with grouping statement?", "What does the Vespa grouping framework enable?", "What is the input for a grouping statement?", "How does the Vespa grouping language operate?", "What is list diversification?", "What kind of matches does Vespa grouping language support?", "What are the output of a grouping statement?"]}}}
{"update": "id:blog-p:paragraph::blog/result-diversification-with-vespa/index.html-using-vespa-grouping-language", "fields": {"questions": {"assign": ["What is Vespa grouping language?", "How does Vespa group results?"]}}}
{"update": "id:blog-p:paragraph::blog/result-diversification-with-vespa/index.html-dense-retrieval-with-nearest-neighbor-search", "fields": {"questions": {"assign": ["What is result grouping?", "How is result grouping supported?", "What is nearest neighbor search?", "What limits the matches exposed to grouping?", "What is the nature of approximate nearest neighbor search?"]}}}
{"update": "id:blog-p:paragraph::blog/result-diversification-with-vespa/index.html-controlling-group-ordering", "fields": {"questions": {"assign": ["What is default ordering?", "What is max relevance?", "What are match aggregates?", "What is the syntax for ordering by the sum of a document attribute?", "What does the asterisk denote for ordering?", "How can groups be ordered by complex expressions?", "What is the equivalent of a specific group ordering command?", "What is the purpose of the max function in group ordering?"]}}}
{"update": "id:blog-p:paragraph::blog/result-diversification-with-vespa/index.html-fine-tuning-result-diversification-with-phased-execution", "fields": {"questions": {"assign": ["What is the advantage of group bucketing?", "What is the downside of group bucketing?", "What is a phased or tiered architecture?", "What is Vespa grouping language?", "What is post processing logic?", "Why should post-processing diversity and business logic routines be added by writing stateless searchers?", "What is the internal communication protocol between stateless and stateful Vespa nodes?"]}}}
{"update": "id:blog-p:paragraph::blog/result-diversification-with-vespa/index.html-serving-performance", "fields": {"questions": {"assign": ["What are the four main components that drive serving performance?", "What is the impact of weakAnd/wand on serving performance?", "How can the number of matches exposed to grouping be limited?", "What is match-phase degradation ranking feature?", "What is the impact of unique field values on serving performance?", "How can network bandwidth usage be reduced when dealing with many nodes?", "What is the precision parameter?", "What are the benefits of limiting the number of matches in grouping?"]}}}
{"update": "id:blog-p:paragraph::blog/result-diversification-with-vespa/index.html-summary", "fields": {"questions": {"assign": ["What is Vespa result grouping?", "How to implement result grouping?", "What is phased execution?", "What are single-level grouping expressions?", "What is multi-level grouping?", "How can Vespa diversify results?", "Where can I learn more about result grouping?"]}}}
{"update": "id:blog-p:paragraph::blog/sliced-visiting/index.html-", "fields": {"questions": {"assign": ["What is the container layer?", "What is the /document/v1/ API?", "What is the purpose of the slicing feature?", "What is visiting throughput?", "What is the bottleneck for visiting throughput?"]}}}
{"update": "id:blog-p:paragraph::blog/sliced-visiting/index.html-visiting-vespa", "fields": {"questions": {"assign": ["What is visiting in Vespa?", "What is document selection?", "What is the purpose of visiting?", "What does the visit endpoint do?", "What is the state of the visitor?", "What are the limitations of the visit endpoint?", "What issues does the Vespa update address?"]}}}
{"update": "id:blog-p:paragraph::blog/sliced-visiting/index.html-improving-throughput", "fields": {"questions": {"assign": ["What is the impact of partitioning documents?", "What is the benefit of independent subsets?", "How does partitioning improve scalability in Vespa?", "What is the purpose of slices?", "What is the data-dump sample script?", "How do you optimize throughput when using slices?", "How does streaming lower time-to-first-byte?"]}}}
{"update": "id:blog-p:paragraph::blog/sliced-visiting/index.html-benchmarks", "fields": {"questions": {"assign": ["What is slicing?", "What is the throughput with slicing?", "What happens without slicing?", "What is a continuation token?", "How many container nodes were used?", "What is the increase in throughput with streaming responses?", "How much did CPU utilization increase with slicing?"]}}}
{"update": "id:blog-p:paragraph::blog/sliced-visiting/index.html-summary", "fields": {"questions": {"assign": ["What are the new features?", "What is visiting throughput?", "How much does the new feature increase throughput?", "What is the bottleneck for visiting throughput?"]}}}
{"update": "id:blog-p:paragraph::blog/text-image-search/index.html-", "fields": {"questions": {"assign": ["What is text-to-image search?", "How has text-to-image search evolved?", "What is the CLIP model?", "How is the CLIP model trained?", "What dataset is used in the sample app?", "Why is Vespa an excellent platform for text-to-image search?", "What capabilities does Vespa provide for text-to-image search?"]}}}
{"update": "id:blog-p:paragraph::blog/text-image-search/index.html-clip", "fields": {"questions": {"assign": ["What is CLIP?", "What does CLIP do?", "How does CLIP work?", "What is the input to CLIP?", "What is the output of CLIP?", "How does CLIP enable zero-shot learning?", "What is the cosine distance in CLIP?", "How to use CLIP for image search?"]}}}
{"update": "id:blog-p:paragraph::blog/text-image-search/index.html-text-to-image-search", "fields": {"questions": {"assign": ["What is CLIP model?", "How does CLIP classify images?", "What are some methods compatible with inverted index?", "Why is HNSW attractive?", "What is the core of the text-to-image search application?"]}}}
{"update": "id:blog-p:paragraph::blog/text-image-search/index.html-the-vespa-text-to-image-search-application", "fields": {"questions": {"assign": ["What is the document schema for image search?", "How is the image document ranked?", "What is the sample application for text-image search?", "What is the difference between the Python-based app and stand-alone Vespa app?"]}}}
{"update": "id:blog-p:paragraph::blog/text-image-search/index.html-pyvespa", "fields": {"questions": {"assign": ["What is Pyvespa?", "What does pyvespa provide?", "What is the pyvespa text-image sample app about?", "What is CLIP?", "What is the 'ViT-B/32' model?", "How does the streamlit demo app work?"]}}}
{"update": "id:blog-p:paragraph::blog/text-image-search/index.html-native-vespa-application", "fields": {"questions": {"assign": ["How is text tokenized?"]}}}
{"update": "id:blog-p:paragraph::blog/text-image-search/index.html-summary", "fields": {"questions": {"assign": ["What is a semantic space?", "What is multi-modal search?", "What is the CLIP model?", "What is text-to-image search?", "What is the cosine distance?"]}}}
{"update": "id:blog-p:paragraph::blog/billion-scale-knn/index.html-", "fields": {"questions": {"assign": ["What are AI-powered representations?", "What are the challenges of searching star-sized datasets?", "What is the Milky Way galaxy?", "What is the total cost of ownership?"]}}}
{"update": "id:blog-p:paragraph::blog/billion-scale-knn/index.html-introduction", "fields": {"questions": {"assign": ["What is deep neural hashing?", "What is the goal of representation learning?", "What is the advantage of binary-coded document representation?", "What is the hamming distance?", "How is hamming distance search implemented?", "What is TransHash?", "What are some successful uses of binary-coded representations?"]}}}
{"update": "id:blog-p:paragraph::blog/billion-scale-knn/index.html-representing-hash-like-binary-codes-in-vespa", "fields": {"questions": {"assign": ["What is a binary-coded representation?", "What is the format for binary-coded representation?", "What is paged dense first-order tensor?", "What are the benefits of storing the original vector representation?", "What is an example use case for binary-coded representation?"]}}}
{"update": "id:blog-p:paragraph::blog/billion-scale-knn/index.html-searching-binary-codes-with-vespa\u2019s-nearest-neighbor-search-query-operator", "fields": {"questions": {"assign": ["What is the hamming distance?", "What is the num-threads-per-search setting?", "What is the inverse hamming distance?"]}}}
{"update": "id:blog-p:paragraph::blog/billion-scale-knn/index.html-summary", "fields": {"questions": {"assign": ["What is hamming distance?", "What is coarse-level to fine-level search and ranking?", "What is *int8* tensor cell precision?", "What will the next blog post cover?", "What are the trade-offs mentioned in the introduction?"]}}}
{"update": "id:blog-p:paragraph::blog/basic-http-tests/index.html-", "fields": {"questions": {"assign": ["What are HTTP interfaces?", "What is Vespa CLI test?", "What does CD framework support?"]}}}
{"update": "id:blog-p:paragraph::blog/basic-http-tests/index.html-developing-and-running-tests", "fields": {"questions": {"assign": ["What is Vespa CLI?", "What are system tests?"]}}}
{"update": "id:blog-p:paragraph::blog/log4j-vulnerability/index.html-", "fields": {"questions": {"assign": ["What is the log4j vulnerability?", "Is Vespa affected by the log4j vulnerability?", "How to check if an application is affected by the log4j vulnerability?", "When will Vespa release a version with updated log4j?", "When was log4j removed from Vespa?", "What is the minimum log4j version allowed in Vespa Cloud?", "When was the minimum version enforced in Vespa Cloud?"]}}}
{"update": "id:blog-p:paragraph::blog/ml-model-serving-at-scale/index.html-", "fields": {"questions": {"assign": ["What is BERT-base model?", "What is the optimal balance between latency and throughput?", "What is the driving force for balancing latency and throughput?", "What happens to latency as the number of concurrent connections increases?", "What is the maximum throughput reached?", "What is the expected 95th percentile latency of the model evaluation initially?"]}}}
{"update": "id:blog-p:paragraph::blog/ml-model-serving-at-scale/index.html-parallel-execution-of-models", "fields": {"questions": {"assign": ["What is the threading model used?", "What are the types of threads?", "What are inference threads responsible for?", "What are intra-operation threads useful for?", "What are inter-operation threads used for?"]}}}
{"update": "id:blog-p:paragraph::blog/ml-model-serving-at-scale/index.html-scaling-up", "fields": {"questions": {"assign": ["What is the XtremeDistil-l6-h256 model?", "What is the computational complexity of XtremeDistilTransformers?", "How does the throughput of XtremeDistilTransformers compare to BERT-base?", "What causes latency and throughput issues in model serving?", "How can over-subscription be avoided in model serving?", "What is the performance of XtremeDistil-l6-h256 on the CPU?", "What benefits does single-threaded execution have for latency and throughput?", "What are the advantages of using XtremeDistilTransformers over BERT-base?"]}}}
{"update": "id:blog-p:paragraph::blog/ml-model-serving-at-scale/index.html-experiment-details", "fields": {"questions": {"assign": ["What is fbench used for?"]}}}
{"update": "id:blog-p:paragraph::blog/ml-model-serving-at-scale/index.html-summary", "fields": {"questions": {"assign": ["What are the default thread settings?", "What is model distillation?", "What is model quantization?", "What is the issue with shared intra-operation thread pool?", "What is the solution for managing increased latency?", "What are the optimization techniques?", "What is the concern with GPU evaluation cost?", "What is the concern with platforms promising very low latencies?"]}}}
{"update": "id:blog-p:paragraph::blog/doubling-the-throughput-of-data-redistribution/index.html-", "fields": {"questions": {"assign": ["How does Vespa distribute data?", "How has Vespa improved data redistribution?"]}}}
{"update": "id:blog-p:paragraph::blog/doubling-the-throughput-of-data-redistribution/index.html-introduction", "fields": {"questions": {"assign": ["What is a bucket in Vespa?", "What is data redistribution in Vespa?", "What is redundancy level in Vespa?", "What is the purpose of autoscaling in Vespa?", "What is the content cluster in Vespa?"]}}}
{"update": "id:blog-p:paragraph::blog/doubling-the-throughput-of-data-redistribution/index.html-data-redistribution-and-improvements", "fields": {"questions": {"assign": ["What is a merge bucket operation?", "What is a delete bucket operation?", "What is distributor?", "What is proton?", "How does Vespa handle data redistribution?"]}}}
{"update": "id:blog-p:paragraph::blog/doubling-the-throughput-of-data-redistribution/index.html-performance", "fields": {"questions": {"assign": ["What is grouped content distribution?", "What is the size of each content node?", "What is the baseline throughput?", "What was the average throughput after improvements?", "How long did data redistribution take?", "What other applications saw improvements?"]}}}
{"update": "id:blog-p:paragraph::blog/doubling-the-throughput-of-data-redistribution/index.html-summary", "fields": {"questions": {"assign": ["What is the throughput improvement?", "What is data redistribution?", "What is Vespa 7.528.3?", "What is the impact to query traffic?", "What is the impact to write traffic?", "Why is the improvement important?", "What improvements were made?"]}}}
{"update": "id:blog-p:paragraph::blog/billion-scale-knn-part-two/index.html-", "fields": {"questions": {"assign": ["What is the purpose of this post?", "What is binary-coded vector representation?", "What is big-ann-benchmark?", "What trade-offs are related to approximate nearest neighbor search?", "What other blog post do you recommend reading?"]}}}
{"update": "id:blog-p:paragraph::blog/billion-scale-knn-part-two/index.html-choosing-a-vector-dataset", "fields": {"questions": {"assign": ["What is the Microsoft SPACEV-1B dataset?", "What is the dimensionality of the SPACEV-1B dataset?", "What are the available tensor vector precision types?", "How many queries are in the SPACEV-1B dataset?", "What is the benefit of using binarized vector datasets?", "What is the threshold function used for binarizing vectors?", "What distance metric is used for nearest neighbor search with the binarized dataset?", "What is the size of int8 precision per dimension?"]}}}
{"update": "id:blog-p:paragraph::blog/billion-scale-knn-part-two/index.html-vector-is-np.array([-12,3,4....100],dtype=np.int8)", "fields": {"questions": {"assign": ["What is binarization in NumPy?", "What is the hamming distance?", "What are trade-offs in vector search?"]}}}
{"update": "id:blog-p:paragraph::blog/billion-scale-knn-part-two/index.html-experimental-setup", "fields": {"questions": {"assign": ["What are the deployment resources?", "What is the node specification?", "Why isolate feed and search?", "What is the purpose of binary_code?", "What is the search and feed API node count?"]}}}
{"update": "id:blog-p:paragraph::blog/billion-scale-knn-part-two/index.html-evaluation-metrics", "fields": {"questions": {"assign": ["What is the Recall@k metric?", "What is the impact of degrading vector search Recall@k?", "What is the vector overlap metric used for?", "What is the impact of using approximate search on recall@k?", "In which application is recall@k used to measure relevancy?", "What kind of applications might not be severely impacted by losing redundant pictures?", "What are the consequences of accepting a loss in Recall@1?"]}}}
{"update": "id:blog-p:paragraph::blog/billion-scale-knn-part-two/index.html-vector-indexing-performance", "fields": {"questions": {"assign": ["What is HNSW indexing?", "What are the consequences of enabling HNSW indexing?", "What is the impact of HNSW on indexing throughput?", "What are the default values of max-links-per-node and neighbors-to-explore-at-insert?", "What is the performance impact of HNSW with the different parameter combinations?", "Why does Vespa use 64G of memory for the baseline case without HNSW?", "How does Vespa support fast elastic content distribution and partial updates?"]}}}
{"update": "id:blog-p:paragraph::blog/billion-scale-knn-part-two/index.html-brute-force-exact-nearest-neighbor-search-performance", "fields": {"questions": {"assign": ["What is multithreaded search?", "How does increasing search threads affect latency?", "What is the tradeoff between latency and throughput?", "How does Vespa utilize multi-CPU core architectures?", "What is the performance impact of increasing search threads?", "How can Vespa reduce query latency?"]}}}
{"update": "id:blog-p:paragraph::blog/billion-scale-knn-part-two/index.html-approximate-nearest-neighbor-search-performance", "fields": {"questions": {"assign": ["What is recall@10?", "How is search quality improved?", "What is the impact of HNSW parameters on search quality?", "What is hnsw.exploreAdditionalHits?", "What is the speedup achieved with approximate nearest neighbor search?", "What is the impact of different construction HNSW parameters on search quality?"]}}}
{"update": "id:blog-p:paragraph::blog/billion-scale-knn-part-two/index.html-summary", "fields": {"questions": {"assign": ["What are trade-offs for vector search?", "How to reduce latency in vector search?", "What is an alternative to exact search?", "What is the upcoming blog post about?", "What is the difference between brute force search and multithreaded search?"]}}}
{"update": "id:blog-p:paragraph::blog/preview-of-vespa-on-arm64/index.html-", "fields": {"questions": {"assign": ["What architecture is Vespa released for?", "What is the emerging interest?", "What is the preview image?", "What is ARM64?", "What is x86_64 architecture?", "What powers AWS Graviton EC2 instances?", "What powers Apple M1 MacBooks?", "What does the preview image support?"]}}}
{"update": "id:blog-p:paragraph::blog/preview-of-vespa-on-arm64/index.html-availability", "fields": {"questions": {"assign": ["How is Vespa released to public?", "How often is Vespa released?", "Where are Vespa artifacts published?", "What is high confidence for Vespa release?", "What tests must Vespa pass for release?", "When will the ARM64 preview be released?"]}}}
{"update": "id:blog-p:paragraph::blog/preview-of-vespa-on-arm64/index.html-rpms", "fields": {"questions": {"assign": ["Where can I find Vespa RPMs?", "What is CentOS Stream 8?", "How do I install Vespa on CentOS Stream 8 ARM?", "What is the command to add Vespa repo to CentOS Stream 8?"]}}}
{"update": "id:blog-p:paragraph::blog/preview-of-vespa-on-arm64/index.html-container-image", "fields": {"questions": {"assign": ["What is the latest ARM64 image?", "Where is the ARM64 image published?"]}}}
{"update": "id:blog-p:paragraph::blog/preview-of-vespa-on-arm64/index.html-vespa-quick-start-on-*arm64*", "fields": {"questions": {"assign": ["How to test ARM64 preview?", "What is ARM64?", "What is Podman?", "What is Docker?", "How to swap Vespa image?", "What is the Vespa Quick Start Guide?"]}}}
{"update": "id:blog-p:paragraph::blog/preview-of-vespa-on-arm64/index.html-support", "fields": {"questions": {"assign": ["What is Vespa on ARM64?", "Is Vespa on ARM64 in production?", "Where can I get support for Vespa on ARM64?", "Is Vespa on ARM64 available for testing?", "What is the timeline for a production release of Vespa on ARM64?"]}}}
{"update": "id:blog-p:paragraph::blog/Upcoming-changes-in-OS-support-for-Vespa/index.html-", "fields": {"questions": {"assign": ["What is CentOS?", "What is Copr?", "What is Docker Hub?", "How often is Vespa released?", "What is the upcoming Vespa release?", "What will be the selected OS support for Vespa 8?"]}}}
{"update": "id:blog-p:paragraph::blog/Upcoming-changes-in-OS-support-for-Vespa/index.html-introduction", "fields": {"questions": {"assign": ["What is Vespa's OS?", "What is RHEL?", "Is CentOS 7 supported?", "Why move from CentOS?", "What happened to CentOS 8?", "What are CentOS Linux users considering?", "What are the new RHEL rebuilds?", "When was CentOS 8 deprecated?"]}}}
{"update": "id:blog-p:paragraph::blog/Upcoming-changes-in-OS-support-for-Vespa/index.html-options", "fields": {"questions": {"assign": ["What are the downstream distributions of RHEL?", "What is Fedora Linux?", "What is CentOS Stream?", "What are Alma Linux and Rocky Linux?", "What is the stability of CentOS Stream?", "What is the advantage of using Fedora Copr?", "What is the free version of RHEL for developers?", "Is the free version of RHEL hassle-free?"]}}}
{"update": "id:blog-p:paragraph::blog/Upcoming-changes-in-OS-support-for-Vespa/index.html-selection", "fields": {"questions": {"assign": ["What OS is supported for Vespa?", "Why was CentOS Stream 8 chosen?", "What are the advantages of CentOS Stream 8 over RHEL?", "Will open source Vespa artifacts be available on CentOS Stream 8?", "What is the base for the Vespa container image on Docker Hub?", "What do consumers of Vespa artifacts need to do if they use RPMs?", "What do consumers of Vespa artifacts need to do if they use container images?", "What is the current CentOS Stream kernel version used by Vespa?"]}}}
{"update": "id:blog-p:paragraph::blog/Upcoming-changes-in-OS-support-for-Vespa/index.html-summary", "fields": {"questions": {"assign": ["What is the supported OS?", "What is CentOS Stream 8?"]}}}
{"update": "id:blog-p:paragraph::blog/constrained-approximate-nearest-neighbor-search/index.html-", "fields": {"questions": {"assign": ["What is approximate nearest neighbor search?", "What are the primary strategies for combining vector search with filters?", "What are the Vespa parameters for controlling vector search filtering behavior?"]}}}
{"update": "id:blog-p:paragraph::blog/constrained-approximate-nearest-neighbor-search/index.html-introduction", "fields": {"questions": {"assign": ["What is Vespa's data structure?", "What does the practical nearest neighbor search guide use?"]}}}
{"update": "id:blog-p:paragraph::blog/constrained-approximate-nearest-neighbor-search/index.html-search-query-planning-and-estimation", "fields": {"questions": {"assign": ["How does Vespa optimize queries?", "What is hit count estimation?", "What factors affect query hit estimation?", "How are query hit estimates used?", "What is the estimated-hit-ratio?", "What is the optimal evaluation for '90s and pop' query?", "How can inverted index granularity help optimize queries?", "What is rank:filter and how does it affect posting list representation?"]}}}
{"update": "id:blog-p:paragraph::blog/constrained-approximate-nearest-neighbor-search/index.html-combining-exact-nearest-neighbor-search-with-filters", "fields": {"questions": {"assign": ["What is nearestNeighbor operator?", "What is distance metric?", "What is the filter in Vespa?", "What is the tradeoff between accuracy and performance in HNSW?"]}}}
{"update": "id:blog-p:paragraph::blog/constrained-approximate-nearest-neighbor-search/index.html-combining-approximate-nearest-neighbor-search-with-filters", "fields": {"questions": {"assign": ["What is approximate nearest neighbor?", "What are post-filtering and pre-filtering strategies?", "How does approximate search reduce serving cost?", "Why is exact nearest neighbor search expensive?"]}}}
{"update": "id:blog-p:paragraph::blog/constrained-approximate-nearest-neighbor-search/index.html-post-filtering-strategy", "fields": {"questions": {"assign": ["What is the post-filtering strategy?", "What is the disadvantage of this approach?", "What is the advantage of this strategy?"]}}}
{"update": "id:blog-p:paragraph::blog/constrained-approximate-nearest-neighbor-search/index.html-pre-filtering-strategy", "fields": {"questions": {"assign": ["What is the pre-filtering strategy?", "What is the difference between pre-filtering and post-filtering?", "What is the impact of a restrictive filter on retrieved neighbors?", "How can distant neighbors be combated?", "What is evaluated first in the filtering strategy?", "What is the purpose of the approximate nearestNeighbor query operator?"]}}}
{"update": "id:blog-p:paragraph::blog/constrained-approximate-nearest-neighbor-search/index.html-filtering-strategies-and-serving-performance", "fields": {"questions": {"assign": ["What is pre-filtering?", "What is post-filtering?", "What is the sweet spot?", "What affects the threshold value?", "What is the hit count rate?", "What is the performance of pre-filtering?"]}}}
{"update": "id:blog-p:paragraph::blog/constrained-approximate-nearest-neighbor-search/index.html-controlling-the-filtering-behavior-with-approximate-nearest-neighbor-search", "fields": {"questions": {"assign": ["What are Vespa query-time filtering parameters?", "What is post-filter-threshold?", "What is approximate-threshold?", "When were these parameters introduced in Vespa?", "How can the rank profile parameters be configured?", "What are the query API parameters for these parameters?", "How does Vespa select search strategy for an approximate nearest neighbor search?", "What is the default post-filter-threshold in Vespa?"]}}}
{"update": "id:blog-p:paragraph::blog/constrained-approximate-nearest-neighbor-search/index.html-parameter-usage-guide", "fields": {"questions": {"assign": ["What is pre-filtering?", "How does Vespa choose strategy?", "What are filter hit count ratios?"]}}}
{"update": "id:blog-p:paragraph::blog/constrained-approximate-nearest-neighbor-search/index.html-pre-filtering-with-exact-search-fallback", "fields": {"questions": {"assign": ["What is pre-filtering?", "What is post-filtering?", "What is the default evaluation strategy?", "How do developers optimize threshold?", "What is the purpose of approximate-threshold?", "What is the sweet spot threshold?", "What is the difference between pre-filtering and post-filtering?"]}}}
{"update": "id:blog-p:paragraph::blog/constrained-approximate-nearest-neighbor-search/index.html-post-filtering-with-exact-search-fallback", "fields": {"questions": {"assign": ["What is post-filtering?", "What is pre-filtering?", "What is the approximate-threshold?", "What is the post-filtering implementation?", "What is the purpose of auto-adjusting the targetHits?", "What is the post-filter-threshold in the sample rank-profile?", "What is the effect of the approximate-threshold?", "What is the fallback strategy in the rank-profile?"]}}}
{"update": "id:blog-p:paragraph::blog/constrained-approximate-nearest-neighbor-search/index.html-let-vespa-choose-between-pre--and-post-filtering", "fields": {"questions": {"assign": ["What is post-filter-threshold?", "What is approximate-threshold?", "What is hybrid-filtering?", "How does Vespa choose strategy?", "How does estimated-hit-ratio work?", "What is pre-filtering?", "What is moderate and relaxed filters?", "How does exact fallback work?"]}}}
{"update": "id:blog-p:paragraph::blog/constrained-approximate-nearest-neighbor-search/index.html-summary", "fields": {"questions": {"assign": ["What is query-time nearest neighbor search?", "What are the parameters for controlling vector search?", "What are the sample applications for Vespa's approximate nearest neighbor search?", "What is the application for State-of-the-art text ranking?", "What is the application for State-of-the-art image search?"]}}}
{"update": "id:blog-p:paragraph::blog/vespa-hybrid-billion-scale-vector-search/index.html-", "fields": {"questions": {"assign": ["What is billion-scale vector search?", "What is Hierarchical Navigable Small World (HNSW)?", "What is the 'hybrid' method for ANN search?", "What is HNSW-IF?", "How does HNSW-IF combine with disk-backed inverted file?", "What is the purpose of compressing real-valued vectors to binary representations?"]}}}
{"update": "id:blog-p:paragraph::blog/vespa-hybrid-billion-scale-vector-search/index.html-introduction", "fields": {"questions": {"assign": ["What is HNSW algorithm?", "How much memory does vector dataset require?", "What are cloud instance types?", "What is hybrid ANN search?", "What is SPANN algorithm?"]}}}
{"update": "id:blog-p:paragraph::blog/vespa-hybrid-billion-scale-vector-search/index.html-introducing-spann", "fields": {"questions": {"assign": ["What is SPANN?", "How does SPANN work?", "What is centroid vector?", "What is posting list?", "What is HBC?", "How is disk-based data structured?", "How are distance calculations performed?", "How does SPANN balance clusters?"]}}}
{"update": "id:blog-p:paragraph::blog/vespa-hybrid-billion-scale-vector-search/index.html-hybrid-hnsw-if-with-vespa", "fields": {"questions": {"assign": ["What is SPANN?", "What is HNSW-IF?", "What Vespa features enable HNSW-IF?", "What is the difference between SPANN and HNSW-IF?"]}}}
{"update": "id:blog-p:paragraph::blog/vespa-hybrid-billion-scale-vector-search/index.html-vector-indexing-and-serving-architecture", "fields": {"questions": {"assign": ["What is the approach for representing centroids?", "How are centroid vectors indexed?", "What is the maximum centroid dictionary vocabulary size for a billion scale dataset?", "How is the vector data stored for a non-centroid vector?", "What is the purpose of the inverted index?", "What is the search time for 200M centroid vectors indexed with HNSW?", "What is the efficiency of searching for a centroid id?", "What is the process for indexing non-centroid vectors in Vespa?"]}}}
{"update": "id:blog-p:paragraph::blog/vespa-hybrid-billion-scale-vector-search/index.html-querying-vectors", "fields": {"questions": {"assign": ["What is HNSW search?", "How is the inverted index queried?", "What is cluster centroid dynamic pruning?", "What is the retrieve using dynamic pruning heuristic?", "What is the dotProduct operator?", "What is a query time hyperparameter?"]}}}
{"update": "id:blog-p:paragraph::blog/vespa-hybrid-billion-scale-vector-search/index.html-real-world-considerations", "fields": {"questions": {"assign": ["What is batch indexing?", "What is incremental real-time indexing?", "What is a centroid vector?", "How are new vectors added?", "How is batch indexing with a new embedder model handled?", "What impacts recall when deleting centroid vectors?", "What are the CRUD operations supported by Vespa APIs?"]}}}
{"update": "id:blog-p:paragraph::blog/vespa-hybrid-billion-scale-vector-search/index.html-vespa-experimental-setup", "fields": {"questions": {"assign": ["What is the Vespa 'HNSW-IF'?", "How does Vespa optimize resource cost?", "How does Vespa represent centroid vectors?", "What is the downside of not storing vector data in the postings file?", "What storage is used for non-centroid vectors?", "What are the benefits of using two content clusters with the same document schema?", "What is the Vespa Cloud performance environment?"]}}}
{"update": "id:blog-p:paragraph::blog/vespa-hybrid-billion-scale-vector-search/index.html-vector-dataset", "fields": {"questions": {"assign": ["What is the SPACEV-1B vector dataset?", "What is the precision of the vectors in the dataset?", "What is the distance-metric used for the dataset?", "What is the purpose of using the ground truth neighbors in the evaluation of the hybrid approach?"]}}}
{"update": "id:blog-p:paragraph::blog/vespa-hybrid-billion-scale-vector-search/index.html-vespa-schema", "fields": {"questions": {"assign": ["What is a Vespa schema?", "What does the integer weight represent?", "How is the vector field used in the document schema?"]}}}
{"update": "id:blog-p:paragraph::blog/vespa-hybrid-billion-scale-vector-search/index.html-vespa-deployment-specification", "fields": {"questions": {"assign": ["What is configured using services.xml?", "What is the Vespa Cloud hourly cost?", "What is the default resources for the feed cluster?", "What is the use of the 'graph' stateful content cluster?", "What does the 'if' stateful content cluster handle?", "How many container clusters are in the Vespa Cloud version?", "What is the resource scaling summary?"]}}}
{"update": "id:blog-p:paragraph::blog/vespa-hybrid-billion-scale-vector-search/index.html-vespa-stateless-function-components", "fields": {"questions": {"assign": ["What are custom stateless Vespa functions?", "How is communication secured in Vespa cluster?", "What is the gist of the custom searcher implementing the search logic?", "What does the custom document processor implement?"]}}}
{"update": "id:blog-p:paragraph::blog/vespa-hybrid-billion-scale-vector-search/index.html-vespa-hnsw-if-experiments", "fields": {"questions": {"assign": ["What is HNSW?", "What are indexing side hyperparameters?", "How many links per node in HNSW?", "What is neighbors-to-explore-at-insert?", "What is in-memory centroid indexing?", "How are non-centroid vectors indexed?", "What is the inverted index used for?"]}}}
{"update": "id:blog-p:paragraph::blog/vespa-hybrid-billion-scale-vector-search/index.html-batch-indexing-performance", "fields": {"questions": {"assign": ["What is Vespa Cloud perf?", "How is vector data secured?", "What resource utilization insight does Vespa Cloud metrics provide?"]}}}
{"update": "id:blog-p:paragraph::blog/vespa-hybrid-billion-scale-vector-search/index.html-hnsw-if-accuracy", "fields": {"questions": {"assign": ["What is approximate vector search?", "What is recall@10?", "What is HNSW-IF solution?", "How is recall@10 quantified?", "What is the maximum re-ranking depth?", "What is the distance prune threshold?", "What is the end-to-end latency for k=128?", "How many queries return the same top-10 result as nearest neighbor search over 1B vectors?"]}}}
{"update": "id:blog-p:paragraph::blog/vespa-hybrid-billion-scale-vector-search/index.html-summary", "fields": {"questions": {"assign": ["What is the hybrid method for vector search?", "What are the sample applications using HNSW?", "What is state-of-the-art text ranking?", "What is state-of-the-art image search?"]}}}
{"update": "id:blog-p:paragraph::blog/vespa-at-berlin-buzzwords/index.html-", "fields": {"questions": {"assign": ["What is Berlin Buzzwords?", "What is the focus of Berlin Buzzwords?"]}}}
{"update": "id:blog-p:paragraph::blog/vespa-at-berlin-buzzwords/index.html-understanding-vespa-with-a-lucene-mindset", "fields": {"questions": {"assign": ["Who gave a talk on Vespa?", "What is Vespa's strength?", "How does Vespa compare to Lucene?", "What does the talk cover?", "What is Vespa's architecture?", "How to get started with Vespa?", "Who is the talk intended for?"]}}}
{"update": "id:blog-p:paragraph::blog/vespa-at-berlin-buzzwords/index.html-summary", "fields": {"questions": {"assign": ["What is State-of-the-art text ranking?", "What is State-of-the-art image search?", "What are AI-powered representations?", "What is AI-powered multi-modal vector representations?", "What is self-serve Vespa?"]}}}
{"update": "id:blog-p:paragraph::blog/vespa-8-is-here/index.html-", "fields": {"questions": {"assign": ["Is Vespa 8 a major version?", "What are the benefits of Vespa 8?", "What are the changes between Vespa 7 and 8?", "When will Vespa 7 minor versions stop being released?"]}}}
{"update": "id:blog-p:paragraph::blog/vespa-managed-vector-search/index.html-", "fields": {"questions": {"assign": ["What is multimodal data?", "What is AI-powered vector representation?", "What can Vespa do for your organization?"]}}}
{"update": "id:blog-p:paragraph::blog/vespa-managed-vector-search/index.html-introduction", "fields": {"questions": {"assign": ["What is data2vec?", "How does self-supervised learning work?", "What are multimodal representations?", "What is the advantage of leveraging new data paradigms?", "What is an example of real-time online inference?", "What are the challenges of performing distributed AI inference?"]}}}
{"update": "id:blog-p:paragraph::blog/vespa-managed-vector-search/index.html-vespa---serving-engine", "fields": {"questions": {"assign": ["What machine learning frameworks does Vespa integrate with?", "How does Vespa handle model versioning?", "What is the efficient vector search algorithm used by Vespa?", "What are the Vespa primitives for building an online AI serving engine?", "How does Vespa enable efficient vector search with structured query filters?"]}}}
{"update": "id:blog-p:paragraph::blog/vespa-managed-vector-search/index.html-get-started-today-with-vector-search-using-vespa-cloud.", "fields": {"questions": {"assign": ["What is Vespa Cloud?", "What is the pricing for 5M vectors?", "What other sample applications are available?", "What are Vespa's AI-powered applications?", "Where can I find information on getting started with Vespa?"]}}}
{"update": "id:blog-p:paragraph::blog/summer-intern/index.html-query-builder", "fields": {"questions": {"assign": ["What is the Query Builder?", "What is React?", "What was the old website like?", "What is the purpose of the Query Builder?", "What is the difference between the old and new versions of the Query Builder?", "What functionalities had to be recreated?", "What was added to the UI?", "Is the Query Builder easier to implement in other React applications now?"]}}}
{"update": "id:blog-p:paragraph::blog/summer-intern/index.html-trace-visualizer", "fields": {"questions": {"assign": ["What is Vespa's Trace Visualizer?", "What tool does Vespa's Trace Visualizer use?", "What is the purpose of Vespa's Trace Visualizer?", "What is the format of a Vespa trace?", "What is the format of a Jaeger trace?", "How does Vespa's Trace Visualizer transform Vespa traces?", "What was the hardest part of developing Vespa's Trace Visualizer?", "How can Vespa's Trace Visualizer identify bottlenecks in queries?"]}}}
{"update": "id:blog-p:paragraph::blog/summer-intern/index.html-my-experience-at-vespa", "fields": {"questions": {"assign": ["What did the internship involve?"]}}}
{"update": "id:blog-p:paragraph::blog/passage-uncertainty-evaluation/index.html-setting-editor", "fields": {"questions": {"assign": ["What is .jp-PluginList?", "What is .jp-mod-selected?", "What does .jp-icon-selectable-inverse[fill] do?", "What is the CSS for icons in selected filebrowser listing items?", "What is the CSS for icons in selected tabs in the sidebar tab manager?"]}}}
{"update": "id:blog-p:paragraph::blog/passage-uncertainty-evaluation/index.html-tab-manager", "fields": {"questions": {"assign": ["What CSS class is active?", "What is hover in CSS?"]}}}
{"update": "id:blog-p:paragraph::blog/passage-uncertainty-evaluation/index.html-tab-manager", "fields": {"questions": {"assign": ["What is the purpose of .lm-TabBar-tab.jp-mod-active?", "What does .jp-icon-hover do?", "What is the purpose of :hover?", "What is the .jp-icon-selectable-inverse[fill] class for?", "What is the fill color for .jp-icon-selectable-inverse[fill]?", "What is the TODO in the code for?", "What is the purpose of the CSS for the close icon in the sidebar tab manager?"]}}}
{"update": "id:blog-p:paragraph::blog/passage-uncertainty-evaluation/index.html-tab-manager", "fields": {"questions": {"assign": ["What does .lm-TabBar-tabCloseIcon do?", "What is .jp-icon3[fill]?", "What is the function of :not(:hover)?", "What does fill:none do?"]}}}
{"update": "id:blog-p:paragraph::blog/passage-uncertainty-evaluation/index.html-tab-manager", "fields": {"questions": {"assign": ["What is .lm-TabBar-tab?", "What is .lm-TabBar-tabCloseIcon?", "What does .jp-icon-busy[fill] represent?"]}}}
{"update": "id:blog-p:paragraph::blog/passage-uncertainty-evaluation/index.html-tab-manager", "fields": {"questions": {"assign": ["What is the purpose of .lm-TabBar-tab?", "What is the purpose of .jp-icon-busy?", "What is the purpose of .jp-icon3?", "What is the purpose of .lm-Mod-closable?", "What is the purpose of :not(:hover)?", "What is the purpose of .lm-DockPanel-tabBar?", "What does the CSS for icons in status bar do?", "What is the purpose of jp-mod-dirty?"]}}}
{"update": "id:blog-p:paragraph::blog/passage-uncertainty-evaluation/index.html-jp-main-dock-panel[data-mode='single-document']", "fields": {"questions": {"assign": ["What is .jp-MainAreaWidget?", "What is the class for the toolbar?", "What is the CSS for padding?", "What is the minimum height?", "What is jp-Toolbar-micro?", "What does jp-Toolbar-micro do?"]}}}
{"update": "id:blog-p:paragraph::blog/passage-uncertainty-evaluation/index.html-compare-different-metrics-and-their-uncertainty-in-the-passage-ranking-dataset.", "fields": {"questions": {"assign": ["What is the passage ranking dataset?", "Which metrics are used for evaluation?", "What are confidence intervals?", "What is the purpose of measuring uncertainty?"]}}}
{"update": "id:blog-p:paragraph::blog/will-vector-dbs-dislodge-search-engines/index.html-", "fields": {"questions": {"assign": ["What is a traditional search engine?", "What features are taken for granted in search engines?", "What are accelerated dynamic pruning algorithms?", "What is semantic vector search?", "What are some use cases that vector search cannot solve?", "What real-time signals affect search ranking?"]}}}
{"update": "id:blog-p:paragraph::blog/will-vector-dbs-dislodge-search-engines/index.html-the-future-of-search-is-hybrid", "fields": {"questions": {"assign": ["What are hybrid retrieval techniques?", "Why is the hybrid model better?"]}}}
{"update": "id:blog-p:paragraph::blog/will-vector-dbs-dislodge-search-engines/index.html-however,-not-all-search-engines-are-alike.", "fields": {"questions": {"assign": ["What are the challenges for adding vector search capabilities?", "What is the problem with using HNSW graphs for search with Lucene?", "Why does the query cost increase with the number of active segments?", "What is the difference between HNSW graphs and inverted index structures?", "Can HNSW graphs be merged efficiently?", "Why is merging HNSW graphs expensive?", "What is Apache Lucene's architecture for achieving real-time indexing?", "How does the number of active segments depend on indexing rate and refresh interval settings?"]}}}
{"update": "id:blog-p:paragraph::blog/text-embedding-made-simple/index.html-", "fields": {"questions": {"assign": ["What are vector embeddings?", "What is an unreal engine?"]}}}
{"update": "id:blog-p:paragraph::blog/text-embedding-made-simple/index.html-text-embedding-made-simple", "fields": {"questions": {"assign": ["What are embeddings used for?", "How can Vespa help with embeddings?", "What is required for using embeddings in Vespa?", "How to convert query text to an embedding?", "How to embed a document field in Vespa using BERT?", "What is the recommended BERT style model for embeddings in Vespa?", "What is the syntax for embedding a query text in Vespa using BERT?", "How can one use embeddings for neighbor search or machine-learned models in Vespa?"]}}}
{"update": "id:blog-p:paragraph::blog/text-embedding-made-simple/index.html-semantic-search-sample-application", "fields": {"questions": {"assign": ["What is simple-semantic-search?", "Where can I find simple-semantic-search?"]}}}
{"update": "id:blog-p:paragraph::blog/text-embedding-made-simple/index.html-further-reading", "fields": {"questions": {"assign": ["Where can I find blog posts on pretrained transformer models?", "What is efficiency in search?", "Which blog post series talks about pretrained transformer models?"]}}}
{"update": "id:blog-p:paragraph::blog/pre-trained-models-on-vespa-cloud/index.html-", "fields": {"questions": {"assign": ["What are pre-trained models used for in Vespa?", "What renders are supported in Vespa Cloud?"]}}}
{"update": "id:blog-p:paragraph::blog/pre-trained-models-on-vespa-cloud/index.html-pre-trained-models-on-vespa-cloud", "fields": {"questions": {"assign": ["What is Vespa Cloud's model hub?", "How can Vespa Cloud simplify text embedding?", "Can Vespa Cloud provide pre-trained models?", "How do you refer to a model in your application?", "Can you use Vespa's pre-trained models in your own components?", "Will Vespa Cloud add more models over time?", "What is the benefit of using Vespa Cloud's pre-trained models?"]}}}
{"update": "id:blog-p:paragraph::blog/building-billion-scale-vector-search/index.html-", "fields": {"questions": {"assign": ["What is vector search?", "What is high dimensional space?", "How fast can vector search run?", "What is approximate vector search?", "What is the blink of an eye latency?", "How many vectors can approximate vector search search across?", "How does the speed of vector search impact design?", "What is a billion-scale vector search solution?"]}}}
{"update": "id:blog-p:paragraph::blog/building-billion-scale-vector-search/index.html-introduction", "fields": {"questions": {"assign": ["What is self-supervised deep learning?"]}}}
{"update": "id:blog-p:paragraph::blog/building-billion-scale-vector-search/index.html-more-data,-more-problems", "fields": {"questions": {"assign": ["What is the challenge of real-time serving infrastructure for searching?", "What is FAANG?", "What is the pricing of Google Vertex AI Matching Engine?"]}}}
{"update": "id:blog-p:paragraph::blog/building-billion-scale-vector-search/index.html-building-cost-efficient-large-scale-vector-search", "fields": {"questions": {"assign": ["What are the observations around scaling vector search?", "What is a hybrid ANNS algorithm?", "What is the impact of observations on design?", "What are the challenges of using high-memory instances?", "What drives the costs of high-memory and high-compute instances?", "What are the benefits of higher network bandwidth in 2022 instances?"]}}}
{"update": "id:blog-p:paragraph::blog/building-billion-scale-vector-search/index.html-vespa\u2019s-value-proposition", "fields": {"questions": {"assign": ["What are Vespa primitives?"]}}}
{"update": "id:blog-p:paragraph::blog/building-billion-scale-vector-search/index.html-document-schema(s)", "fields": {"questions": {"assign": ["What data types does Vespa support?", "What is a Vespa schema?", "What are tensor and vector types?"]}}}
{"update": "id:blog-p:paragraph::blog/building-billion-scale-vector-search/index.html-crud-(create,-read,-update,-delete)-operations", "fields": {"questions": {"assign": ["What are real-time APIs?", "How do I delete documents?"]}}}
{"update": "id:blog-p:paragraph::blog/building-billion-scale-vector-search/index.html-searching-structured-and-unstructured-data-in-the-same-query-request", "fields": {"questions": {"assign": ["What is Vespa's query language?", "What kind of data can Vespa's query language search?", "Can Vespa's query language search structured and unstructured data?", "Is Vespa's query language efficient for billions of documents?", "Can Vespa's query language combine search over structured and unstructured data?", "What are the benefits of Vespa's query language compared to SQL?"]}}}
{"update": "id:blog-p:paragraph::blog/building-billion-scale-vector-search/index.html-efficient-vector-search", "fields": {"questions": {"assign": ["What is HNSW algorithm?", "What is ANNS?", "What is the purpose of Vespa's implementation of HNSW algorithm?", "Which vector datasets were used for verifying Vespa's implementation of HNSW?", "What is ann-benchmarks.com?", "Who is using Vespa's implementation of HNSW algorithm?", "What is the benefit of Vespa's implementation of HNSW algorithm?"]}}}
{"update": "id:blog-p:paragraph::blog/building-billion-scale-vector-search/index.html-highly-extensible-architecture", "fields": {"questions": {"assign": ["What does Vespa allow developers to do?", "Does Vespa support multiple content clusters?", "Can stateful resources be scaled independently with Vespa?"]}}}
{"update": "id:blog-p:paragraph::blog/building-billion-scale-vector-search/index.html-summary", "fields": {"questions": {"assign": ["What is CLIP?", "What is the ANN solution used?", "What is the advantage of storing most vector data on disk?", "What is the approach used for vector similarity operations?", "What does Vespa offer for serving latency and accuracy?"]}}}
{"update": "id:blog-p:paragraph::blog/vespa-on-arm64/index.html-", "fields": {"questions": {"assign": ["What architectures does Vespa support?", "Why is supporting ARM64 important?", "What are the performance differences between CPU architectures?", "How can developers use Vespa on a laptop with the M1 chipset?", "Is ARM64 available on Vespa Cloud?"]}}}
{"update": "id:blog-p:paragraph::blog/building-billion-scale-vector-search-part-two/index.html-", "fields": {"questions": {"assign": ["What is Huggingface?", "What are the challenges to building a vector search solution?", "What are the observations about billion-scale vector search systems?", "Why do few organizations need query serving latency much lower than the blink of an eye?", "How does query volume fluctuate daily?", "How does the observations impact the design of a billion-scale vector search solution?"]}}}
{"update": "id:blog-p:paragraph::blog/building-billion-scale-vector-search-part-two/index.html-dataset", "fields": {"questions": {"assign": ["What is the LAION-5B dataset?", "What is CLIP?", "What does Vespa sample application do?", "What is multi-modal search?", "What is StableDiffusion?", "What are derived datasets?", "What is text-to-image search?"]}}}
{"update": "id:blog-p:paragraph::blog/building-billion-scale-vector-search-part-two/index.html-search-features", "fields": {"questions": {"assign": ["What is CLIP encoding?", "How can text prompts be used in searching?", "What is LAION-5B dataset?", "What is the advantage of updating an index?", "What is the benefit of using aesthetic score?", "How can image metadata be used in filtering results?"]}}}
{"update": "id:blog-p:paragraph::blog/building-billion-scale-vector-search-part-two/index.html-designing-a-cost-efficient-large-scale-vector-search-solution", "fields": {"questions": {"assign": ["What is the tiered compute approach?", "What is the LAION-5B dataset?", "How can stateless container nodes help with auto-scaling?", "What is the MapReduce paradigm?"]}}}
{"update": "id:blog-p:paragraph::blog/building-billion-scale-vector-search-part-two/index.html-**hybrid-hnsw-if-with-pca**", "fields": {"questions": {"assign": ["What is the hybrid HNSW-Inverted-File method?", "How are centroids indexed in Vespa?", "What is the benefit of separating centroids as a separate Vespa document schema?", "Can Vespa's inverted indexes scale to billions of centroids?", "What is the throughput of searching 100s of millions of centroids on a single instance?", "How does reducing vector dimensionality affect the memory footprint and number of centroids that can be indexed per instance type?", "What is the difference between Vespa's previous work using HNSW-IF with a static vector dataset and this approach with separating centroids into a separate schema?", "How does separating centroids into a separate schema enable incremental indexing of new image data?"]}}}
{"update": "id:blog-p:paragraph::blog/building-billion-scale-vector-search-part-two/index.html-dimension-reduction-using-principal-component-analysis-(pca)", "fields": {"questions": {"assign": ["What is dimension reduction technique?", "How is PCA used in Vespa?", "What is the correlation analysis?", "What is the benefit of dimension reduction for centroid vectors?", "What is the benefit of using dimension reduction for image embeddings?"]}}}
{"update": "id:blog-p:paragraph::blog/building-billion-scale-vector-search-part-two/index.html-centroid-selection-and-centroid-schema", "fields": {"questions": {"assign": ["What is the centroid schema?", "What is the reduced vector field?", "What is the distance metric used?", "What is the advantage of using bfloat16?", "What are the HNSW indexing hyper-parameters?", "What tradeoff do the chosen HNSW indexing hyper-parameters provide?"]}}}
{"update": "id:blog-p:paragraph::blog/building-billion-scale-vector-search-part-two/index.html-laion-image-schema", "fields": {"questions": {"assign": ["What is image schema?", "What is LAION dataset?", "What is the tensor type used for storing reduced vectors?", "What is the document-summary vector-summary?", "What data is stored as indexed summary?", "What is the use of the centroids field?"]}}}
{"update": "id:blog-p:paragraph::blog/building-billion-scale-vector-search-part-two/index.html-stateless-container-re-ranking", "fields": {"questions": {"assign": ["What is the purpose of RankingSearcher?", "What is Protocol Buffers?", "How do stateless containers scale?", "What is coarse-level centroid retrieval?", "What does the RankingSearcher do?", "What does the searcher component do?"]}}}
{"update": "id:blog-p:paragraph::blog/building-billion-scale-vector-search-part-two/index.html-summary", "fields": {"questions": {"assign": ["What is PCA used for?", "What is billion-scale-image-search?", "What is query-time diversification?"]}}}
{"update": "id:blog-p:paragraph::blog/building-billion-scale-vector-search-part-two/index.html-footnotes", "fields": {"questions": {"assign": ["What is auto-scaling in Vespa?", "How does scaling stateful resources differ from scaling stateless resources?", "What is the process of activating replicas?", "How does data indexing change with scaling?", "What is the cost of scaling stateful resources?", "What are the limitations of scaling stateful resources?", "What is the impact of traffic volume on Vespa clusters?"]}}}
{"update": "id:blog-p:paragraph::blog/improving-product-search-with-ltr/index.html-", "fields": {"questions": {"assign": ["What is a neural ranking paradigm?", "What is lambdarank loss?", "What are the state-of-the-art models in product search ranking?", "What is the dataset used for product ranking?"]}}}
{"update": "id:blog-p:paragraph::blog/improving-product-search-with-ltr/index.html-dataset", "fields": {"questions": {"assign": ["What is the Shopping Queries Data Set?", "What is ESCI relevance?"]}}}
{"update": "id:blog-p:paragraph::blog/improving-product-search-with-ltr/index.html-english-train-split", "fields": {"questions": {"assign": ["How many queries does train split contain?", "What are query-item judgments?", "What can train split be used for?"]}}}
{"update": "id:blog-p:paragraph::blog/improving-product-search-with-ltr/index.html-english-test-split", "fields": {"questions": {"assign": ["How many queries are in the test split?", "What is the product judgment label distribution?", "What is the dataset's relevance?", "What does a large dataset allow?", "What is shown in the product ranking example?", "What is the task in optimizing ordering?", "What are the converted numeric labels?"]}}}
{"update": "id:blog-p:paragraph::blog/improving-product-search-with-ltr/index.html-indexing-the-dataset-with-vespa", "fields": {"questions": {"assign": ["What does the product data contain?", "How is text embedding supported in Vespa?"]}}}
{"update": "id:blog-p:paragraph::blog/improving-product-search-with-ltr/index.html-evaluation", "fields": {"questions": {"assign": ["What is multi-phased retrieval?", "What are diverse retrievers?", "What is cost-efficient retrieval ranking?", "What is 'learning to retrieve'?", "What are retrieval and ranking phases?", "What is the task of the official dataset evaluation metric?"]}}}
{"update": "id:blog-p:paragraph::blog/improving-product-search-with-ltr/index.html-baseline-zero-shot-ranking-models", "fields": {"questions": {"assign": ["What is Vespa\u2019s ranking framework?", "How many baseline ranking models?"]}}}
{"update": "id:blog-p:paragraph::blog/improving-product-search-with-ltr/index.html-random", "fields": {"questions": {"assign": ["What is Vespa\u2019s random rank-feature?", "What does the random rank-feature do?", "Can you give an example of a random rank feature?", "What values can be returned by the Vespa random rank-feature?", "How is the Vespa random rank-feature implemented?", "What is a pseudorandom number?", "What is the default rank-profile for Vespa?", "How many times is a pseudorandom number drawn during rank evaluation?"]}}}
{"update": "id:blog-p:paragraph::blog/improving-product-search-with-ltr/index.html-bm25---lexical-ranking", "fields": {"questions": {"assign": ["What is BM25?", "How many parameters does BM25 have?", "What is the BM25 scoring function?", "What is WAND?", "How can BM25 be accelerated?", "What fields are used in BM25?", "How does BM25 handle training?"]}}}
{"update": "id:blog-p:paragraph::blog/improving-product-search-with-ltr/index.html-vespa-nativerank---lexical-ranking", "fields": {"questions": {"assign": ["What is nativeRank?", "What is lexical ranking?", "What does nativeRank consider?", "What is the score range of nativeRank?", "What is the syntax for using nativeRank?", "What is the default text ranking function in Vespa?", "What is the difference between BM25 and nativeRank?", "What is the rank-profile for nativeRank?"]}}}
{"update": "id:blog-p:paragraph::blog/improving-product-search-with-ltr/index.html-vespa-fieldmatch---lexical-ranking", "fields": {"questions": {"assign": ["What is fieldMatch?", "What is the syntax for a fieldMatch rank profile?", "How is Vespa fieldMatch used?", "What is proximity in fieldMatch?", "Is fieldMatch computationally expensive?", "What is the relationship between Vespa nativeRank and fieldMatch?", "What is the purpose of re-ranking with fieldMatch?"]}}}
{"update": "id:blog-p:paragraph::blog/improving-product-search-with-ltr/index.html-vespa-semantic-ranking-using-vector-similarity---dense-retrieval", "fields": {"questions": {"assign": ["What is cosine similarity?", "What is the rank-profile semantic for?", "What is the input for the rank-profile semantic?", "What is the expression used in the first-phase of the rank-profile semantic?"]}}}
{"update": "id:blog-p:paragraph::blog/improving-product-search-with-ltr/index.html-vespa-semantic-ranking-using-vector-similarity---dense-retrieval", "fields": {"questions": {"assign": ["What is bert-base-uncased?", "What is the dimensionality of bert-base-uncased?", "What is the input for the rank-profile semantic?", "What is the relevancy measure used?", "What does the first-phase expression in the rank-profile semantic do?"]}}}
{"update": "id:blog-p:paragraph::blog/improving-product-search-with-ltr/index.html-vespa-hybrid---combining-lexical-and-semantic-ranking", "fields": {"questions": {"assign": ["What is `sentence-transformers`?", "How is the ranking model computed?", "What is the `query(alpha)` parameter?"]}}}
{"update": "id:blog-p:paragraph::blog/improving-product-search-with-ltr/index.html-zero-shot-baseline-results", "fields": {"questions": {"assign": ["What is the NDCG score?", "What is bert-base-uncased?", "What is semantic model 1?", "What is the recall parameter?", "What is the purpose of random baseline?", "Did the hybrid combination of ranking methods yield any improvement?"]}}}
{"update": "id:blog-p:paragraph::blog/improving-product-search-with-ltr/index.html-summary", "fields": {"questions": {"assign": ["What is a bi-encoder architecture?", "What is a cross-encoder similarity model?", "What is Gradient Boosting?", "What is LightGBM?", "What is XGBoost?", "What are ensemble ranking models?"]}}}
{"update": "id:blog-p:paragraph::blog/vespa-cloud-on-gcp/index.html-", "fields": {"questions": {"assign": ["What is Vespa Cloud?", "Where can I use Vespa Cloud?", "How do I add a GCP zone to my application?", "What are the benefits of using GCP zone for Vespa Cloud?", "What is the zone reference for Vespa Cloud?", "How long does it take to ramp up additional zones for Vespa Cloud?"]}}}
{"update": "id:blog-p:paragraph::blog/improving-product-search-with-ltr-part-two/index.html-", "fields": {"questions": {"assign": ["What is LTR?", "What is NDCG ranking metric?"]}}}
{"update": "id:blog-p:paragraph::blog/improving-product-search-with-ltr-part-two/index.html-dataset-splits", "fields": {"questions": {"assign": ["What is the English train split?", "What is the dev split?", "What is retained as train queries?", "Why hide the dev set during training?"]}}}
{"update": "id:blog-p:paragraph::blog/improving-product-search-with-ltr-part-two/index.html-ranking-models", "fields": {"questions": {"assign": ["What is the objective?", "What is the NDCG metric?", "How is the ranking score calculated?", "What are the two neural methods?", "What is pre-trained language model used for?"]}}}
{"update": "id:blog-p:paragraph::blog/improving-product-search-with-ltr-part-two/index.html-neural-cross-encoder-using-pre-trained-language-models", "fields": {"questions": {"assign": ["What is cross-encoding?", "How can we train cross-encoders?", "What is MSE Loss?", "How can we use cross-encoder models in Vespa?"]}}}
{"update": "id:blog-p:paragraph::blog/improving-product-search-with-ltr-part-two/index.html-choosing-the-transformer-model-and-model-inputs", "fields": {"questions": {"assign": ["What is MiniLM?", "What impacts deployment cost?", "What is a CPU-friendly model?", "What is the maximum input length?", "How long does training take?", "What are some alternative input permutations?", "Why use only product titles as input?"]}}}
{"update": "id:blog-p:paragraph::blog/improving-product-search-with-ltr-part-two/index.html-representing-cross-encoders-in-vespa", "fields": {"questions": {"assign": ["What is the function of title_tokens field?", "What are the input functions of rank-profile?", "What does the cross function do in rank-profile?", "What is the purpose of the ONNX export utility script?"]}}}
{"update": "id:blog-p:paragraph::blog/improving-product-search-with-ltr-part-two/index.html-neural-bi-encoder-using-pre-trained-language-models", "fields": {"questions": {"assign": ["What is the bi-encoder approach?", "What is the role of the Transformer model in bi-encoder approach?", "What is the difference between two-tower and cross-encoder approach?", "What is the output pooling strategy in bi-encoder approach?", "What should be considered when selecting a pre-trained model for bi-encoder?", "What determines the quality of the model in bi-encoder approach?", "What product fields are used in bi-encoder approach?"]}}}
{"update": "id:blog-p:paragraph::blog/improving-product-search-with-ltr-part-two/index.html-representing-bi-encoders-in-vespa", "fields": {"questions": {"assign": ["What is a bi-encoder model?", "What is text embedding made easy?", "Can Vespa produce query and document-side embeddings?", "What is the link to the full product schema?"]}}}
{"update": "id:blog-p:paragraph::blog/improving-product-search-with-ltr-part-two/index.html-evaluation", "fields": {"questions": {"assign": ["What is NDCG?", "What is dataset evaluation metric?", "What is precision-oriented metric?", "What is the perfect magic retriever?"]}}}
{"update": "id:blog-p:paragraph::blog/improving-product-search-with-ltr-part-two/index.html-results", "fields": {"questions": {"assign": ["What is the NDCG score?", "Why did the bi-encoder perform worse?", "Does text vectorization always perform better?", "What is the focus of the later post?", "What is the difference between learning to retrieve and learning to rank?"]}}}
{"update": "id:blog-p:paragraph::blog/improving-product-search-with-ltr-part-two/index.html-summary", "fields": {"questions": {"assign": ["What are the two neural ranking methods introduced?", "How can I reproduce the neural training?", "Is the work open-sourced?"]}}}
{"update": "id:blog-p:paragraph::blog/improving-product-search-with-ltr-part-two/index.html-next-blog", "fields": {"questions": {"assign": ["What is learning to rank?", "What is Lambdarank?", "What is Gradient Boosting?", "What kind of data works well with GB models?", "What features are used with GB model?", "What frameworks are supported by Vespa for GBDT models?"]}}}
{"update": "id:blog-p:paragraph::blog/improving-product-search-with-ltr-part-three/index.html-", "fields": {"questions": {"assign": ["What is GBDT?", "What frameworks does Vespa support for importing models?"]}}}
{"update": "id:blog-p:paragraph::blog/improving-product-search-with-ltr-part-three/index.html-ranking-models", "fields": {"questions": {"assign": ["What is the objective of the ranking model?", "What are GBDT models?", "What are some popular GBDT frameworks?", "What is multi-objective optimization?", "What is the importance of prediction explainability?", "How does GBDT compare to neural networks in terms of training time?", "What are some advantages of GBDT algorithm?"]}}}
{"update": "id:blog-p:paragraph::blog/improving-product-search-with-ltr-part-three/index.html-model-features", "fields": {"questions": {"assign": ["What are tree-based learning methods?", "What is feature engineering?", "What are the four classes of features?"]}}}
{"update": "id:blog-p:paragraph::blog/improving-product-search-with-ltr-part-three/index.html-contextual-query-features", "fields": {"questions": {"assign": ["What are query time contextual features?"]}}}
{"update": "id:blog-p:paragraph::blog/improving-product-search-with-ltr-part-three/index.html-document-features", "fields": {"questions": {"assign": ["What are independent features?", "What can be independent features in e-commerce?", "What are some examples of independent features in e-commerce?"]}}}
{"update": "id:blog-p:paragraph::blog/improving-product-search-with-ltr-part-three/index.html-online-match-features-(query-\\*-document)", "fields": {"questions": {"assign": ["Are there examples of tensor computation?", "What is the sparse dot product?", "What is product category?", "Where are the tensor computation examples?"]}}}
{"update": "id:blog-p:paragraph::blog/improving-product-search-with-ltr-part-three/index.html-aggregate-features", "fields": {"questions": {"assign": ["What are aggregate features?", "What is near real-time processing?", "How can aggregate features help cold-start problems?"]}}}
{"update": "id:blog-p:paragraph::blog/improving-product-search-with-ltr-part-three/index.html-representing-features-in-vespa", "fields": {"questions": {"assign": ["What is Vespa's ranking framework?", "What are the built-in ranking features?", "How can developers express domain-specific features?", "How do other ranking architectures differ from Vespa?", "What are in-place partial updates?", "How does Vespa handle partial updates compared to search engines built on Apache Lucene?"]}}}
{"update": "id:blog-p:paragraph::blog/improving-product-search-with-ltr-part-three/index.html-gathering-features-from-vespa", "fields": {"questions": {"assign": ["What is rank-profile features?", "What is bi_encoder() function?", "What does match-features block define?", "What is Vespa recall parameter?", "What is feature logging infrastructure?", "What are the built-in Vespa text-matching features used for GBDT model training?", "What routine fetches computed feature values?", "What is displayed in the sample of tabular feature data?"]}}}
{"update": "id:blog-p:paragraph::blog/improving-product-search-with-ltr-part-three/index.html-gradient-boosting-decision-trees-(gbdt)", "fields": {"questions": {"assign": ["What is GBDT?", "What is the purpose of decision trees?", "What are the different learning objectives for GBDT?", "What are the popular implementations of GBDT?", "How does Vespa use GBDT models for ranking?", "What is the structure of a decision tree?", "How is the final score calculated for a GBDT model?", "What is the format of the ensemble of models from different frameworks in Vespa?"]}}}
{"update": "id:blog-p:paragraph::blog/improving-product-search-with-ltr-part-three/index.html-training-gbdt-models", "fields": {"questions": {"assign": ["What is overfitting with GBDT?", "What is feature ablation?", "What is a feature importance plot?", "How can we reduce computational complexity?", "What is a latency SLA?"]}}}
{"update": "id:blog-p:paragraph::blog/improving-product-search-with-ltr-part-three/index.html-gbdt-models-and-vespa-serving-performance", "fields": {"questions": {"assign": ["What is ML model training?", "What is GBDT model?", "What affects computational complexity?"]}}}
{"update": "id:blog-p:paragraph::blog/improving-product-search-with-ltr-part-three/index.html-the-number-of-documents-exposed-to-the-gbdt-model", "fields": {"questions": {"assign": ["What affects computational cost?", "What is multiple ranking phases?", "What is GBDT?", "How is search ranking parallelizable?", "What is Vespa's ability to use multiple threads?", "How does Vespa reduce serving latency?", "What is the most significant parameter?", "What is the computational cost with ranking?"]}}}
{"update": "id:blog-p:paragraph::blog/improving-product-search-with-ltr-part-three/index.html-features-and-feature-complexity", "fields": {"questions": {"assign": ["What is rank tracing?", "What is the most expensive feature?"]}}}
{"update": "id:blog-p:paragraph::blog/improving-product-search-with-ltr-part-three/index.html-the-number-of-trees-and-tree-depth", "fields": {"questions": {"assign": ["How does number of trees impact performance?", "What is the role of LLVM in Vespa?", "How long does inference take for a forest of 300-500 trees?", "Can inference be parallelized in Vespa?", "What is the impact of feature complexity on performance?", "How is ranking expressions compiled in Vespa?", "What is the expected inference time for 1000 documents?", "What is the performance impact of the number of documents ranked?"]}}}
{"update": "id:blog-p:paragraph::blog/improving-product-search-with-ltr-part-three/index.html-ranking-evaluation", "fields": {"questions": {"assign": ["What is the product ranking dataset?", "What are the two feature sets?", "What is the simple feature set?", "What is the full feature set?", "What is included in the full feature set?"]}}}
{"update": "id:blog-p:paragraph::blog/improving-product-search-with-ltr-part-three/index.html-the-simple-feature-set", "fields": {"questions": {"assign": ["What is bi_encoder?"]}}}
{"update": "id:blog-p:paragraph::blog/improving-product-search-with-ltr-part-three/index.html-the-full-feature-set", "fields": {"questions": {"assign": ["What is NDCG score?", "What is LightGBM?", "Is LightGBM faster than XGBoost?", "Does having more features improve accuracy?", "What impacts serving-related costs?", "How can we save serving-related costs?"]}}}
{"update": "id:blog-p:paragraph::blog/improving-product-search-with-ltr-part-three/index.html-summary", "fields": {"questions": {"assign": ["What is GBDT?", "What is XGBoost?", "What is LightGBM?", "What can be done with the notebooks?", "What is NDCG score?", "How is the test query set evaluated?"]}}}
{"update": "id:blog-p:paragraph::blog/improving-product-search-with-ltr-part-three/index.html-next-blog", "fields": {"questions": {"assign": ["What is the topic of the next blog post?", "What is end-to-end retrieval?", "How many products are in the dataset?", "What challenges come with end-to-end retrieval?", "How can train judgments be used?", "Can the method achieve 100% fit?", "Can the method still generalize?"]}}}
{"update": "id:blog-p:paragraph::blog/improving-zero-shot-ranking-with-vespa/index.html-", "fields": {"questions": {"assign": ["What is zero-shot ranking?"]}}}
{"update": "id:blog-p:paragraph::blog/improving-zero-shot-ranking-with-vespa/index.html-introduction", "fields": {"questions": {"assign": ["What are pre-trained neural language models?", "What are the methods for using pre-trained language models?", "What is transformer ranking blog series?", "What is zero-shot text ranking?", "How does zero-shot ranking work?"]}}}
{"update": "id:blog-p:paragraph::blog/improving-zero-shot-ranking-with-vespa/index.html-information-retrieval-evaluation", "fields": {"questions": {"assign": ["What is IR evaluation?", "Why is measuring effectiveness important?", "What are standard IR metrics?", "What is nDCG@10?", "What is Precision@10?", "What is Recall@100?", "What is LGTM@10?"]}}}
{"update": "id:blog-p:paragraph::blog/improving-zero-shot-ranking-with-vespa/index.html-evaluating-ranking-models-in-a-zero-shot-setting", "fields": {"questions": {"assign": ["What is BEIR benchmark?", "What is nDCG@10?", "What are some BEIR datasets?", "How many test queries in NQ dataset?", "What is TREC-COVID dataset?", "What is the ranking metric used?", "Where to download BEIR datasets?", "How to obtain overall nDCG@10 score?"]}}}
{"update": "id:blog-p:paragraph::blog/improving-zero-shot-ranking-with-vespa/index.html-zero-shot-evaluation-of-models-trained-on-natural-questions", "fields": {"questions": {"assign": ["What is BEIR?", "What is MS MARCO?", "What is NQ?", "What is the common BEIR experimental setup?", "How many training queries does MS MARCO have?", "What is the main reason for using MS MARCO labels?", "What is the other setup variant highlighted in the document?"]}}}
{"update": "id:blog-p:paragraph::blog/improving-zero-shot-ranking-with-vespa/index.html-ms-marco-sample-queries", "fields": {"questions": {"assign": ["Who was William Bradford?", "What was Plymouth Colony?", "What is the definition of preventive?", "How to create color overlay in Photoshop?"]}}}
{"update": "id:blog-p:paragraph::blog/improving-zero-shot-ranking-with-vespa/index.html-natural-questions-(nq)-sample-queries", "fields": {"questions": {"assign": ["What is the Natural Questions dataset?", "How is the DPR model trained?", "What is dense retrieval over vector text representation?", "What did DPR outperform on NQ?"]}}}
{"update": "id:blog-p:paragraph::blog/improving-zero-shot-ranking-with-vespa/index.html-in-domain-effectiveness-versus-out-of-domain-in-a-zero-shot-setting", "fields": {"questions": {"assign": ["What is DPR?", "What is in-domain evaluation?", "What is a zero-shot setting?", "What is out-of-domain evaluation?", "What is BEIR?", "Do dense embeddings models outperform the BM25 baseline?"]}}}
{"update": "id:blog-p:paragraph::blog/improving-zero-shot-ranking-with-vespa/index.html-summary", "fields": {"questions": {"assign": ["What is BEIR benchmark?", "What is zero-shot IR?", "What is out-of-domain IR?"]}}}
{"update": "id:blog-p:paragraph::blog/improving-zero-shot-ranking-with-vespa/index.html-next-blog-post-in-this-series", "fields": {"questions": {"assign": ["What is zero-shot ranking?", "What is a hybrid ranking model?", "What is BEIR benchmark?", "How does the hybrid model overcome limitations?", "What is the effectiveness of hybrid model?"]}}}
{"update": "id:blog-p:paragraph::blog/improving-zero-shot-ranking-with-vespa-part-two/index.html-", "fields": {"questions": {"assign": ["What is the BEIR benchmark?", "What is zero-shot ranking?", "What is the hybrid approach for ranking?", "How does the hybrid approach perform?", "What are few-shot methods for ranking?", "What do the few-shot methods generate?"]}}}
{"update": "id:blog-p:paragraph::blog/improving-zero-shot-ranking-with-vespa-part-two/index.html-establishing-a-strong-baseline", "fields": {"questions": {"assign": ["What is BM25?", "What is BEIR?", "What is nDCG@10?", "What are BM25 hyperparameters?", "How does Vespa implement BM25?", "How did Vespa BM25 compare to BEIR Paper?"]}}}
{"update": "id:blog-p:paragraph::blog/improving-zero-shot-ranking-with-vespa-part-two/index.html-evaluating-vespa-ranking-models-in-a-zero-shot-setting", "fields": {"questions": {"assign": ["What are the two neural ranking models?", "How do the neural models compare to the BM25 baseline?"]}}}
{"update": "id:blog-p:paragraph::blog/improving-zero-shot-ranking-with-vespa-part-two/index.html-vespa-colbert", "fields": {"questions": {"assign": ["What is Vespa ColBERT?", "How is ColBERT model different from original?", "What is the MaxSim?", "What are the inputs for ColBERT?", "How are ColBERT vectors stored?"]}}}
{"update": "id:blog-p:paragraph::blog/improving-zero-shot-ranking-with-vespa-part-two/index.html-\u200b\u200bresults-and-analysis", "fields": {"questions": {"assign": ["What is Vespa ColBERT?", "What is BM25 baseline?", "How does Vespa Hybrid perform?", "Which Vespa model performs the best?", "What is nDCG@10?"]}}}
{"update": "id:blog-p:paragraph::blog/improving-zero-shot-ranking-with-vespa-part-two/index.html-comparing-hybrid-zero-shot-with-few-shot-methods", "fields": {"questions": {"assign": ["What is the Promptagator approach?", "What is FLAN?", "What is the nDCG@10 score?", "How does TAS-B compare to Vespa models?", "What is the difference between single-vector and cross-encoder models?", "Can Vespa hybrid model be used for cross-encoder models?", "What is InPars v2?"]}}}
{"update": "id:blog-p:paragraph::blog/improving-zero-shot-ranking-with-vespa-part-two/index.html-deploying-hybrid-ranking-models-to-production", "fields": {"questions": {"assign": ["What is CORD-19?", "What are the result facets in demo search?", "What is the latency for the retrieval and ranking pipeline?"]}}}
{"update": "id:blog-p:paragraph::blog/improving-zero-shot-ranking-with-vespa-part-two/index.html-summary", "fields": {"questions": {"assign": ["What is zero-shot ranking?", "What is a hybrid ranking model?", "How effective is the unique model?", "What are the in-domain adoption techniques?", "What are the Vespa related talks?"]}}}
{"update": "id:blog-p:paragraph::blog/improving-text-ranking-with-few-shot-prompting/index.html-", "fields": {"questions": {"assign": ["What is the approach used for generating labeled data?", "How does the approach generate synthetic queries?", "What is the potential impact of the approach on information retrieval?"]}}}
{"update": "id:blog-p:paragraph::blog/improving-text-ranking-with-few-shot-prompting/index.html-introduction", "fields": {"questions": {"assign": ["What is the Transformer architecture?", "What is MS MARCO relevance dataset?", "What are click models?", "What bias issues do click-data models suffer from?", "What are generative large language models?", "How can LLMs generate training data?", "How can ranking models be trained without interaction data?", "What is the potential of Transformer-based models?"]}}}
{"update": "id:blog-p:paragraph::blog/improving-text-ranking-with-few-shot-prompting/index.html-generative-large-language-models-(llms)", "fields": {"questions": {"assign": ["What is GPT-3?", "What is prompt engineering?", "What is FLAN-T5?", "What is the difference between FM and BERT ranking models?", "What is unsupervised learning?", "What is the Apache 2.0 License?", "What is the purpose of fine-tuning?", "What models have been open-sourced by Google?"]}}}
{"update": "id:blog-p:paragraph::blog/improving-text-ranking-with-few-shot-prompting/index.html-generating-labeled-data-via-instruction-prompting-large-language-models", "fields": {"questions": {"assign": ["What are large language models?", "What is the trend in IR research?", "What is the purpose of instruction prompts in LLMs?", "How are synthetic queries generated?", "What is the significance of ranked queries by an RM?", "What is the benefit of offline inference with LLMs?", "How are negative examples generated?"]}}}
{"update": "id:blog-p:paragraph::blog/improving-text-ranking-with-few-shot-prompting/index.html-experiments", "fields": {"questions": {"assign": ["What is the trec-covid dataset?", "What is the experimental setup?", "What is the CORD-19 dataset?", "Where can the notebooks be found?"]}}}
{"update": "id:blog-p:paragraph::blog/improving-text-ranking-with-few-shot-prompting/index.html-synthetic-query-generation", "fields": {"questions": {"assign": ["What is prompt engineering?", "How many synthetic queries were generated?", "What is the limit for number of examples?", "How many documents had synthetic queries generated?"]}}}
{"update": "id:blog-p:paragraph::blog/improving-text-ranking-with-few-shot-prompting/index.html-query-consistency-checking", "fields": {"questions": {"assign": ["What is zero-shot hybrid ranking mode?", "What is query consistency checking?", "How is the generated query retained?", "How many positive query-document pairs after consistency filter?", "What is the retention percentage?", "What is flan-t5-xl and prompt combination?", "What is Vespa dynamic summary feature?", "What is the input to the next step?"]}}}
{"update": "id:blog-p:paragraph::blog/improving-text-ranking-with-few-shot-prompting/index.html-rank-model-training", "fields": {"questions": {"assign": ["How many trainable parameters?"]}}}
{"update": "id:blog-p:paragraph::blog/improving-text-ranking-with-few-shot-prompting/index.html-evaluation-&-results", "fields": {"questions": {"assign": ["What is the trec-covid dataset?", "What is nDCG@10?", "What is PROMPTAGTOR model?", "What is the result with synthetic queries?", "What is the result with unsupervised BM25?", "What is OpenAI's GPT embedding paper?", "What is the nDCG@10 score in OpenAI's GPT XL embeddings paper?"]}}}
{"update": "id:blog-p:paragraph::blog/improving-text-ranking-with-few-shot-prompting/index.html-deploying-to-production", "fields": {"questions": {"assign": ["What are the advantages of cross-encoders?", "What is the downside of cross-encoders?", "What is the trick deployed to reduce model input sequence?", "How is dynamic abstract summarization helpful in reducing the sequence length?", "What is the re-ranking depth limit?", "Where is the trained model deployed?", "What is the website for the demo site?", "What ranking models are available on the demo site?"]}}}
{"update": "id:blog-p:paragraph::blog/improving-text-ranking-with-few-shot-prompting/index.html-conclusion", "fields": {"questions": {"assign": ["What is synthetic query generation?", "What notebooks are open-sourced?", "What is included in the training data?"]}}}
{"update": "id:blog-p:paragraph::blog/improving-text-ranking-with-few-shot-prompting/index.html-references", "fields": {"questions": {"assign": ["What is InPars?", "What is Promptagator?", "What is zero-shot question generation?", "What is the purpose of InPars?", "What are the benefits of InPars?", "What is InPars-Light?", "What is the goal of Promptagator?"]}}}
{"update": "id:blog-p:paragraph::blog/gpu-accelerated-ml-inference-in-vespa-cloud/index.html-", "fields": {"questions": {"assign": ["Can Vespa evaluate ONNX models with GPU acceleration?"]}}}
{"update": "id:blog-p:paragraph::blog/gpu-accelerated-ml-inference-in-vespa-cloud/index.html-vespa-cloud", "fields": {"questions": {"assign": ["How to enable GPU instances?", "What is services.xml?", "What is ONNX inference options?", "How to configure GPU models?", "What is Vespa Cloud?", "What are the pricing details for GPU?", "How does Vespa Cloud provision GPU instances?", "What is the syntax for GPU settings in services.xml?"]}}}
{"update": "id:blog-p:paragraph::blog/gpu-accelerated-ml-inference-in-vespa-cloud/index.html-open-source-vespa", "fields": {"questions": {"assign": ["What is the GPU support in Vespa?", "How can I configure GPUs in Vespa?", "Does Vespa support GPUs in containers?"]}}}
{"update": "id:blog-p:paragraph::blog/gpu-accelerated-ml-inference-in-vespa-cloud/index.html-cord-19-application-benchmark", "fields": {"questions": {"assign": ["What is the benchmark measuring?", "What is CORD-19?", "What configurations were compared?"]}}}
{"update": "id:blog-p:paragraph::blog/gpu-accelerated-ml-inference-in-vespa-cloud/index.html-results", "fields": {"questions": {"assign": ["What are the latency numbers for 2 client GPU instance?", "What is the QPS for 4 client GPU instance?", "What is the 95 percentile latency for 2 client CPU instance?", "What is the GPU utilization for 4 client GPU instance?", "What is the CPU utilization for 8 client CPU instance?"]}}}
{"update": "id:blog-p:paragraph::blog/gpu-accelerated-ml-inference-in-vespa-cloud/index.html-conclusion", "fields": {"questions": {"assign": ["What is the throughput using a GPU?", "What is the average request latency using a CPU?"]}}}
{"update": "id:blog-p:paragraph::blog/private-regional-endpoints/index.html-", "fields": {"questions": {"assign": ["What are Vespa Cloud endpoints?", "What is the difference between public and private endpoints?"]}}}
{"update": "id:blog-p:paragraph::blog/private-regional-endpoints/index.html-why-use-private-endpoints", "fields": {"questions": {"assign": ["What are private endpoints?", "What is reduced with private endpoints?", "What is the benefit of private endpoints?", "Can public endpoints be disabled?", "What is the effect of private endpoints on latency?", "How does private endpoint work?", "What is the difference between public and private routing?"]}}}
{"update": "id:blog-p:paragraph::blog/private-regional-endpoints/index.html-how-to-set-up-private-endpoints-in-vespa-cloud", "fields": {"questions": {"assign": ["What are the steps to configure Vespa?", "What is a private endpoint service?", "How do I set up a VPC endpoint?", "What is AWS PrivateLink?", "What is GCP Private Service Connect?"]}}}
{"update": "id:blog-p:paragraph::blog/semantic-search-with-multi-vector-indexing/index.html-background", "fields": {"questions": {"assign": ["How do embedding models limit input length?", "What is minimum distance aggregation?", "Why is indexing paragraphs challenging?", "What is the disadvantage of indexing paragraphs?", "What is the benefit of encoding objects in a vector space?", "How can developers overcome input length limitations for embedding text data?"]}}}
{"update": "id:blog-p:paragraph::blog/semantic-search-with-multi-vector-indexing/index.html-relationships-and-fan-out", "fields": {"questions": {"assign": ["What is fan-out relationship?", "What happens when article changes?", "How to delete articles and associated paragraphs?", "How to update article-level meta field?", "What is the process of re-processing articles into paragraphs?", "What is paragraph index?", "What are orphaned paragraphs?", "What is the impact of updating article-level meta field on paragraphs?"]}}}
{"update": "id:blog-p:paragraph::blog/semantic-search-with-multi-vector-indexing/index.html-result-presentation", "fields": {"questions": {"assign": ["What is the unit of retrieval?", "What is the complication with the unit of retrieval?", "How to link to the source text?", "What is minimal embedding distance?", "How to present search results?", "Can search Wikipedia articles be linked?", "What is the challenge with linking to chunked text?"]}}}
{"update": "id:blog-p:paragraph::blog/semantic-search-with-multi-vector-indexing/index.html-result-diversity", "fields": {"questions": {"assign": ["Why is diversity important for retrieval?", "What is retrieval-augmented QA?"]}}}
{"update": "id:blog-p:paragraph::blog/semantic-search-with-multi-vector-indexing/index.html-constrained-nearest-neighbor-search", "fields": {"questions": {"assign": ["What is constrained nearest neighbor search?", "What is the duplication factor?"]}}}
{"update": "id:blog-p:paragraph::blog/semantic-search-with-multi-vector-indexing/index.html-hybrid-ranking", "fields": {"questions": {"assign": ["What is the advantage of using hybrid retrieval?", "What is multi-vector indexing?", "What fields are important for efficient hybrid retrieval?", "What Vespa version is required for multi-vector indexing?", "What are some use cases for multi-vector indexing?", "What is the implementation of multi-vector indexing?"]}}}
{"update": "id:blog-p:paragraph::blog/semantic-search-with-multi-vector-indexing/index.html-using-multi-vector-hnsw-indexing-with-vespa", "fields": {"questions": {"assign": ["What is multi-vector indexing?", "How do developers configure multi-vector indexing?", "What is the sample application for multi-vector indexing?"]}}}
{"update": "id:blog-p:paragraph::blog/semantic-search-with-multi-vector-indexing/index.html-schema", "fields": {"questions": {"assign": ["What is Vespa's schema definition language?", "What is the benefit of using a mapped-indexed tensor?", "What is the content of the 'wiki' schema?", "How do length-limited embedding models affect developers?", "What is the purpose of the paragraph_embeddings field?", "What is the field type of the 'paragraphs' field?", "What is a tensor-type definition?", "What is a classic map data structure?"]}}}
{"update": "id:blog-p:paragraph::blog/semantic-search-with-multi-vector-indexing/index.html-json-feed", "fields": {"questions": {"assign": ["What is Vespa JSON feed format?", "What does 'paragraph_embeddings' contain?", "How can developers map vectors to paragraphs?", "What is the use of 'paragraph_embeddings'?", "How can text chunking strategy be controlled?"]}}}
{"update": "id:blog-p:paragraph::blog/semantic-search-with-multi-vector-indexing/index.html-native-embedding-integration", "fields": {"questions": {"assign": ["What is text embedding?", "What is the schema for wiki?", "What is paragraph_embeddings?", "What is the distance metric?", "What is the indexing for paragraph_embeddings?", "What is the field type for paragraphs?"]}}}
{"update": "id:blog-p:paragraph::blog/semantic-search-with-multi-vector-indexing/index.html-querying", "fields": {"questions": {"assign": ["What is native embedder functionality?", "What is the targetHits annotation?", "What is the issue with a paragraph index?", "How to overcome the article diversity issue?"]}}}
{"update": "id:blog-p:paragraph::blog/semantic-search-with-multi-vector-indexing/index.html-hybrid-search", "fields": {"questions": {"assign": ["What is the hybrid combination?", "What is userQuery()?", "What is nearestNeighbor()?", "What is the purpose of multiple nearestNeighbor() operators?", "What should developers know about nearestNeighbor()?", "What is the purpose of semantic search?"]}}}
{"update": "id:blog-p:paragraph::blog/semantic-search-with-multi-vector-indexing/index.html-ranking", "fields": {"questions": {"assign": ["What is declarative rank expressions?", "What is the closest rank feature?", "How can Vespa compute distance aggregates?", "What is the match-features in Vespa ranking?", "What is the output of the closest feature?", "Can distance(dimension,name) rank feature support mapped-indexed tensor fields?", "What is the purpose of labeled nearestNeighbor query operators?", "How does the semantic rank-profile work?"]}}}
{"update": "id:blog-p:paragraph::blog/semantic-search-with-multi-vector-indexing/index.html-result-presentation-and-snippeting", "fields": {"questions": {"assign": ["Does Vespa support snippeting?", "What are dynamic summaries in Vespa?", "Can Vespa highlight query terms?", "What is *closest* in Vespa?", "What is the benefit of using Vespa for presenting search results?", "What does Vespa support in string fields?"]}}}
{"update": "id:blog-p:paragraph::blog/semantic-search-with-multi-vector-indexing/index.html-implementation", "fields": {"questions": {"assign": ["What is HNSW index?", "What is the purpose of the HNSW index?", "What is a graph node?", "What is the structure mapping from docid to nodeids?", "What is the vector data structure used?", "How does HNSW index support multiple vectors per document?"]}}}
{"update": "id:blog-p:paragraph::blog/semantic-search-with-multi-vector-indexing/index.html-single-vector-per-document", "fields": {"questions": {"assign": ["What is an indexed dimension?"]}}}
{"update": "id:blog-p:paragraph::blog/semantic-search-with-multi-vector-indexing/index.html-multiple-vectors-per-document", "fields": {"questions": {"assign": ["What is a graph node?", "What is vectorid used for?", "How is the greedy search algorithm altered?", "What is the mapping used for?"]}}}
{"update": "id:blog-p:paragraph::blog/semantic-search-with-multi-vector-indexing/index.html-performance-considerations", "fields": {"questions": {"assign": ["What is the wikipedia-22-12-simple-embeddings dataset?", "What is the tensor field type for Paragraph?", "What is the angular distance metric?", "What are the performance test results?"]}}}
{"update": "id:blog-p:paragraph::blog/semantic-search-with-multi-vector-indexing/index.html-unlocking-multi-vector-tensor-indexing-use-cases", "fields": {"questions": {"assign": ["What is multi-vector representation?", "What use cases are unlocked?"]}}}
{"update": "id:blog-p:paragraph::blog/semantic-search-with-multi-vector-indexing/index.html-colbert-end-to-end-retrieval", "fields": {"questions": {"assign": ["What is ColBERT?", "What is a multi-vector representation model?", "What is the difference between single and multi-vector models?", "What is the benefit of using a multi-vector model?", "What is ColBERT used for?", "What kind of indexing support does ColBERT have?", "How does Vespa support retrieval using ColBERT?", "Can ColBERT only be used as a re-ranking model with Vespa?"]}}}
{"update": "id:blog-p:paragraph::blog/semantic-search-with-multi-vector-indexing/index.html-word2vec", "fields": {"questions": {"assign": ["What is Word2vec?", "What is multi-vector indexing?", "How does Word2vec work?", "What are the benefits of Word2vec?", "Can Vespa represent word vectors?", "How are word vectors contextualized?", "How is Word2vec different from Transformers?"]}}}
{"update": "id:blog-p:paragraph::blog/semantic-search-with-multi-vector-indexing/index.html-multi-modal-product-search", "fields": {"questions": {"assign": ["What is multi-vector indexing?", "What is CLIP?", "What is the use of multi-vector indexing in e-commerce?", "How does Vespa multi-vector indexing work?", "What are the benefits of using multi-vector indexing for e-commerce?", "What kind of fields can use multi-vector indexing?", "What is ML powered ranking function?"]}}}
{"update": "id:blog-p:paragraph::blog/semantic-search-with-multi-vector-indexing/index.html-summary", "fields": {"questions": {"assign": ["What are the challenges with Transformer-based vector models?", "What is Vespa's multi-vector HNSW indexing?", "How does Vespa simplify the process of fitting long text documents?", "What is the Vespa multi-vector indexing sample application?", "What version of Vespa is required for multi-vector indexing?", "What is the computational training budget increase for using 256 wordpiece tokens?", "What is the quadratic self-attention complexity?"]}}}
{"update": "id:blog-p:paragraph::blog/tailoring-frozen-embeddings-with-vespa/index.html-", "fields": {"questions": {"assign": ["What are deep-learned embeddings?", "What is the purpose of frozen models?", "How can frozen embeddings be tailored?"]}}}
{"update": "id:blog-p:paragraph::blog/tailoring-frozen-embeddings-with-vespa/index.html-background", "fields": {"questions": {"assign": ["What is a latent embedding space?", "How can embedding representations be used?", "What are the three ways to introduce embedding representations?", "What are the training and inference costs?", "What is the importance of indexing the output vector embedding?"]}}}
{"update": "id:blog-p:paragraph::blog/tailoring-frozen-embeddings-with-vespa/index.html-frozen-embeddings-to-the-rescue", "fields": {"questions": {"assign": ["What are frozen foundational embeddings?", "How do frozen models embed data?", "What is the benefit of using frozen embeddings?", "What are the three methods of tailoring frozen embeddings?", "What is two-tower embedding model?", "What are simple query embedding transformations?", "What is the practical property of D representation in frozen embeddings?"]}}}
{"update": "id:blog-p:paragraph::blog/tailoring-frozen-embeddings-with-vespa/index.html-two-tower-models", "fields": {"questions": {"assign": ["What is a two-tower architecture?", "What is a frozen tower?", "What does Vespa allow with embedding models?", "What is the advantage of frozen embeddings?", "How do developers fine-tune embedding models in Vespa?"]}}}
{"update": "id:blog-p:paragraph::blog/tailoring-frozen-embeddings-with-vespa/index.html-simple-embedding-transformation", "fields": {"questions": {"assign": ["What is linear embedding transformation?", "How is linear layer added?", "What is transform_query function?", "What is the purpose of learned weights matrix?", "How are the learned weights exported?", "What is the purpose of a weight tensor per user?"]}}}
{"update": "id:blog-p:paragraph::blog/tailoring-frozen-embeddings-with-vespa/index.html-advanced-transformation-using-deep-neural-networks", "fields": {"questions": {"assign": ["What is CustomEmbeddingSimilarity?", "What is the role of DNN in customization?", "What is the purpose of nn.Linear?", "What is the purpose of torch.cat()?", "What is the purpose of torch.sigmoid()?"]}}}
{"update": "id:blog-p:paragraph::blog/tailoring-frozen-embeddings-with-vespa/index.html-export-to-onnx-for-inference-with-vespa", "fields": {"questions": {"assign": ["What is the custom similarity model?", "What format is the model exported to?", "What is ONNX?", "How does Vespa support ranking with ONNX?", "What is the rank-profile for the custom similarity model?", "What is a second-phase expression?", "How does Vespa handle deployment of ranking and embedding models?"]}}}
{"update": "id:blog-p:paragraph::blog/tailoring-frozen-embeddings-with-vespa/index.html-summary", "fields": {"questions": {"assign": ["What are frozen models?", "What are custom embeddings?"]}}}
